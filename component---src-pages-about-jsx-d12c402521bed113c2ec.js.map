{"version":3,"sources":["webpack:///./src/components/SEO/SocialSEO.jsx","webpack:///./src/components/About/About.jsx","webpack:///./src/pages/about.jsx","webpack:///./src/components/SEO/SEO.jsx"],"names":["SocialSEO","render","react_default","a","createElement","Fragment","SEO","Object","assign","addiitionalJsonLD","@context","@type","name","config","userName","url","siteUrl","image","userAvatar","email","userLinks","find","linkInfo","label","sameAs","filter","external","map","this","props","Component","About","className","Card_default","src","alt","CardText_default","userDescription","UserLinks","labeled","SEO_SocialSEO","AboutPage","layout","location","Helmet_default","siteTitle","rel","href","components_About_About","title","description","postURL","keywords","_this$props","postNode","postPath","postSEO","postMeta","frontmatter","excerpt","cover","pathPrefix","tags","join","siteDescription","siteLogo","realPrefix","blogURL","schemaOrgJSONLD","alternateName","siteTitleAlt","push","itemListElement","position","item","@id","headline","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","content","property","type","JSON","stringify","concat","siteFBAppID","userTwitter"],"mappings":"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","file":"component---src-pages-about-jsx-d12c402521bed113c2ec.js","sourcesContent":["import React, { Component } from \"react\";\nimport SEO from './SEO';\nimport config from \"../../../data/SiteConfig\";\n\nclass SocialSEO extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <SEO\n          addiitionalJsonLD={[{\n            \"@context\" : \"http://schema.org\",\n            \"@type\" : \"Person\",\n            \"name\" : config.userName,\n            \"url\" : config.siteUrl,\n            \"image\": config.userAvatar,\n            \"email\": config.userLinks.find(linkInfo => linkInfo.label === \"Email\").url,\n            \"sameAs\" : config.userLinks.filter(\n              linkInfo => !!linkInfo.external\n            ).map(\n              linkInfo => linkInfo.url\n            ),\n          }]}\n          {...this.props}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default SocialSEO;\n","import React, { Component } from \"react\";\nimport Card from \"react-md/lib/Cards/Card\";\nimport CardText from \"react-md/lib/Cards/CardText\";\nimport UserLinks from \"../UserLinks/UserLinks\";\nimport config from \"../../../data/SiteConfig\";\nimport \"./About.scss\";\nimport SocialSEO from \"../SEO/SocialSEO\";\n\nclass About extends Component {\n  render() {\n    return (\n      <div className=\"about-container md-grid mobile-fix\">\n        <Card className=\"md-grid md-cell--8\">\n          <div className=\"about-wrapper\">\n            <img\n              src={config.userAvatar}\n              className=\"about-img\"\n              alt={config.userName}\n            />\n            <CardText>\n              <p className=\"about-text md-body-1\">{config.userDescription}</p>\n            </CardText>\n            <UserLinks labeled config={config} />\n          </div>\n        </Card>\n        <SocialSEO />\n      </div>\n    );\n  }\n}\n\nexport default About;\n","import React, { Component } from \"react\";\nimport Helmet from \"react-helmet\";\nimport About from \"../components/About/About\";\nimport Layout from \"../components/layout\";\nimport config from \"../../data/SiteConfig\";\n\nclass AboutPage extends Component {\n  render() {\n    return (\n      <Layout location={this.props.location}>\n        <div className=\"about-container\">\n          <Helmet>\n            <title>{`About | ${config.siteTitle}`}</title>\n            <link rel=\"canonical\" href={`${config.siteUrl}/about/`} />\n          </Helmet>\n          <About />\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport default AboutPage;\n","import React, { Component } from \"react\";\nimport Helmet from \"react-helmet\";\nimport config from \"../../../data/SiteConfig\";\n\nclass SEO extends Component {\n  render() {\n    const { postNode, postPath, postSEO, addiitionalJsonLD } = this.props;\n    let title;\n    let description;\n    let image;\n    let postURL;\n    let keywords;\n    if (postSEO) {\n      const postMeta = postNode.frontmatter;\n      title = postMeta.title;\n      description = postMeta.description\n        ? postMeta.description\n        : postNode.excerpt;\n      image = postMeta.cover;\n      postURL = config.siteUrl + config.pathPrefix + postPath;\n      keywords = postNode.frontmatter.tags.join(\",\");\n    } else {\n      title = config.siteTitle;\n      description = config.siteDescription;\n      image = config.siteLogo;\n    }\n    const realPrefix = config.pathPrefix === \"/\" ? \"\" : config.pathPrefix;\n    image = config.siteUrl + realPrefix + image;\n    const blogURL = config.siteUrl + config.pathPrefix;\n    const schemaOrgJSONLD = [\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"WebSite\",\n        url: blogURL,\n        name: title,\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\"\n      }\n    ];\n    if (postSEO) {\n      schemaOrgJSONLD.push([\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          itemListElement: [\n            {\n              \"@type\": \"ListItem\",\n              position: 1,\n              item: {\n                \"@id\": postURL,\n                name: title,\n                image\n              }\n            }\n          ]\n        },\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BlogPosting\",\n          url: blogURL,\n          name: title,\n          alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\",\n          headline: title,\n          image: {\n            \"@type\": \"ImageObject\",\n            url: image\n          },\n          description\n        }\n      ]);\n    }\n    return (\n      <React.Fragment>\n        <Helmet>\n          {/* General tags */}\n          <meta name=\"description\" content={description} />\n          <meta name=\"image\" content={image} />\n          {keywords ? <meta property=\"keywords\" content={keywords} /> : null}\n          <meta name=\"author\" content={config.userName} />\n\n          {/* Schema.org tags */}\n          <script type=\"application/ld+json\">\n            {JSON.stringify([...schemaOrgJSONLD, ...addiitionalJsonLD])}\n          </script>\n\n          {/* OpenGraph tags */}\n          <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\n          {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\n          <meta property=\"og:title\" content={title} />\n          <meta property=\"og:description\" content={description} />\n          <meta property=\"og:image\" content={image} />\n          <meta\n            property=\"fb:app_id\"\n            content={config.siteFBAppID ? config.siteFBAppID : \"\"}\n          />\n\n          {/* Twitter Card tags */}\n          <meta name=\"twitter:card\" content=\"summary_large_image\" />\n          <meta\n            name=\"twitter:creator\"\n            content={config.userTwitter ? config.userTwitter : \"\"}\n          />\n          <meta name=\"twitter:title\" content={title} />\n          <meta name=\"twitter:description\" content={description} />\n          <meta name=\"twitter:image\" content={image} />\n        </Helmet>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default SEO;\n"],"sourceRoot":""}