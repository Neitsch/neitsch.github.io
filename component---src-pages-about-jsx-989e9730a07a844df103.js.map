{"version":3,"sources":["webpack:///./src/components/SEO/SocialSEO.jsx","webpack:///./src/components/About/About.jsx","webpack:///./src/pages/about.jsx","webpack:///./src/components/SEO/SEO.jsx"],"names":["SocialSEO","render","react_default","a","createElement","Fragment","SEO","Object","assign","addiitionalJsonLD","@context","@type","name","config","userName","url","siteUrl","image","userAvatar","email","userLinks","find","linkInfo","label","sameAs","filter","external","map","this","props","Component","About","className","Card_default","src","alt","CardText_default","userDescription","UserLinks","labeled","SEO_SocialSEO","AboutPage","layout","location","Helmet_default","siteTitle","rel","href","components_About_About","title","description","postURL","keywords","_this$props","postNode","postPath","postSEO","postMeta","frontmatter","excerpt","cover","pathPrefix","tags","join","siteDescription","siteLogo","realPrefix","blogURL","schemaOrgJSONLD","alternateName","siteTitleAlt","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","content","property","type","JSON","stringify","concat","siteFBAppID","userTwitter"],"mappings":"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","file":"component---src-pages-about-jsx-989e9730a07a844df103.js","sourcesContent":["import React, { Component } from \"react\";\nimport SEO from './SEO';\nimport config from \"../../../data/SiteConfig\";\n\nclass SocialSEO extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <SEO\n          addiitionalJsonLD={[{\n            \"@context\" : \"http://schema.org\",\n            \"@type\" : \"Person\",\n            \"name\" : config.userName,\n            \"url\" : config.siteUrl,\n            \"image\": config.userAvatar,\n            \"email\": config.userLinks.find(linkInfo => linkInfo.label === \"Email\").url,\n            \"sameAs\" : config.userLinks.filter(\n              linkInfo => !!linkInfo.external\n            ).map(\n              linkInfo => linkInfo.url\n            ),\n          }]}\n          {...this.props}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default SocialSEO;\n","import React, { Component } from \"react\";\nimport Card from \"react-md/lib/Cards/Card\";\nimport CardText from \"react-md/lib/Cards/CardText\";\nimport UserLinks from \"../UserLinks/UserLinks\";\nimport config from \"../../../data/SiteConfig\";\nimport \"./About.scss\";\nimport SocialSEO from \"../SEO/SocialSEO\";\n\nclass About extends Component {\n  render() {\n    return (\n      <div className=\"about-container md-grid mobile-fix\">\n        <Card className=\"md-grid md-cell--8\">\n          <div className=\"about-wrapper\">\n            <img\n              src={config.userAvatar}\n              className=\"about-img\"\n              alt={config.userName}\n            />\n            <CardText>\n              <p className=\"about-text md-body-1\">{config.userDescription}</p>\n            </CardText>\n            <UserLinks labeled config={config} />\n          </div>\n        </Card>\n        <SocialSEO />\n      </div>\n    );\n  }\n}\n\nexport default About;\n","import React, { Component } from \"react\";\nimport Helmet from \"react-helmet\";\nimport About from \"../components/About/About\";\nimport Layout from \"../components/layout\";\nimport config from \"../../data/SiteConfig\";\n\nclass AboutPage extends Component {\n  render() {\n    return (\n      <Layout location={this.props.location}>\n        <div className=\"about-container\">\n          <Helmet>\n            <title>{`About | ${config.siteTitle}`}</title>\n            <link rel=\"canonical\" href={`${config.siteUrl}/about/`} />\n          </Helmet>\n          <About />\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport default AboutPage;\n","import React, { Component } from \"react\";\nimport Helmet from \"react-helmet\";\nimport config from \"../../../data/SiteConfig\";\n\nclass SEO extends Component {\n  render() {\n    const { postNode, postPath, postSEO, addiitionalJsonLD } = this.props;\n    let title;\n    let description;\n    let image;\n    let postURL;\n    let keywords;\n    if (postSEO) {\n      const postMeta = postNode.frontmatter;\n      title = postMeta.title;\n      description = postMeta.description\n        ? postMeta.description\n        : postNode.excerpt;\n      image = postMeta.cover;\n      postURL = config.siteUrl + config.pathPrefix + postPath;\n      keywords = postNode.frontmatter.tags.join(\",\");\n    } else {\n      title = config.siteTitle;\n      description = config.siteDescription;\n      image = config.siteLogo;\n    }\n    const realPrefix = config.pathPrefix === \"/\" ? \"\" : config.pathPrefix;\n    image = config.siteUrl + realPrefix + image;\n    const blogURL = config.siteUrl + config.pathPrefix;\n    const schemaOrgJSONLD = [\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"WebSite\",\n        url: blogURL,\n        name: title,\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\"\n      }\n    ];\n    return (\n      <React.Fragment>\n        <Helmet>\n          {/* General tags */}\n          <meta name=\"description\" content={description} />\n          <meta name=\"image\" content={image} />\n          {keywords ? <meta property=\"keywords\" content={keywords} /> : null}\n          <meta name=\"author\" content={config.userName} />\n\n          {/* Schema.org tags */}\n          <script type=\"application/ld+json\">\n            {JSON.stringify([...schemaOrgJSONLD, ...addiitionalJsonLD])}\n          </script>\n\n          {/* OpenGraph tags */}\n          <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\n          {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\n          <meta property=\"og:title\" content={title} />\n          <meta property=\"og:description\" content={description} />\n          <meta property=\"og:image\" content={image} />\n          <meta\n            property=\"fb:app_id\"\n            content={config.siteFBAppID ? config.siteFBAppID : \"\"}\n          />\n\n          {/* Twitter Card tags */}\n          <meta name=\"twitter:card\" content=\"summary_large_image\" />\n          <meta\n            name=\"twitter:creator\"\n            content={config.userTwitter ? config.userTwitter : \"\"}\n          />\n          <meta name=\"twitter:title\" content={title} />\n          <meta name=\"twitter:description\" content={description} />\n          <meta name=\"twitter:image\" content={image} />\n        </Helmet>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default SEO;\n"],"sourceRoot":""}