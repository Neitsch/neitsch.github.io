{"version":3,"sources":["webpack:///./src/components/UserInfo/UserInfo.jsx","webpack:///./src/components/Disqus/Disqus.jsx","webpack:///./src/components/PostCover/PostCover.jsx","webpack:///./src/components/PostInfo/PostInfo.jsx","webpack:///./src/components/SocialLinks/SocialLinks.jsx","webpack:///./src/components/PostSuggestions/PostSuggestions.jsx","webpack:///./src/components/SEO/PostSEO.jsx","webpack:///./src/templates/post.jsx","webpack:///./src/components/PostTags/PostTags.jsx","webpack:///./src/components/SEO/SEO.jsx"],"names":["UserInfo","render","_this$props$config","this","props","config","userAvatar","userName","userLocation","userDescription","userLinks","userTwitter","expanded","userLinksElement","react_default","a","createElement","UserLinks","labeled","Card_default","className","CardTitle_default","expander","avatar","Avatars_default","src","role","title","subtitle","Follow","username","options","count","CardText_default","expandable","IconSeparator_default","label","iconBefore","FontIcons_default","iconClassName","Component","Disqus","_this","_Component","call","state","toasts","notifyAboutComment","bind","assertThisInitialized_default","onSnackbarDismiss","slice","setState","push","text","_this$props","postNode","disqusShortname","post","frontmatter","url","siteUrl","pathPrefix","fields","slug","icon","main_default","shortname","identifier","onNewComment","Snackbars_default","onDismiss","PostCover","coverHeight","mobile","style","height","gatsby_image_default","outerWrapperClassName","width","sizes","cover","childImageSharp","PostInfo","date","timeToRead","gatsby_link_default","to","_","kebabCase","category","SocialLinks","nativeShare","componentDidMount","window","navigator","postPath","iconSize","filter","es","onClick","share","excerpt","secondary","swapTheming","flat","RedditShareButton","RedditIcon","round","size","RedditShareCount","TwitterShareButton","TwitterIcon","GooglePlusShareButton","GooglePlusIcon","GooglePlusShareCount","FacebookShareButton","quote","FacebookIcon","FacebookShareCount","LinkedinShareButton","description","LinkedinIcon","LinkedinShareCount","TelegramShareButton","TelegramIcon","EmailShareButton","body","subject","EmailIcon","PostSuggestions","postFields","prevSlug","forceFontSize","forceSize","prevTitle","nextSlug","nextTitle","PostSEO","_postNode$frontmatter","realPrefix","postURL","image","fluid","Fragment","SEO","Object","assign","addiitionalJsonLD","@context","@type","itemListElement","position","item","@id","name","alternateName","siteTitleAlt","headline","PostTemplate","_React$Component","handleResize","addEventListener","componentWillUnmount","removeEventListener","innerWidth","pageContext","postOverlapClass","data","markdownRemark","id","category_id","postDefaultCategoryID","layout","location","Helmet_default","siteTitle","rel","href","SEO_PostSEO","components_PostCover_PostCover","Cards_default","components_PostInfo_PostInfo","dangerouslySetInnerHTML","__html","html","PostTags","tags","components_SocialLinks_SocialLinks","components_UserInfo_UserInfo","components_Disqus_Disqus","PostSuggestions_PostSuggestions_PostSuggestions","React","pageQuery","react__WEBPACK_IMPORTED_MODULE_1___default","map","tag","gatsby_link__WEBPACK_IMPORTED_MODULE_3___default","key","textDecoration","react_md_lib_Chips__WEBPACK_IMPORTED_MODULE_4___default","keywords","postSEO","postMeta","join","siteDescription","siteLogo","blogURL","schemaOrgJSONLD","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","content","property","type","JSON","stringify","concat","siteFBAppID"],"mappings":"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","file":"component---src-templates-post-jsx-fd4286d9370c334292e4.js","sourcesContent":["import React, { Component } from \"react\";\nimport Card from \"react-md/lib/Cards/Card\";\nimport CardTitle from \"react-md/lib/Cards/CardTitle\";\nimport CardText from \"react-md/lib/Cards/CardText\";\nimport Avatar from \"react-md/lib/Avatars\";\nimport FontIcon from \"react-md/lib/FontIcons\";\nimport IconSeparator from \"react-md/lib/Helpers/IconSeparator\";\nimport UserLinks from \"../UserLinks/UserLinks\";\nimport \"./UserInfo.scss\";\n\nclass UserInfo extends Component {\n  render() {\n    const {\n      userAvatar,\n      userName,\n      userLocation,\n      userDescription,\n      userLinks,\n      userTwitter\n    } = this.props.config;\n    const { expanded } = this.props;\n    const userLinksElement = (\n      <UserLinks config={this.props.config} labeled={expanded} />\n    );\n    if (!userAvatar && !userName && !userLocation && !userDescription) {\n      if (userLinks) {\n        return (\n          <Card className=\"md-grid md-cell md-cell--12 user-info\">\n            {userLinksElement}\n          </Card>\n        );\n      }\n      return null;\n    }\n    return (\n      <Card className=\"md-grid md-cell md-cell--12 user-info\">\n        <CardTitle\n          expander={!expanded}\n          avatar={userAvatar && <Avatar src={userAvatar} role=\"presentation\" />}\n          title={userName && userName}\n          subtitle={\n            userTwitter ? (\n              <Follow\n                username={userTwitter}\n                options={{ count: expanded ? \"none\" : \"none\" }}\n              />\n            ) : (\n              \"Author\"\n            )\n          }\n        />\n        <CardText expandable={!expanded}>\n          {userLocation && (\n            <IconSeparator label={userLocation} iconBefore>\n              <FontIcon iconClassName=\"fa fa-map-marker\" />\n            </IconSeparator>\n          )}\n          <p>{userDescription && userDescription}</p>\n          {userLinksElement}\n        </CardText>\n      </Card>\n    );\n  }\n}\n\nexport default UserInfo;\n","import React, { Component } from \"react\";\nimport ReactDisqusComments from \"react-disqus-comments\";\nimport Card from \"react-md/lib/Cards/Card\";\nimport CardTitle from \"react-md/lib/Cards/CardTitle\";\nimport CardText from \"react-md/lib/Cards/CardText\";\nimport Avatar from \"react-md/lib/Avatars\";\nimport FontIcon from \"react-md/lib/FontIcons\";\nimport Snackbar from \"react-md/lib/Snackbars\";\nimport config from \"../../../data/SiteConfig\";\n\nclass Disqus extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      toasts: []\n    };\n    this.notifyAboutComment = this.notifyAboutComment.bind(this);\n    this.onSnackbarDismiss = this.onSnackbarDismiss.bind(this);\n  }\n\n  onSnackbarDismiss() {\n    const [, ...toasts] = this.state.toasts;\n    this.setState({ toasts });\n  }\n  notifyAboutComment() {\n    const toasts = this.state.toasts.slice();\n    toasts.push({ text: \"New comment available!\" });\n    this.setState({ toasts });\n  }\n  render() {\n    const { postNode, expanded } = this.props;\n    if (!config.disqusShortname) {\n      return null;\n    }\n    const post = postNode.frontmatter;\n    const url = config.siteUrl + config.pathPrefix + postNode.fields.slug;\n    return (\n      <Card className=\"md-grid md-cell md-cell--12\">\n        <CardTitle\n          title=\"Comments\"\n          avatar={<Avatar icon={<FontIcon>comment</FontIcon>} />}\n          expander={!expanded}\n        />\n        <CardText expandable={!expanded}>\n          <ReactDisqusComments\n            shortname={config.disqusShortname}\n            identifier={post.title}\n            title={post.title}\n            url={url}\n            onNewComment={this.notifyAboutComment}\n          />\n        </CardText>\n        <Snackbar\n          toasts={this.state.toasts}\n          onDismiss={this.onSnackbarDismiss}\n        />\n      </Card>\n    );\n  }\n}\n\nexport default Disqus;\n","import React, { Component } from \"react\";\nimport Img from \"gatsby-image\";\nimport \"./PostCover.scss\";\n\nclass PostCover extends Component {\n  render() {\n    const { postNode, mobile } = this.props;\n    /* eslint no-undef: \"off\"*/\n    const coverHeight = mobile ? 180 : 350;\n    return (\n      <div\n        style={{ height: `${coverHeight}px` }}\n        className=\"md-grid md-cell--9 post-cover\"\n      >\n        <Img outerWrapperClassName=\"cover_image_wrapper\" style={{width: \"100%\"}} sizes={postNode.frontmatter.cover.childImageSharp.sizes} />\n      </div>\n    );\n  }\n}\n\nexport default PostCover;\n","import React, { Component } from \"react\";\nimport CardTitle from \"react-md/lib/Cards/CardTitle\";\nimport Avatar from \"react-md/lib/Avatars\";\nimport FontIcon from \"react-md/lib/FontIcons\";\nimport Link from \"gatsby-link\";\nimport _ from \"lodash\";\nimport \"./PostInfo.scss\";\n\nclass PostInfo extends Component {\n  render() {\n    const { postNode } = this.props;\n    const post = postNode.frontmatter;\n    return (\n      <div className=\"post-info\">\n        <CardTitle\n          avatar={<Avatar icon={<FontIcon iconClassName=\"fa fa-calendar\" />} />}\n          title={`Published on ${post.date}`}\n          subtitle={`${postNode.timeToRead} min read`}\n        />\n        <Link\n          className=\"category-link\"\n          to={`/categories/${_.kebabCase(post.category)}`}\n        >\n          <CardTitle\n            avatar={\n              <Avatar icon={<FontIcon iconClassName=\"fa fa-folder-open\" />} />\n            }\n            title={\"In category\"}\n            subtitle={post.category}\n          />\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default PostInfo;\n","import React, { Component } from \"react\";\nimport { Button } from 'react-md';\nimport { FacebookShareButton,\n  GooglePlusShareButton,\n  LinkedinShareButton,\n  TwitterShareButton,\n  TelegramShareButton, RedditShareButton, EmailShareButton,\n  FacebookShareCount,\n    GooglePlusShareCount,\n    LinkedinShareCount, RedditShareCount,\n    FacebookIcon,\n    TwitterIcon,\n    TelegramIcon, GooglePlusIcon,\n  LinkedinIcon, RedditIcon, EmailIcon } from \"react-share\";\nimport config from \"../../../data/SiteConfig\";\nimport \"./SocialLinks.scss\";\n\nclass SocialLinks extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nativeShare: false,\n    }\n  }\n  componentDidMount() {\n    if(\"share\" in window.navigator) {\n      this.setState({\n        nativeShare: true,\n      })\n    }\n  }\n  render() {\n    const { postNode, postPath, mobile } = this.props;\n    const post = postNode.frontmatter;\n    const url = config.siteUrl + config.pathPrefix + postPath;\n\n    const iconSize = mobile ? 36 : 48;\n    const filter = count => (count > 0 ? count : \"\");\n\n    if(this.state.nativeShare) {\n      return (\n        <div className=\"social-links\">\n          <Button\n            onClick={() => navigator.share({\n              title: post.title,\n              text: postNode.excerpt,\n              url,\n            })}\n            secondary\n            swapTheming\n            flat\n          >Share\n          </Button>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"social-links\">\n        <RedditShareButton url={url} title={post.title}>\n          <RedditIcon round size={iconSize} />\n          <RedditShareCount url={url}>\n            {count => <div className=\"share-count\">{filter(count)}</div>}\n          </RedditShareCount>\n        </RedditShareButton>\n        <TwitterShareButton url={url} title={post.title}>\n          <TwitterIcon round size={iconSize} />\n        </TwitterShareButton>\n        <GooglePlusShareButton url={url}>\n          <GooglePlusIcon round size={iconSize} />\n          <GooglePlusShareCount url={url}>\n            {count => <div className=\"share-count\">{filter(count)}</div>}\n          </GooglePlusShareCount>\n        </GooglePlusShareButton>\n        <FacebookShareButton\n          url={url}\n          quote={postNode.excerpt}\n        >\n          <FacebookIcon round size={iconSize} />\n          <FacebookShareCount url={url}>\n            {count => <div className=\"share-count\">{filter(count)}</div>}\n          </FacebookShareCount>\n        </FacebookShareButton>\n        <LinkedinShareButton\n          url={url}\n          title={post.title}\n          description={postNode.excerpt}\n        >\n          <LinkedinIcon round size={iconSize} />\n          <LinkedinShareCount url={url}>\n            {count => <div className=\"share-count\">{filter(count)}</div>}\n          </LinkedinShareCount>\n        </LinkedinShareButton>\n        <TelegramShareButton url={url}>\n          <TelegramIcon round size={iconSize} />\n        </TelegramShareButton>\n        <EmailShareButton body={url} subject={post.title}>\n          <EmailIcon round size={iconSize} />\n        </EmailShareButton>\n      </div>\n    );\n  }\n}\n\nexport default SocialLinks;\n","import React, { Component } from \"react\";\nimport FontIcon from \"react-md/lib/FontIcons\";\nimport Link from \"gatsby-link\";\nimport \"./PostSuggestions.scss\";\n\nexport default class PostSuggestions extends Component {\n  render() {\n    const { postNode } = this.props;\n    const postFields = postNode.fields;\n    return (\n      <div className=\"post-suggestions md-grid md-cell--12\">\n        <Link to={postFields.prevSlug} className=\"post-suggestion\">\n          <FontIcon\n            forceFontSize\n            forceSize={64}\n            className=\"secondary-color arrow-nav\"\n          >\n            arrow_back\n          </FontIcon>\n          <div className=\"headline-container hide-on-mobile\">\n            <h2 className=\"md-body-2 secondary-color\">Previous</h2>\n            <h6 className=\"md-headline secondary-color\">\n              {postFields.prevTitle}\n            </h6>\n          </div>\n        </Link>\n        <Link to={postFields.nextSlug} className=\"post-suggestion\">\n          <div className=\"headline-container\">\n            <h2 className=\"md-body-2 secondary-color\">Next</h2>\n            <h6 className=\"md-headline secondary-color\">\n              {postFields.nextTitle}\n            </h6>\n          </div>\n          <FontIcon\n            forceFontSize\n            forceSize={64}\n            className=\"secondary-color arrow-nav\"\n          >\n            arrow_forward\n          </FontIcon>\n        </Link>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport SEO from './SEO';\nimport config from \"../../../data/SiteConfig\";\n\nclass PostSEO extends Component {\n  render() {\n    const { postNode, postPath } = this.props;\n    const {frontmatter: {title, excerpt: description, cover}} = postNode;\n    const realPrefix = config.pathPrefix === \"/\" ? \"\" : config.pathPrefix;\n    const postURL = config.siteUrl + realPrefix + postPath;\n    const image = config.siteUrl + realPrefix + cover.childImageSharp.fluid.src;\n    return (\n      <React.Fragment>\n        <SEO\n          addiitionalJsonLD={[{\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          itemListElement: [\n            {\n              \"@type\": \"ListItem\",\n              position: 1,\n              item: {\n                \"@id\": postURL,\n                name: title,\n                image\n              }\n            }\n          ]\n        },\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BlogPosting\",\n          url: postURL,\n          name: title,\n          alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\",\n          headline: title,\n          image: {\n            \"@type\": \"ImageObject\",\n            url: image\n          },\n          description,\n        }]}\n          {...this.props}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default PostSEO;\n","import { graphql } from \"gatsby\";\nimport React from \"react\";\nimport Helmet from \"react-helmet\";\nimport Card from \"react-md/lib/Cards\";\nimport CardText from \"react-md/lib/Cards/CardText\";\nimport UserInfo from \"../components/UserInfo/UserInfo\";\nimport Disqus from \"../components/Disqus/Disqus\";\nimport PostTags from \"../components/PostTags/PostTags\";\nimport PostCover from \"../components/PostCover/PostCover\";\nimport PostInfo from \"../components/PostInfo/PostInfo\";\nimport SocialLinks from \"../components/SocialLinks/SocialLinks\";\nimport PostSuggestions from \"../components/PostSuggestions/PostSuggestions\";\nimport PostSEO from \"../components/SEO/PostSEO\";\nimport Layout from \"../components/layout\";\nimport config from \"../../data/SiteConfig\";\nimport \"./b16-tomorrow-dark.css\";\nimport \"./post.scss\";\n\nexport default class PostTemplate extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mobile: true\n    };\n    this.handleResize = this.handleResize.bind(this);\n  }\n\n  componentDidMount() {\n    this.handleResize();\n    window.addEventListener(\"resize\", this.handleResize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.handleResize);\n  }\n\n  handleResize() {\n    if (window.innerWidth >= 640) {\n      this.setState({ mobile: false });\n    } else {\n      this.setState({ mobile: true });\n    }\n  }\n\n  render() {\n    const { mobile } = this.state;\n    const { slug } = this.props.pageContext;\n    const expanded = !mobile;\n    const postOverlapClass = mobile ? \"post-overlap-mobile\" : \"post-overlap\";\n    const postNode = this.props.data.markdownRemark;\n    const post = postNode.frontmatter;\n    if (!post.id) {\n      post.id = slug;\n    }\n    if (!post.category_id) {\n      post.category_id = config.postDefaultCategoryID;\n    }\n    return (\n      <Layout location={this.props.location}>\n        <div className=\"post-page md-grid md-grid--no-spacing\">\n          <Helmet>\n            <title>{`${post.title} | ${config.siteTitle}`}</title>\n            <link rel=\"canonical\" href={`${config.siteUrl}${post.id}`} />\n          </Helmet>\n          <PostSEO postPath={slug} postNode={postNode} />\n          <PostCover postNode={postNode} mobile={mobile} />\n          <div\n            className={`md-grid md-cell--9 post-page-contents mobile-fix ${postOverlapClass}`}\n          >\n            <Card className=\"md-grid md-cell md-cell--12 post\">\n              <CardText className=\"post-body\">\n                <h1 className=\"md-display-2 post-header\">{post.title}</h1>\n                <PostInfo postNode={postNode} />\n                <div dangerouslySetInnerHTML={{ __html: postNode.html }} />\n              </CardText>\n              <div className=\"post-meta\">\n                <PostTags tags={post.tags} />\n                <SocialLinks\n                  postPath={slug}\n                  postNode={postNode}\n                  mobile={this.state.mobile}\n                />\n              </div>\n            </Card>\n            <UserInfo\n              className=\"md-grid md-cell md-cell--12\"\n              config={config}\n              expanded={expanded}\n            />\n            <Disqus postNode={postNode} expanded={expanded} />\n          </div>\n\n          <PostSuggestions postNode={postNode} />\n        </div>\n      </Layout>\n    );\n  }\n}\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      timeToRead\n      excerpt\n      frontmatter {\n        title\n        cover {\n          childImageSharp {\n            sizes(maxHeight: 350) {\n              ...GatsbyImageSharpSizes_withWebp_tracedSVG\n            }\n            fluid {\n              src\n            }\n          }\n        }\n        date\n        category\n        tags\n      }\n      fields {\n        nextTitle\n        nextSlug\n        prevTitle\n        prevSlug\n        slug\n      }\n    }\n  }\n`;\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\nimport Link from \"gatsby-link\";\nimport Chip from \"react-md/lib/Chips\";\nimport \"./PostTags.scss\";\n\nclass PostTags extends Component {\n  render() {\n    const { tags } = this.props;\n    return (\n      <div className=\"post-tag-container\">\n        {tags &&\n          tags.map(tag => (\n            <Link\n              key={tag}\n              style={{ textDecoration: \"none\" }}\n              to={`/tags/${_.kebabCase(tag)}`}\n            >\n              <Chip label={tag} className=\"post-preview-tags\" />\n            </Link>\n          ))}\n      </div>\n    );\n  }\n}\n\nexport default PostTags;\n","import React, { Component } from \"react\";\nimport Helmet from \"react-helmet\";\nimport config from \"../../../data/SiteConfig\";\n\nclass SEO extends Component {\n  render() {\n    const { postNode, postPath, postSEO, addiitionalJsonLD } = this.props;\n    let title;\n    let description;\n    let image;\n    let postURL;\n    let keywords;\n    if (postSEO) {\n      const postMeta = postNode.frontmatter;\n      title = postMeta.title;\n      description = postMeta.description\n        ? postMeta.description\n        : postNode.excerpt;\n      image = postMeta.cover;\n      postURL = config.siteUrl + config.pathPrefix + postPath;\n      keywords = postNode.frontmatter.tags.join(\",\");\n    } else {\n      title = config.siteTitle;\n      description = config.siteDescription;\n      image = config.siteLogo;\n    }\n    const realPrefix = config.pathPrefix === \"/\" ? \"\" : config.pathPrefix;\n    image = config.siteUrl + realPrefix + image;\n    const blogURL = config.siteUrl + config.pathPrefix;\n    const schemaOrgJSONLD = [\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"WebSite\",\n        url: blogURL,\n        name: title,\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\"\n      }\n    ];\n    return (\n      <React.Fragment>\n        <Helmet>\n          {/* General tags */}\n          <meta name=\"description\" content={description} />\n          <meta name=\"image\" content={image} />\n          {keywords ? <meta property=\"keywords\" content={keywords} /> : null}\n          <meta name=\"author\" content={config.userName} />\n\n          {/* Schema.org tags */}\n          <script type=\"application/ld+json\">\n            {JSON.stringify([...schemaOrgJSONLD, ...addiitionalJsonLD])}\n          </script>\n\n          {/* OpenGraph tags */}\n          <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\n          {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\n          <meta property=\"og:title\" content={title} />\n          <meta property=\"og:description\" content={description} />\n          <meta property=\"og:image\" content={image} />\n          <meta\n            property=\"fb:app_id\"\n            content={config.siteFBAppID ? config.siteFBAppID : \"\"}\n          />\n\n          {/* Twitter Card tags */}\n          <meta name=\"twitter:card\" content=\"summary_large_image\" />\n          <meta\n            name=\"twitter:creator\"\n            content={config.userTwitter ? config.userTwitter : \"\"}\n          />\n          <meta name=\"twitter:title\" content={title} />\n          <meta name=\"twitter:description\" content={description} />\n          <meta name=\"twitter:image\" content={image} />\n        </Helmet>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default SEO;\n"],"sourceRoot":""}