{"data":{"markdownRemark":{"frontmatter":{"cover":{"childImageSharp":{"sizes":{"tracedSVG":"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='400' height='267' viewBox='0 0 400 267' version='1'%3e%3cpath d='M196 108c0 2-5 10-10 16-3 4-3 5 1 4l1-1 1-3 3-4c1-2 1-2 2-1s3-2 3-5c0-2 2-1 4 4 2 4 2 5 1 6v4c0 2 0 2 1 1 1-3 3-2 4 0 1 4 6 13 7 13l-2-5c-2-3-2-3 0-5l2-1 1-2h-1l-5 1-2-3c-1-3-1-4 1-5l3-1c0 2 2 1 2-2l-2-3c-2 0-3-2-3-2l-3-2-4-2c-3-4-5-4-5-2m-35 55c-1 1-2 2-3 1-2 0-2 0-2 2 0 3-2 8-3 6l-2 1c-2 2-3 2-4 1s-1-1-1 1l-1 3-5 4c-8 6-13 10-15 10-3 0-4 3-3 6 2 2 7 3 7 0 0-2 10-7 12-7l1 13v12h-3l-3 1v9c0 8 1 10 2 10l1 3-1 2-2 1 2 2c1 2 2 13 0 13v1l1 5c0 4 0 4 2 4s3-1 3-2l2 1c3 2 4 1 1-2-2-2-2-3 4-3 3 0 4 0 3 2h1l3-2v1l-1 3 2-1c1-1 1-1 3 1 2 3 4 3 2-1-3-3-2-3 3-4l5 1h1l1-1c2 0 1 2-1 5l-2 2h2c2 0 3-1 3-2l1 1c1 1 1-3 1-10l-1-12-1-2v-3l1 2c0 2 2 3 4 1l-1-1c-3 0-3-7-1-8h3c1 4 2 2 2-4v-7h-3c-6 0-6-5 0-25l6-19c2-6 3-10 1-10l-1 2c0 4-4 13-5 13v3l-1 2c1 2-2 8-4 8l-8-4 3-4c2-4 0-5-1-1-2 5-4 6-7 4-3-3-4-2-1 1l2 2h-2c-2 1-3 0-4-1l-5-1h-3c1-1 0-2-3-4-2-1-2-2 0-4 2-3 1-3 9 3l3 1-4-4c-5-3-6-6-3-4 1 0 2-2 0-2v-2l10-15-2 2m123 9l-5 3v2l2 5c1 1 2 3 2 11 2 24 2 29 1 27s-1-2-1 2v8c0 3 0 3-4 3-5 0-5 0-5-3 0-4 0-4-3-4l-5 1c-1 2 0 5 2 5v1c-2 1-1 2 6 3l7 1-2 4c-2 3-3 7-3 10 0 6-1 9-3 9-1 1-1 1 1 2 1 0 2 1 2 3s0 2 4 2 4 0 4-2 1-3 4-4c3 0 3 0 1-1-3-1-3-4-1-8v-7l-1-6v-5h8l7 1 3-1c3-2 3-13 1-13l-2-1-1-2c-2 0-5-6-9-18l-4-11c-2-3 0 5 4 15 4 11 4 11 1 11l-2 2-3 1c-3 0-3 0-3-4l-2-19v-13l2 2c0 2 0 2 1-1 1-2 0-4-1-6s-1-2 1-2c2-1 2-1 1-2l-2-2c0-1-1-1-3 1m-215 4c-3 2-4 7-2 9 1 0 2 5 3 19 1 18 0 27-1 12l-3-10-1-6-1-4c-1-1-1-1-1 1 0 1 0 2-1 1l-1 2v2l-1-3c0-4-1-6-3-4s-3 5 0 4l1 4c0 3 0 5 5 19 3 5 4 11 3 13v1l1 1h-4l-2-3c0-3-1-3-4-3-4 0-4 0-4-3 0-2 0-2-1 1l-2 5-1 4-1 3 1-3c2-4 3-4 4-1l3 3a2899 2899 0 0 0 8 1l-2 4-2 3-1 4-1 6v5l-2 2h-1c-1 1 2 2 9 2s15-2 10-2l-2-1-1-2v-1c2 0 3-2 1-2l-2-2h1l4-3-2-1h-3l4-1c2 0 1-2-1-2-2-1-2-2-2-6s3-5 9-5l6 1c1 2 1 2 4 0s4-2 1-6v-5c1-2 1-3-1-5l-2-3-1-1c-1-1-3-3-4-7-1-3-1-5-2-4l1 6 1 6-1-1-3-1c-2 0-3 0-3 2h-1l-1-2-1-1v-12c0-8 0-9 2-9v-1c-2-2-3-7-2-10 1-2 1-2 1 1l2 7 3 10c1 1 1 1 1-1l-4-15c-1-3-1-3 1-3v-1c-2-2-3-5-1-5l2-2h-3l-1-1c1-2-1-2-5 0m95 20c-3 2-1 6 4 10s7 4 9-3c1-5 2-5-3-5-3-1-4-1-4 1l-2-1c-1-3-2-3-4-2m208 8a276 276 0 0 1-6 21 497 497 0 0 1-8 23l-1-4v-2h-2c-2 2-2 2-3 0v-3c1-2 1-2-1-4s-3-4 0-6l1-3c-1 0-2 0-3 2l-4 5c-2 3-3 5-1 4v6c-1 3-2 4-4 5-5 1-4 10 1 10l2 1-1 1c-2 0-2 1-1 4s5 5 5 2h2l5-1 5 1c-1 1 3 1 11 1 10 0 11 0 11-2l-2-2-3-1c-1-1-1-1-1 1l-2-1c-1-2-2-2-4-2-1 1-2 1-2-1h-1c-2 2-2 2-3 0s-1-2 4-2l2-6-3-2h-3l3-12a3853 3853 0 0 0 7-33m-221-2h-6v4c-1 6 0 7 3 4s5-3 2 1l-1 2 4-1 2-1 6-1 6-1-8-6-2-1h-6M26 241l-6 5c-2 1-2 1-1 3 3 1 4 1 5-1 2-3 4-2 4 1s0 3-1 2c-1-2-1-2-1 0-1 2-2 3-4 3s-3 1-3 5 0 5 2 6l3 1 9 1c6 0 7 0 5-1s-2-1 0-1h3l4-1c5 0 6-1 6-5 0-2-1-3-4-3l-3-1h-1c-1 1-1 1-2-2l-2-5-2-2v2c0 2 0 2-2 1-1-2-3-3-2-1l-1 1-2-1c0-2 1-2 4-2s4-1 1-3l-2-4c0-2 0-2-1-1h-1c0-2-2-1-5 3' fill='lightgray' fill-rule='evenodd'/%3e%3c/svg%3e","aspectRatio":1.5002956830277943,"src":"/static/f91b8c0a40aabe0a1601b808c56710b8/47fdd/cranes.jpg","srcSet":"/static/f91b8c0a40aabe0a1601b808c56710b8/69c92/cranes.jpg 132w,\n/static/f91b8c0a40aabe0a1601b808c56710b8/76816/cranes.jpg 263w,\n/static/f91b8c0a40aabe0a1601b808c56710b8/47fdd/cranes.jpg 525w,\n/static/f91b8c0a40aabe0a1601b808c56710b8/8ebd2/cranes.jpg 788w,\n/static/f91b8c0a40aabe0a1601b808c56710b8/34728/cranes.jpg 1050w,\n/static/f91b8c0a40aabe0a1601b808c56710b8/59061/cranes.jpg 1575w,\n/static/f91b8c0a40aabe0a1601b808c56710b8/00b60/cranes.jpg 2537w","srcWebp":"/static/f91b8c0a40aabe0a1601b808c56710b8/9860e/cranes.webp","srcSetWebp":"/static/f91b8c0a40aabe0a1601b808c56710b8/1cac3/cranes.webp 132w,\n/static/f91b8c0a40aabe0a1601b808c56710b8/4a7b6/cranes.webp 263w,\n/static/f91b8c0a40aabe0a1601b808c56710b8/9860e/cranes.webp 525w,\n/static/f91b8c0a40aabe0a1601b808c56710b8/1b5e1/cranes.webp 788w,\n/static/f91b8c0a40aabe0a1601b808c56710b8/24627/cranes.webp 1050w,\n/static/f91b8c0a40aabe0a1601b808c56710b8/ed2d8/cranes.webp 1575w,\n/static/f91b8c0a40aabe0a1601b808c56710b8/d0686/cranes.webp 2537w","sizes":"(max-width: 525px) 100vw, 525px"},"fluid":{"src":"/static/f91b8c0a40aabe0a1601b808c56710b8/8484e/cranes.jpg"}}},"title":"CRDTs - Sound good in theory, not in practice","tags":["Distributed Systems","CRDT","Conflict-Free Replicated Datatype"],"date":"05/05/2018","category":"Distributed Systems"},"excerpt":"This term I did some research on conflict-free replicated datatypes (CRDTs). I will walk through what they are, why the concept is cool, butâ€¦","html":"<p>This term I did some research on conflict-free replicated datatypes (CRDTs). I will walk through what they are, why the concept is cool, but they don't work in practice.</p>\n<h1 id=\"what-are-crdts\"><a href=\"#what-are-crdts\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>What are CRDTs?</h1>\n<p>CRDT is a data structure that propagates concurrently in a network without the need for coordination.\nCRDTs are mathematically proven to not cause inconsistencies.\nThis property is desirable, since all partitions of a split-brain scenario can continue accepting writes.\nSince machines continue functioning independently, not all writes will immediately seen by all machines.\nCRDTs are used in eventually consistent systems.</p>\n<p>Let's look at a concrete example of a CRDT: a simple counter (G-Counter).\nTo represent a counter we actually maintain N counters, where N is the number of machines.\nEach machine independently increments its counter if it receives a write.\nWhen two machines communicate each one sends along the latest values of all counters it knows of.\nA machine then takes the max of the local value and the received value for each counter.\nWhen a user reads the value of a counter, the system returns the sum of all counters.</p>\n<p>Based on similar concepts we can construct other similar data types:</p>\n<ul>\n<li>PN-Counter: A PN-Counter supports increments and decrements.\nThis is achieved by using two G-Counter, one keeps track of increments, the other one keeps track of decrements.</li>\n<li>G-Set: A G-Set is a set to which elements can be added to, but not removed.\nSets are propagates by taking the union of the local set with the received set.</li>\n<li>2P-Set: A 2P-Set allows for adding and removing items once.\nOnce a item was removed, it can not be added again.\nA 2P-Set is achieved by maintaining a tombstone set.\nThe tombstone set indicates which elements to exclude from the return value.</li>\n</ul>\n<p>Another frequently used CRDT is a LWW-Set (Last-Write-Wins).\nThis data structure is able to handle repeated additions and removals by timestamping each change.\nThe timestamp is generated using vector clocks.\nI personally do not like this data structure.\nVector clocks require consensus, consensus does not allow for a split-brain, and split-brain is a situation we fundamentally want to be able to handle with CRDTs.</p>\n<h1 id=\"my-research\"><a href=\"#my-research\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>My Research</h1>\n<p><a href=\"https://github.com/raymondxu/\">Raymond</a> and I wanted to test the viability of CRDTs in practice.\nFor this, we took an existing application and migrated components of it to a CRDT store.</p>\n<p>For this, we chose the application Vataxia, a simple social network with a Django backend. The <a href=\"https://github.com/buckyroberts/Vataxia-Frontend\">frontend</a> and <a href=\"https://github.com/buckyroberts/Vataxia\">backend</a> are completely decoupled. As our storage layer we chosee <a href=\"docs.basho.com/riak/kv/2.2.3/learn/concepts/crdts/\">Riak</a>, a well established CRDT store.</p>\n<p>We attempted to mirror the functionality provided by Vataxia originally. The two components we migrated are Voting and Messaging.</p>\n<h2 id=\"voting\"><a href=\"#voting\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Voting</h2>\n<p>Voting in Vataxia is simple. We broke it down into a few requirements:</p>\n<ul>\n<li>At most one Upvote or Downvote per user and post</li>\n<li>Vote removal must be possible</li>\n<li>No duplicate votes</li>\n<li>Only upvote OR downvote</li>\n</ul>\n<p>Take a minute and think about how you would implement it.\nWe considered the following options:</p>\n<ul>\n<li>Using per post Counters: Counters sound simple and intuitive.\nCounters do not check whether a user casted a duplicate vote, therefore this solution is not viable.</li>\n<li>Having a Set of voters per post: We considered using a G-Set, thereby eliminating the possibility of duplicate votes. This approach did not account for removing or changing one's vote.\nWe also considered using a 2P-Set, but this did not allow for the sequence upvote - remove vote - upvote.\nThis did not work either.\nA LWW-Set fulfilled almost all requirements.\nYet, it did not work, because it did not allow to enforce only having an upvote OR a downvote, since we have to maintain a seperate upvote and downvote set.</li>\n<li>A map per post with key user and value vote: Each post maintans a LWW-Map. On each post the key of the map is the user ID, while the value is true or false (upvote / downvote, absence = no vote). This solution ended up being the only approach that was able to replicate the semantics of Vataxia.</li>\n</ul>\n<h2 id=\"messaging\"><a href=\"#messaging\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Messaging</h2>\n<p>In Vataxia messaging is akin to emails.\nIt does not allow for chats or threads.\nInstead one sends individual messages that Vataxia treats completely separately.\nThe problems we faced here were different.\nImplementing even a basic version was a lot harder.</p>\n<p>We chose to use the following system.\nOur system maintains messages in a LLW-Map, where the key is the timestamp and the sender, while the value is the actual message.\nA G-Set maintained on the user referrences his sent and received messages.\nNote, that a G-Set is unordered, therefore we must address this on the application level.\nTo retrieve the latest messages we order the set on the user by timestamp and then fetch the latest messages.\nThis process can be expensive, since we load the identifier for every single message ever sent/received into memory and sort it.</p>\n<h1 id=\"problems-of-crdts\"><a href=\"#problems-of-crdts\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Problems of CRDTs</h1>\n<p>We notice, that the LWW-Map is a crucial component for both components we converted.\nFor me personally that is a deal breaker for CRDTs.\nSince we rely so heavily on vector clocks, we rely on consensus.\nCRDTs do not circumvent consensus in those cases and do not make the implementation easier.\nOur implementations almost converged to the usage of a simple KeyValue-store, but with a more limited set of operations.</p>\n<p>The other major criticism for CRDTs is privacy.\nIf we do not use vector clocks, data that is written to the store will never be deleted.\nEven a 2P-Set never truly deletes data, it merely marks it as hidden.\nIf an intruder gains access to the set, he/she can access the tombstone set and inspect deleted data.\nThose semantics are at odds with the EU \"right to be forgotten\".</p>\n<h1 id=\"retrospective\"><a href=\"#retrospective\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Retrospective</h1>\n<p>CRDTs are an interesting concept.\nIf an application can fit into the computational model of CRDTs excluding LWW semantics then CRDTs are a great options.\nAlmost no application can allow for those semantics.\nThe fact that deletion is often not possible is a crucial flaw.</p>\n<h1 id=\"links\"><a href=\"#links\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Links</h1>\n<p><a href=\"https://github.com/raymondxu/crdt-project\">Repository</a></p>\n<p><a href=\"https://docs.google.com/presentation/d/1i-AT59MD-DwwM-h1DFZUTj3qmx4_JYlojepA6IOauZI/edit?usp=sharing\">Midterm presentation</a></p>\n<p><a href=\"https://docs.google.com/presentation/d/1i-AT59MD-DwwM-h1DFZUTj3qmx4_JYlojepA6IOauZI/edit?usp=sharing\">Final presentation</a></p>\n<p><a href=\"/uploads/crdt-paper.pdf\">Final paper</a></p>","timeToRead":5,"fields":{"nextTitle":"Welcome to my Blog","nextSlug":"/articles/welcome-to-my-blog","prevTitle":"Lamport Clocks","prevSlug":"/articles/lamport-clocks","slug":"/articles/crd-ts-sound-good-in-theory-not-in-practice"}}},"pageContext":{"slug":"/articles/crd-ts-sound-good-in-theory-not-in-practice"}}