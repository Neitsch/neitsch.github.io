{"version":3,"sources":["webpack:///./src/pages/search.jsx","webpack:///./src/components/PostTags/PostTags.jsx","webpack:///./src/components/PostPreview/PostPreview.jsx"],"names":["HitComponent","props","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_PostPreview_PostPreview__WEBPACK_IMPORTED_MODULE_7__","postInfo","fields","slug","hit","objectID","excerpt","timeToRead","frontmatter","title","meta","tags","cover","date","MySearchBox","connectSearchBox","_ref","currentRefinement","refine","react_md_lib_TextFields_TextField__WEBPACK_IMPORTED_MODULE_3___default","style","paddingLeft","paddingRight","id","label","lineDirection","placeholder","value","onChange","e","customSize","Search","render","_components_layout__WEBPACK_IMPORTED_MODULE_8__","location","this","className","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","config","siteTitle","rel","href","siteUrl","react_instantsearch_dom__WEBPACK_IMPORTED_MODULE_5__","appId","apiKey","indexName","react_md_lib_Cards_Card__WEBPACK_IMPORTED_MODULE_4___default","raise","hitComponent","React","Component","PostTags","postNode","map","tag","gatsby_link__WEBPACK_IMPORTED_MODULE_3___default","key","textDecoration","to","_","kebabCase","react_md_lib_Chips__WEBPACK_IMPORTED_MODULE_4___default","PostPreview","_this","_Component","call","state","mobile","handleResize","bind","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_1___default","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","innerWidth","setState","expand","coverHeight","react__WEBPACK_IMPORTED_MODULE_3___default","gatsby_link__WEBPACK_IMPORTED_MODULE_10___default","react_md_lib_Media__WEBPACK_IMPORTED_MODULE_11___default","height","gatsby_image__WEBPACK_IMPORTED_MODULE_2___default","sizes","childImageSharp","react_md_lib_Media__WEBPACK_IMPORTED_MODULE_11__","react_md_lib_Cards_CardTitle__WEBPACK_IMPORTED_MODULE_5___default","react_md_lib_Buttons__WEBPACK_IMPORTED_MODULE_6___default","raised","secondary","expander","avatar","react_md_lib_Avatars__WEBPACK_IMPORTED_MODULE_7___default","icon","react_md_lib_FontIcons__WEBPACK_IMPORTED_MODULE_9___default","iconClassName","subtitle","react_md_lib_Cards_CardText__WEBPACK_IMPORTED_MODULE_8___default","expandable","_PostTags_PostTags__WEBPACK_IMPORTED_MODULE_12__"],"mappings":"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","file":"component---src-pages-search-jsx-6e0f275b789b9d18af79.js","sourcesContent":["import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport TextField from \"react-md/lib/TextFields/TextField\";\nimport Card from \"react-md/lib/Cards/Card\";\nimport { InstantSearch, Hits } from \"react-instantsearch/dom\";\nimport { connectSearchBox } from \"react-instantsearch/connectors\";\nimport PostPreview from \"../components/PostPreview/PostPreview\";\nimport Layout from \"../components/layout\";\nimport config from \"../../data/SiteConfig\";\n\nconst HitComponent = props => (\n  <PostPreview\n    postInfo={{\n      fields: {\n        slug: props.hit.objectID\n      },\n      excerpt: props.hit.excerpt,\n      timeToRead: props.hit.timeToRead,\n      frontmatter: {\n        title: props.hit.meta.title,\n        tags: props.hit.meta.tags,\n        cover: props.hit.meta.cover,\n        date: props.hit.meta.date,\n      }\n    }}\n  />\n);\n\nconst MySearchBox = connectSearchBox(({ currentRefinement, refine }) => (\n  <TextField\n    style={{ paddingLeft: \"15px\", paddingRight: \"15px\" }}\n    id=\"floating-center-title\"\n    label=\"\"\n    lineDirection=\"center\"\n    placeholder=\"Type your search\"\n    value={currentRefinement}\n    onChange={e => refine(e)}\n    customSize=\"title\"\n  />\n));\n\nclass Search extends React.Component {\n  render() {\n    return (\n      <Layout location={this.props.location}>\n        <div className=\"search-container\">\n          <Helmet>\n            <title>{`Search | ${config.siteTitle}`}</title>\n            <link rel=\"canonical\" href={`${config.siteUrl}/search/`} />\n          </Helmet>\n          <InstantSearch\n            appId=\"3GOEFLAHC5\"\n            apiKey=\"ba273c661b1c33cd54ad27056d166299\"\n            indexName=\"page_index\"\n          >\n            <div className=\"md-grid md-grid--no-spacing md-cell--middle\">\n              <div className=\"md-grid md-cell--8 mobile-fix\">\n                <Card raise className=\"md-grid md-cell md-cell--12\">\n                  <MySearchBox />\n                </Card>\n                <Hits hitComponent={HitComponent} />\n              </div>\n            </div>\n          </InstantSearch>\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport default Search;\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\nimport Link from \"gatsby-link\";\nimport Chip from \"react-md/lib/Chips\";\nimport \"./PostTags.scss\";\nimport {graphql} from 'gatsby';\n\nclass PostTags extends Component {\n  render() {\n    const { postNode } = this.props;\n    return (\n      <div className=\"post-tag-container\">\n        {postNode.frontmatter.tags &&\n          postNode.frontmatter.tags.map(tag => (\n            <Link\n              key={tag}\n              style={{ textDecoration: \"none\" }}\n              to={`/tags/${_.kebabCase(tag)}`}\n            >\n              <Chip label={tag} className=\"post-preview-tags\" />\n            </Link>\n          ))}\n      </div>\n    );\n  }\n}\n\nexport default PostTags;\n\nexport const query = graphql`\n  fragment PostTagsFragment on MarkdownRemark {\n    frontmatter {\n      tags\n    }\n  }\n`;\n","import {graphql} from 'gatsby';\nimport Img from \"gatsby-image\";\nimport React, { Component } from \"react\";\nimport Card from \"react-md/lib/Cards/Card\";\nimport CardTitle from \"react-md/lib/Cards/CardTitle\";\nimport Button from \"react-md/lib/Buttons\";\nimport Avatar from \"react-md/lib/Avatars\";\nimport CardText from \"react-md/lib/Cards/CardText\";\nimport FontIcon from \"react-md/lib/FontIcons\";\nimport Link from \"gatsby-link\";\nimport Media, { MediaOverlay } from \"react-md/lib/Media\";\nimport PostTags from \"../PostTags/PostTags\";\nimport \"./PostPreview.scss\";\n\nclass PostPreview extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mobile: true\n    };\n    this.handleResize = this.handleResize.bind(this);\n  }\n\n  componentDidMount() {\n    this.handleResize();\n    window.addEventListener(\"resize\", this.handleResize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.handleResize);\n  }\n\n  handleResize() {\n    if (window.innerWidth >= 640) {\n      this.setState({ mobile: false });\n    } else {\n      this.setState({ mobile: true });\n    }\n  }\n\n  render() {\n    const { postInfo } = this.props;\n    const { mobile } = this.state;\n    const expand = mobile;\n    /* eslint no-undef: \"off\" */\n    const coverHeight = mobile ? 162 : 225;\n    return (\n      <Card key={postInfo.fields.slug} raise className=\"md-grid md-cell md-cell--12\">\n        <Link style={{ textDecoration: \"none\" }} to={postInfo.fields.slug}>\n          <Media\n            style={{\n              height: `${coverHeight}px`\n            }}\n            className=\"post-preview-cover\"\n          >\n            <Img sizes={postInfo.frontmatter.cover.childImageSharp.sizes} />\n            <MediaOverlay>\n              <CardTitle title={postInfo.frontmatter.title}>\n                <Button raised secondary className=\"md-cell--right\">\n                  Read\n                </Button>\n              </CardTitle>\n            </MediaOverlay>\n          </Media>\n        </Link>\n        <CardTitle\n          expander={expand}\n          avatar={<Avatar icon={<FontIcon iconClassName=\"fa fa-calendar\" />} />}\n          title={`Published on ${postInfo.frontmatter.date}`}\n          subtitle={`${postInfo.timeToRead} min read`}\n        />\n\n        <CardText expandable={expand}>\n          {postInfo.excerpt}\n          <PostTags postNode={postInfo} />\n        </CardText>\n      </Card>\n    );\n  }\n}\n\nexport default PostPreview;\n\nexport const query = graphql`\n  fragment PostPreviewFragment on MarkdownRemark {\n    ...PostTagsFragment\n    fields {\n      slug\n    }\n    excerpt\n    timeToRead\n    frontmatter {\n      title\n      tags\n      cover {\n        childImageSharp {\n          sizes(maxWidth: 630) {\n            ...GatsbyImageSharpSizes_withWebp_tracedSVG\n          }\n          fluid {\n            src\n          }\n        }\n      }\n      date\n    }\n  }\n`;\n"],"sourceRoot":""}