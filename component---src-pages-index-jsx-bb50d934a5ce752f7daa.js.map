{"version":3,"sources":["webpack:///./src/pages/index.jsx","webpack:///./src/components/PostTags/PostTags.jsx","webpack:///./src/components/PostPreview/PostPreview.jsx","webpack:///./node_modules/react-md/lib/Media/index.js","webpack:///./src/components/SEO/SEO.jsx","webpack:///./src/components/PostListing/PostListing.jsx"],"names":["Index","render","postEdges","this","props","data","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_5__","location","className","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","config","siteTitle","rel","href","siteUrl","_components_SEO_SEO__WEBPACK_IMPORTED_MODULE_4__","_components_PostListing_PostListing__WEBPACK_IMPORTED_MODULE_3__","React","Component","pageQuery","PostTags","tags","map","tag","gatsby_link__WEBPACK_IMPORTED_MODULE_3___default","key","style","textDecoration","to","_","kebabCase","react_md_lib_Chips__WEBPACK_IMPORTED_MODULE_4___default","label","PostPreview","_this","_Component","call","state","mobile","handleResize","bind","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_1___default","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","innerWidth","setState","postInfo","expand","coverHeight","react__WEBPACK_IMPORTED_MODULE_3___default","react_md_lib_Cards_Card__WEBPACK_IMPORTED_MODULE_4___default","path","raise","gatsby_link__WEBPACK_IMPORTED_MODULE_10___default","react_md_lib_Media__WEBPACK_IMPORTED_MODULE_11___default","height","gatsby_image__WEBPACK_IMPORTED_MODULE_2___default","sizes","cover","childImageSharp","react_md_lib_Media__WEBPACK_IMPORTED_MODULE_11__","react_md_lib_Cards_CardTitle__WEBPACK_IMPORTED_MODULE_5___default","title","react_md_lib_Buttons__WEBPACK_IMPORTED_MODULE_6___default","raised","secondary","expander","avatar","react_md_lib_Avatars__WEBPACK_IMPORTED_MODULE_7___default","icon","react_md_lib_FontIcons__WEBPACK_IMPORTED_MODULE_9___default","iconClassName","date","subtitle","timeToRead","react_md_lib_Cards_CardText__WEBPACK_IMPORTED_MODULE_8___default","expandable","excerpt","_PostTags_PostTags__WEBPACK_IMPORTED_MODULE_12__","exports","__esModule","MediaOverlay","Media","undefined","_Media3","_interopRequireDefault","__webpack_require__","_MediaOverlay3","obj","default","SEO","description","image","postURL","keywords","_this$props","postNode","postPath","postSEO","addiitionalJsonLD","postMeta","frontmatter","pathPrefix","join","siteDescription","siteLogo","realPrefix","blogURL","schemaOrgJSONLD","@context","@type","url","name","alternateName","siteTitleAlt","push","itemListElement","position","item","@id","headline","Fragment","content","property","userName","type","JSON","stringify","concat","siteFBAppID","userTwitter","PostListing","getPostList","postList","forEach","postEdge","node","fields","slug","react__WEBPACK_IMPORTED_MODULE_2___default","post","_PostPreview_PostPreview__WEBPACK_IMPORTED_MODULE_3__"],"mappings":"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","file":"component---src-pages-index-jsx-bb50d934a5ce752f7daa.js","sourcesContent":["import { graphql } from \"gatsby\";\nimport React from \"react\";\nimport Helmet from \"react-helmet\";\nimport PostListing from \"../components/PostListing/PostListing\";\nimport SEO from \"../components/SEO/SEO\";\nimport Layout from \"../components/layout\";\nimport config from \"../../data/SiteConfig\";\n\nclass Index extends React.Component {\n  render() {\n    const postEdges = this.props.data.allMarkdownRemark.edges;\n    return (\n      <Layout location={this.props.location}>\n        <div className=\"index-container\">\n          <Helmet>\n            <title>{config.siteTitle}</title>\n            <link rel=\"canonical\" href={`${config.siteUrl}`} />\n          </Helmet>\n          <SEO postEdges={postEdges} />\n          <PostListing postEdges={postEdges} />\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport default Index;\n\n/* eslint no-undef: \"off\"*/\nexport const pageQuery = graphql`\n  query IndexQuery {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            cover {\n              childImageSharp {\n                sizes(maxWidth: 630) {\n                  ...GatsbyImageSharpSizes_withWebp_tracedSVG\n                }\n              }\n            }\n            date\n          }\n        }\n      }\n    }\n  }\n`;\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\nimport Link from \"gatsby-link\";\nimport Chip from \"react-md/lib/Chips\";\nimport \"./PostTags.scss\";\n\nclass PostTags extends Component {\n  render() {\n    const { tags } = this.props;\n    return (\n      <div className=\"post-tag-container\">\n        {tags &&\n          tags.map(tag => (\n            <Link\n              key={tag}\n              style={{ textDecoration: \"none\" }}\n              to={`/tags/${_.kebabCase(tag)}`}\n            >\n              <Chip label={tag} className=\"post-preview-tags\" />\n            </Link>\n          ))}\n      </div>\n    );\n  }\n}\n\nexport default PostTags;\n","import Img from \"gatsby-image\";\nimport React, { Component } from \"react\";\nimport Card from \"react-md/lib/Cards/Card\";\nimport CardTitle from \"react-md/lib/Cards/CardTitle\";\nimport Button from \"react-md/lib/Buttons\";\nimport Avatar from \"react-md/lib/Avatars\";\nimport CardText from \"react-md/lib/Cards/CardText\";\nimport FontIcon from \"react-md/lib/FontIcons\";\nimport Link from \"gatsby-link\";\nimport Media, { MediaOverlay } from \"react-md/lib/Media\";\nimport PostTags from \"../PostTags/PostTags\";\nimport \"./PostPreview.scss\";\n\nclass PostPreview extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mobile: true\n    };\n    this.handleResize = this.handleResize.bind(this);\n  }\n  componentDidMount() {\n    this.handleResize();\n    window.addEventListener(\"resize\", this.handleResize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.handleResize);\n  }\n\n  handleResize() {\n    if (window.innerWidth >= 640) {\n      this.setState({ mobile: false });\n    } else {\n      this.setState({ mobile: true });\n    }\n  }\n  render() {\n    const { postInfo } = this.props;\n    const { mobile } = this.state;\n    const expand = mobile;\n    /* eslint no-undef: \"off\"*/\n    const coverHeight = mobile ? 162 : 225;\n    return (\n      <Card key={postInfo.path} raise className=\"md-grid md-cell md-cell--12\">\n        <Link style={{ textDecoration: \"none\" }} to={postInfo.path}>\n          <Media\n            style={{\n              height: `${coverHeight}px`\n            }}\n            className=\"post-preview-cover\"\n          >\n            <Img sizes={postInfo.cover.childImageSharp.sizes} />\n            <MediaOverlay>\n              <CardTitle title={postInfo.title}>\n                <Button raised secondary className=\"md-cell--right\">\n                  Read\n                </Button>\n              </CardTitle>\n            </MediaOverlay>\n          </Media>\n        </Link>\n        <CardTitle\n          expander={expand}\n          avatar={<Avatar icon={<FontIcon iconClassName=\"fa fa-calendar\" />} />}\n          title={`Published on ${postInfo.date}`}\n          subtitle={`${postInfo.timeToRead} min read`}\n        />\n\n        <CardText expandable={expand}>\n          {postInfo.excerpt}\n          <PostTags tags={postInfo.tags} />\n        </CardText>\n      </Card>\n    );\n  }\n}\n\nexport default PostPreview;\n","'use strict';\n\nexports.__esModule = true;\nexports.MediaOverlay = exports.Media = undefined;\n\nvar _Media2 = require('./Media');\n\nvar _Media3 = _interopRequireDefault(_Media2);\n\nvar _MediaOverlay2 = require('./MediaOverlay');\n\nvar _MediaOverlay3 = _interopRequireDefault(_MediaOverlay2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Media3.default;\nexports.Media = _Media3.default;\nexports.MediaOverlay = _MediaOverlay3.default;","import React, { Component } from \"react\";\nimport Helmet from \"react-helmet\";\nimport config from \"../../../data/SiteConfig\";\n\nclass SEO extends Component {\n  render() {\n    const { postNode, postPath, postSEO, addiitionalJsonLD } = this.props;\n    let title;\n    let description;\n    let image;\n    let postURL;\n    let keywords;\n    if (postSEO) {\n      const postMeta = postNode.frontmatter;\n      title = postMeta.title;\n      description = postMeta.description\n        ? postMeta.description\n        : postNode.excerpt;\n      image = postMeta.cover;\n      postURL = config.siteUrl + config.pathPrefix + postPath;\n      keywords = postNode.frontmatter.tags.join(\",\");\n    } else {\n      title = config.siteTitle;\n      description = config.siteDescription;\n      image = config.siteLogo;\n    }\n    const realPrefix = config.pathPrefix === \"/\" ? \"\" : config.pathPrefix;\n    image = config.siteUrl + realPrefix + image;\n    const blogURL = config.siteUrl + config.pathPrefix;\n    const schemaOrgJSONLD = [\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"WebSite\",\n        url: blogURL,\n        name: title,\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\"\n      }\n    ];\n    if (postSEO) {\n      schemaOrgJSONLD.push([\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          itemListElement: [\n            {\n              \"@type\": \"ListItem\",\n              position: 1,\n              item: {\n                \"@id\": postURL,\n                name: title,\n                image\n              }\n            }\n          ]\n        },\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BlogPosting\",\n          url: blogURL,\n          name: title,\n          alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\",\n          headline: title,\n          image: {\n            \"@type\": \"ImageObject\",\n            url: image\n          },\n          description\n        }\n      ]);\n    }\n    return (\n      <React.Fragment>\n        <Helmet>\n          {/* General tags */}\n          <meta name=\"description\" content={description} />\n          <meta name=\"image\" content={image} />\n          {keywords ? <meta property=\"keywords\" content={keywords} /> : null}\n          <meta name=\"author\" content={config.userName} />\n\n          {/* Schema.org tags */}\n          <script type=\"application/ld+json\">\n            {JSON.stringify([...schemaOrgJSONLD, ...addiitionalJsonLD])}\n          </script>\n\n          {/* OpenGraph tags */}\n          <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\n          {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\n          <meta property=\"og:title\" content={title} />\n          <meta property=\"og:description\" content={description} />\n          <meta property=\"og:image\" content={image} />\n          <meta\n            property=\"fb:app_id\"\n            content={config.siteFBAppID ? config.siteFBAppID : \"\"}\n          />\n\n          {/* Twitter Card tags */}\n          <meta name=\"twitter:card\" content=\"summary_large_image\" />\n          <meta\n            name=\"twitter:creator\"\n            content={config.userTwitter ? config.userTwitter : \"\"}\n          />\n          <meta name=\"twitter:title\" content={title} />\n          <meta name=\"twitter:description\" content={description} />\n          <meta name=\"twitter:image\" content={image} />\n        </Helmet>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default SEO;\n","import React from \"react\";\nimport PostPreview from \"../PostPreview/PostPreview\";\n\nclass PostListing extends React.Component {\n  getPostList() {\n    const postList = [];\n    this.props.postEdges.forEach(postEdge => {\n      postList.push({\n        path: postEdge.node.fields.slug,\n        tags: postEdge.node.frontmatter.tags,\n        cover: postEdge.node.frontmatter.cover,\n        title: postEdge.node.frontmatter.title,\n        date: postEdge.node.frontmatter.date,\n        excerpt: postEdge.node.excerpt,\n        timeToRead: postEdge.node.timeToRead\n      });\n    });\n    return postList;\n  }\n  render() {\n    const postList = this.getPostList();\n    return (\n      <div className=\"md-grid md-grid--no-spacing md-cell--middle\">\n        <div className=\"md-grid md-cell--8 mobile-fix\">\n          {postList.map(post => (\n            <PostPreview key={post.title} postInfo={post} />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PostListing;\n"],"sourceRoot":""}