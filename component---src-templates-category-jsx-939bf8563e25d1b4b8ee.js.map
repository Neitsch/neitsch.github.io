{"version":3,"sources":["webpack:///./src/templates/category.jsx","webpack:///./src/components/PostTags/PostTags.jsx","webpack:///./src/components/PostPreview/PostPreview.jsx","webpack:///./node_modules/react-md/lib/Media/index.js","webpack:///./src/components/PostListing/PostListing.jsx"],"names":["CategoryTemplate","render","category","this","props","pageContext","postEdges","data","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_4__","location","className","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","config","siteTitle","rel","href","siteUrl","_components_PostListing_PostListing__WEBPACK_IMPORTED_MODULE_3__","React","Component","pageQuery","PostTags","tags","react__WEBPACK_IMPORTED_MODULE_2___default","map","tag","gatsby_link__WEBPACK_IMPORTED_MODULE_4___default","key","style","textDecoration","to","_","kebabCase","react_md_lib_Chips__WEBPACK_IMPORTED_MODULE_5___default","label","PostPreview","_this","_Component","call","state","mobile","handleResize","bind","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2___default","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","innerWidth","setState","postInfo","expand","coverHeight","react__WEBPACK_IMPORTED_MODULE_4___default","react_md_lib_Cards_Card__WEBPACK_IMPORTED_MODULE_5___default","path","raise","gatsby_link__WEBPACK_IMPORTED_MODULE_11___default","react_md_lib_Media__WEBPACK_IMPORTED_MODULE_12___default","height","gatsby_image__WEBPACK_IMPORTED_MODULE_3___default","sizes","cover","childImageSharp","react_md_lib_Media__WEBPACK_IMPORTED_MODULE_12__","react_md_lib_Cards_CardTitle__WEBPACK_IMPORTED_MODULE_6___default","title","react_md_lib_Buttons__WEBPACK_IMPORTED_MODULE_7___default","raised","secondary","expander","avatar","react_md_lib_Avatars__WEBPACK_IMPORTED_MODULE_8___default","icon","react_md_lib_FontIcons__WEBPACK_IMPORTED_MODULE_10___default","iconClassName","date","subtitle","timeToRead","react_md_lib_Cards_CardText__WEBPACK_IMPORTED_MODULE_9___default","expandable","excerpt","_PostTags_PostTags__WEBPACK_IMPORTED_MODULE_13__","exports","__esModule","MediaOverlay","Media","undefined","_Media3","_interopRequireDefault","__webpack_require__","_MediaOverlay3","obj","default","PostListing","getPostList","postList","forEach","postEdge","push","node","fields","slug","frontmatter","post","_PostPreview_PostPreview__WEBPACK_IMPORTED_MODULE_5__"],"mappings":"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","file":"component---src-templates-category-jsx-939bf8563e25d1b4b8ee.js","sourcesContent":["import { graphql } from \"gatsby\";\nimport React from \"react\";\nimport Helmet from \"react-helmet\";\nimport PostListing from \"../components/PostListing/PostListing\";\nimport Layout from \"../components/layout\";\nimport config from \"../../data/SiteConfig\";\n\nexport default class CategoryTemplate extends React.Component {\n  render() {\n    const category = this.props.pageContext.category;\n    const postEdges = this.props.data.allMarkdownRemark.edges;\n    return (\n      <Layout location={this.props.location}>\n        <div className=\"category-container\">\n          <Helmet>\n            <title>{`Posts in category \"${category}\" | ${\n              config.siteTitle\n            }`}</title>\n            <link\n              rel=\"canonical\"\n              href={`${config.siteUrl}/categories/${category}`}\n            />\n          </Helmet>\n          <PostListing postEdges={postEdges} />\n        </div>\n      </Layout>\n    );\n  }\n}\n\n/* eslint no-undef: \"off\"*/\nexport const pageQuery = graphql`\n  query CategoryPage($category: String) {\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { category: { eq: $category } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            cover {\n              childImageSharp {\n                sizes(maxWidth: 630) {\n                  ...GatsbyImageSharpSizes_withWebp_tracedSVG\n                }\n              }\n            }\n            date\n          }\n        }\n      }\n    }\n  }\n`;\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\nimport Link from \"gatsby-link\";\nimport Chip from \"react-md/lib/Chips\";\nimport \"./PostTags.scss\";\n\nclass PostTags extends Component {\n  render() {\n    const { tags } = this.props;\n    return (\n      <div className=\"post-tag-container\">\n        {tags &&\n          tags.map(tag => (\n            <Link\n              key={tag}\n              style={{ textDecoration: \"none\" }}\n              to={`/tags/${_.kebabCase(tag)}`}\n            >\n              <Chip label={tag} className=\"post-preview-tags\" />\n            </Link>\n          ))}\n      </div>\n    );\n  }\n}\n\nexport default PostTags;\n","import Img from \"gatsby-image\";\nimport React, { Component } from \"react\";\nimport Card from \"react-md/lib/Cards/Card\";\nimport CardTitle from \"react-md/lib/Cards/CardTitle\";\nimport Button from \"react-md/lib/Buttons\";\nimport Avatar from \"react-md/lib/Avatars\";\nimport CardText from \"react-md/lib/Cards/CardText\";\nimport FontIcon from \"react-md/lib/FontIcons\";\nimport Link from \"gatsby-link\";\nimport Media, { MediaOverlay } from \"react-md/lib/Media\";\nimport PostTags from \"../PostTags/PostTags\";\nimport \"./PostPreview.scss\";\n\nclass PostPreview extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mobile: true\n    };\n    this.handleResize = this.handleResize.bind(this);\n  }\n  componentDidMount() {\n    this.handleResize();\n    window.addEventListener(\"resize\", this.handleResize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.handleResize);\n  }\n\n  handleResize() {\n    if (window.innerWidth >= 640) {\n      this.setState({ mobile: false });\n    } else {\n      this.setState({ mobile: true });\n    }\n  }\n  render() {\n    const { postInfo } = this.props;\n    const { mobile } = this.state;\n    const expand = mobile;\n    /* eslint no-undef: \"off\"*/\n    const coverHeight = mobile ? 162 : 225;\n    return (\n      <Card key={postInfo.path} raise className=\"md-grid md-cell md-cell--12\">\n        <Link style={{ textDecoration: \"none\" }} to={postInfo.path}>\n          <Media\n            style={{\n              height: `${coverHeight}px`\n            }}\n            className=\"post-preview-cover\"\n          >\n            <Img sizes={postInfo.cover.childImageSharp.sizes} />\n            <MediaOverlay>\n              <CardTitle title={postInfo.title}>\n                <Button raised secondary className=\"md-cell--right\">\n                  Read\n                </Button>\n              </CardTitle>\n            </MediaOverlay>\n          </Media>\n        </Link>\n        <CardTitle\n          expander={expand}\n          avatar={<Avatar icon={<FontIcon iconClassName=\"fa fa-calendar\" />} />}\n          title={`Published on ${postInfo.date}`}\n          subtitle={`${postInfo.timeToRead} min read`}\n        />\n\n        <CardText expandable={expand}>\n          {postInfo.excerpt}\n          <PostTags tags={postInfo.tags} />\n        </CardText>\n      </Card>\n    );\n  }\n}\n\nexport default PostPreview;\n","'use strict';\n\nexports.__esModule = true;\nexports.MediaOverlay = exports.Media = undefined;\n\nvar _Media2 = require('./Media');\n\nvar _Media3 = _interopRequireDefault(_Media2);\n\nvar _MediaOverlay2 = require('./MediaOverlay');\n\nvar _MediaOverlay3 = _interopRequireDefault(_MediaOverlay2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Media3.default;\nexports.Media = _Media3.default;\nexports.MediaOverlay = _MediaOverlay3.default;","import React from \"react\";\nimport PostPreview from \"../PostPreview/PostPreview\";\n\nclass PostListing extends React.Component {\n  getPostList() {\n    const postList = [];\n    this.props.postEdges.forEach(postEdge => {\n      postList.push({\n        path: postEdge.node.fields.slug,\n        tags: postEdge.node.frontmatter.tags,\n        cover: postEdge.node.frontmatter.cover,\n        title: postEdge.node.frontmatter.title,\n        date: postEdge.node.frontmatter.date,\n        excerpt: postEdge.node.excerpt,\n        timeToRead: postEdge.node.timeToRead\n      });\n    });\n    return postList;\n  }\n  render() {\n    const postList = this.getPostList();\n    return (\n      <div className=\"md-grid md-grid--no-spacing md-cell--middle\">\n        <div className=\"md-grid md-cell--8 mobile-fix\">\n          {postList.map(post => (\n            <PostPreview key={post.title} postInfo={post} />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PostListing;\n"],"sourceRoot":""}