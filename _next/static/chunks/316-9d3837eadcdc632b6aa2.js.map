{"version":3,"file":"static/chunks/316-9d3837eadcdc632b6aa2.js","mappings":"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CA,OACA,OACA,UAEFilB,SAAU,CACR,qBACA,kBACA,iBACA,iBACA,iBACA,gBACA,eACA,eACA,cACA,aACA,aACA,aACA,aACA,aACA,aACA,YACA,YACA,YACA,YACA,YACA,YACA,WACA,WACA,WACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,QACA,OACA,OACA,OACA,OACA,OACA,MACA,MACA,MACA,MAEF8tC,OAAQ,CACN,QACA,OACA,gCACA,wBACA,wBACA,uBACA,uBACA,sBACA,sBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,iBACA,iBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,akBACA,iBACA,iBACA,iBACA,gBACA,eACA,eACA,eACA,eACA,cACA,cACA,cACA,WACA,WACA,UACA,SACA,QACA,OACA,QAIEC,EA37BR,SAAmB91C,GAIjB,MAAM7H,EAAsB6H,EAAKjI,QAAQ,KAAM,IAAK,CAClDF,SAAU,CACR,CACEJ,MAAO,WAIPs+C,EAAmB,qBACnBC,EAAe,kBAEfC,EAAmB,iCAEvBP,EAASM,GACT,gBAAkBN,EAJS,YAK7B,IAEMQ,EAAsB,CAC1B/lD,UAAW,OACXsH,MAAO,sBAMH0+C,EAAU,CACdhmD,UAAW,SACXgP,SAAU,CACR,CACE1H,MAAO,cACPhW,IAAK,IACLmW,QAAS,MACTC,SAAU,CAAEmI,EAAKxI,mBAEnB,CACEC,MAAO,sEACPhW,IAAK,IACLmW,QAAS,KAEXoI,EAAK3G,kBAAkB,CACrB5B,MAAO,mCACPhW,IAAK,0BAKL20D,EAAU,CACdjmD,UAAW,SACXgP,SAAU,CACR,CACE1H,MAAO,iBAET,CACEA,MAAO,yFAET,CACEA,MAAO,wFAGXC,UAAW,GAGP2+C,EAAe,CACnBlmD,UAAW,OACXsH,MAAO,eACPhW,IAAK,IACLsY,SAAU,CACRkB,QACE,0FAGJpD,SAAU,CACR,CACEJ,MAAO,OACPC,UAAW,GAEbsI,EAAKH,QAAQs2C,EAAS,CACpBhmD,UAAW,WAEb,CACEA,UAAW,SACXsH,MAAO,SAETU,EACA6H,EAAK5H,uBAIHM,EAAa,CACjBvI,UAAW,QACXsH,MAAOi+C,EAASM,GAAgBh2C,EAAK7I,SACrCO,UAAW,GAGP4+C,EAAiBZ,EAASM,GAAgBh2C,EAAK7I,SAAW,UA+R1Do/C,EAAe,CACnB1zD,KA9LqB,CACrB,OACA,OACA,WACA,WACA,UACA,SACA,QACA,MACA,OACA,QACA,OACA,WAmLAoY,QA9RwB,CACxB,UACA,UACA,MACA,SACA,MACA,gBACA,gBACA,kBACA,OACA,SACA,QACA,QACA,OACA,QACA,QACA,WACA,YACA,WACA,QACA,UACA,QACA,gBACA,YACA,YACA,YACA,WACA,WACA,UACA,SACA,KACA,kBACA,OACA,OACA,WACA,SACA,SACA,QACA,QACA,MACA,SACA,OACA,KACA,SACA,SACA,SACA,UACA,YACA,MACA,WACA,MACA,SACA,UACA,WACA,KACA,QACA,WACA,UACA,YACA,SACA,WACA,WACA,sBACA,WACA,SACA,SACA,SACA,SACA,gBACA,iBACA,SACA,SACA,eACA,WACA,OACA,eACA,QACA,mBACA,2BACA,OACA,MACA,UACA,SACA,WACA,QACA,WACA,QACA,UACA,WACA,QACA,MACA,WAoMA46C,QAhBe,CACf,OACA,QACA,UACA,UACA,QAYA/tC,SARe,CACf,WAQA0uC,YAnLiB,CACjB,MACA,WACA,UACA,mBACA,SACA,UACA,qBACA,yBACA,qBACA,QACA,aACA,SACA,YACA,mBACA,gBACA,UACA,QACA,aACA,WACA,WACA,QACA,WACA,gBACA,gBACA,OACA,UACA,iBACA,QACA,kBACA,wBACA,cACA,MACA,gBACA,cACA,eACA,qBACA,aACA,QACA,cACA,eACA,cACA,SACA,YACA,QACA,cACA,aACA,gBACA,qBACA,qBACA,gBACA,UACA,SACA,WACA,UACA,iBA+HIC,EAAoB,CACxBtmD,UAAW,oBACXuH,UAAW,EACXqC,SAAU,CAER28C,MAjImB,CACrB,QACA,MACA,OACA,QACA,WACA,OACA,OACA,QACA,SACA,OACA,OACA,MACA,OACA,MACA,OACA,OACA,UACA,OACA,WACA,OACA,MACA,OACA,QACA,OACA,UACA,UACA,QACA,OACA,QACA,SACA,SACA,SACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WACA,OACA,UACA,QACA,MACA,QACA,YACA,cACA,4BACA,aACA,cACA,SACA,SACA,SACA,SACA,SACA,OACA,OACA,MACA,SACA,UACA,OACA,UACA,QACA,MACA,OACA,WACA,UACA,OACA,SACA,MACA,SACA,QACA,SACA,SACA,SACA,SACA,SACA,UACA,SACA,UACA,UACA,UACA,UACA,UACA,SACA,SACA,OACA,MACA,OACA,YACA,gBACA,UACA,UACA,WACA,QACA,UACA,aA+BAj/C,MAAO9X,EACL,KACA,eACA,SACA,UACA,YACAqgB,EAAK7I,UAjbQ9U,EAkbH,mBAjbP1C,EAAO,MAAO0C,EAAI,QAD3B,IAAmBA,EAqbjB,MAAMs0D,EAAsB,CAC1BF,EACAJ,EACAH,EACA/9C,EACA6H,EAAK5H,qBACLg+C,EACAD,GAGIS,EAAqB,CAIzBz3C,SAAU,CACR,CACE1H,MAAO,IACPhW,IAAK,KAEP,CACEgW,MAAO,KACPhW,IAAK,MAEP,CACEmY,cAAe,wBACfnY,IAAK,MAGTsY,SAAUw8C,EACV1+C,SAAU8+C,EAAoBh3D,OAAO,CACnC,CACE8X,MAAO,KACPhW,IAAK,KACLsY,SAAUw8C,EACV1+C,SAAU8+C,EAAoBh3D,OAAO,CAAE,SACvC+X,UAAW,KAGfA,UAAW,GAGPm/C,EAAuB,CAC3B1mD,UAAW,WACXsH,MAAO,IAAMw+C,EAAmB,eAAiBK,EACjD95C,aAAa,EACb/a,IAAK,QACLib,YAAY,EACZ3C,SAAUw8C,EACV3+C,QAAS,iBACTC,SAAU,CACR,CACEJ,MAAOs+C,EACPh8C,SAAUw8C,EACV7+C,UAAW,GAEb,CACED,MAAO6+C,EACP95C,aAAa,EACb3E,SAAU,CAAEa,GACZhB,UAAW,GAIb,CACED,MAAO,KACPC,UAAW,GAGb,CACED,MAAO,IACPsH,gBAAgB,EAChBlH,SAAU,CACRs+C,EACAC,IAKJ,CACE1+C,UAAW,EACX1W,MAAO,KAET,CACEmP,UAAW,SACXsH,MAAO,KACPhW,IAAK,KACLsY,SAAUw8C,EACV7+C,UAAW,EACXG,SAAU,CACRM,EACA6H,EAAK5H,qBACL+9C,EACAC,EACAF,EAEA,CACEz+C,MAAO,KACPhW,IAAK,KACLsY,SAAUw8C,EACV7+C,UAAW,EACXG,SAAU,CACR,OACAM,EACA6H,EAAK5H,qBACL+9C,EACAC,EACAF,MAKRA,EACA/9C,EACA6H,EAAK5H,qBACLi+C,IAIJ,MAAO,CACL15D,KAAM,MACNujB,QAAS,CACP,KACA,MACA,MACA,MACA,KACA,MACA,OAEFnG,SAAUw8C,EACV3+C,QAAS,KACT0G,iBAAkB,CAChB,oBAAqB,YAEvBzG,SAAU,GAAGlY,OACXi3D,EACAC,EACAJ,EACAE,EACA,CACEN,EACA,CACE5+C,MAAO,uMACPhW,IAAK,IACLsY,SAAUw8C,EACV1+C,SAAU,CACR,OACAq+C,IAGJ,CACEz+C,MAAOuI,EAAK7I,SAAW,KACvB4C,SAAUw8C,GAEZ,CACEv1D,MAAO,CAEL,wDACA,MACA,OAEFmP,UAAW,CACT,EAAG,UACH,EAAG,mBA+XG2mD,CAAU92C,GAEpB+2C,EAAyCjB,EAAgB,SAW/D,OATAiB,EAAIl0D,KAAO,IAAKk0D,EAAIl0D,QAAS8yD,EAAW9yD,MACxCk0D,EAAIlB,QAAU,IAAKkB,EAAIlB,WAAYF,EAAWE,SAC9CkB,EAAIjvC,SAAW,IAAKivC,EAAIjvC,YAAa6tC,EAAW7tC,UAChDivC,EAAInB,OAASD,EAAWC,OAExBE,EAAQn5D,KAAO,UACfm5D,EAAQ51C,QAAU,CAAC,OACnB41C,EAAQ9wC,WAAa,MAEd8wC,GCp+BT,SAAS,KAAUz3D,GAEjB,OADeA,EAAKsQ,KAAKtJ,IAAM,OAZjBhD,EAYwBgD,GAVpB,kBAAPhD,EAAwBA,EAE5BA,EAAGX,OAHM,KADlB,IAAgBW,KAY4BuM,KAAK,IAsKjD,MAzJA,SAAcoR,GACZ,MAAMg3C,EAAM,GACNC,EAAa,CACjBx/C,MAAO,OACPhW,IAAI,KACJoW,SAAU,CACR,OACA,CACEJ,MAAO,KACPI,SAAU,CAAEm/C,MAIlB17D,OAAOqO,OAAOqtD,EAAI,CAChB7mD,UAAW,WACXgP,SAAU,CACR,CAAC1H,MAAO,EAAO,qBAGb,wBACFw/C,KAIJ,MAAMC,EAAQ,CACZ/mD,UAAW,QACXsH,MAAO,OAAQhW,IAAK,KACpBoW,SAAU,CAACmI,EAAKxI,mBAEZ2/C,EAAW,CACf1/C,MAAO,iBACP4C,OAAQ,CACNxC,SAAU,CACRmI,EAAK3G,kBAAkB,CACrB5B,MAAO,QACPhW,IAAK,QACL0O,UAAW,cAKbinD,EAAe,CACnBjnD,UAAW,SACXsH,MAAO,IAAKhW,IAAK,IACjBoW,SAAU,CACRmI,EAAKxI,iBACLw/C,EACAE,IAGJA,EAAMr/C,SAASzV,KAAKg1D,GACpB,MASMC,EAAa,CACjB5/C,MAAO,SACPhW,IAAK,OACLoW,SAAU,CACR,CAAEJ,MAAO,gBAAiBtH,UAAW,UACrC6P,EAAK1H,YACL0+C,IAcEM,EAAgBt3C,EAAKhH,QAAQ,CACjCE,OAAQ,IAZa,CACrB,OACA,OACA,MACA,KACA,MACA,MACA,OACA,OACA,QAG2BtK,KAAK,QAChC8I,UAAW,KAEP6/C,EAAW,CACfpnD,UAAW,WACXsH,MAAO,4BACP+E,aAAa,EACb3E,SAAU,CAACmI,EAAKH,QAAQG,EAAKtH,WAAY,CAACjB,MAAO,gBACjDC,UAAW,GAwBb,MAAO,CACL/a,KAAM,OACNujB,QAAS,CAAC,MACVnG,SAAU,CACR6E,SAAU,gBACV3D,QA1Ba,CACf,KACA,OACA,OACA,OACA,KACA,MACA,QACA,KACA,KACA,OACA,OACA,OACA,YAcE46C,QAXa,CACf,OACA,SAUE/tC,SAGE,6uBAeJjQ,SAAU,CACRy/C,EACAt3C,EAAKhH,UACLu+C,EACAF,EACAr3C,EAAK3H,kBACL8+C,EACAC,EA9FkB,CACpBjnD,UAAW,GACXsH,MAAO,OAGW,CAClBtH,UAAW,SACXsH,MAAO,IAAKhW,IAAK,KA0Ffu1D,KClKN,SAAS,EAAS30D,GAChB,OAOF,YAAmBhE,GAEjB,OADeA,EAAKsQ,KAAKtJ,GApB3B,SAAgBhD,GACd,OAAKA,EACa,kBAAPA,EAAwBA,EAE5BA,EAAGX,OAHM,KAmBe,CAAO2D,KAAIuJ,KAAK,IARxC,CAAO,MAAOvM,EAAI,MA6V3B,MA1UA,SAAW2d,GAIT,MAAM7H,EAAsB6H,EAAKjI,QAAQ,KAAM,IAAK,CAClDF,SAAU,CACR,CACEJ,MAAO,WAIPs+C,EAAmB,qBACnBC,EAAe,kBAEfC,EAAmB,uBAEvB,EAASD,GACT,gBAAkB,EAJS,YAK7B,IAGMwB,EAAQ,CACZrnD,UAAW,OACXgP,SAAU,CACR,CAAE1H,MAAO,sBACT,CAAEzW,MAAO,2BAQPm1D,EAAU,CACdhmD,UAAW,SACXgP,SAAU,CACR,CACE1H,MAAO,cACPhW,IAAK,IACLmW,QAAS,MACTC,SAAU,CAAEmI,EAAKxI,mBAEnB,CACEC,MAAO,sEACPhW,IAAK,IACLmW,QAAS,KAEXoI,EAAK3G,kBAAkB,CACrB5B,MAAO,mCACPhW,IAAK,0BAKL20D,EAAU,CACdjmD,UAAW,SACXgP,SAAU,CACR,CACE1H,MAAO,iBAET,CACEA,MAAO,yFAET,CACEA,MAAO,wFAGXC,UAAW,GAGP2+C,EAAe,CACnBlmD,UAAW,OACXsH,MAAO,eACPhW,IAAK,IACLsY,SAAU,CACRkB,QACE,0FAGJpD,SAAU,CACR,CACEJ,MAAO,OACPC,UAAW,GAEbsI,EAAKH,QAAQs2C,EAAS,CACpBhmD,UAAW,WAEb,CACEA,UAAW,SACXsH,MAAO,SAETU,EACA6H,EAAK5H,uBAIHM,EAAa,CACjBvI,UAAW,QACXsH,MAAO,EAASu+C,GAAgBh2C,EAAK7I,SACrCO,UAAW,GAGP4+C,EAAiB,EAASN,GAAgBh2C,EAAK7I,SAAW,UAqE1DsgD,EAAW,CACfx8C,QApEiB,CACjB,MACA,OACA,QACA,OACA,QACA,WACA,UACA,KACA,OACA,OACA,SACA,MACA,UACA,OACA,KACA,SACA,WACA,WACA,SACA,SACA,SACA,SACA,SACA,UACA,QACA,WACA,QACA,WACA,WACA,UACA,WACA,YACA,iBACA,gBAEA,UACA,UACA,WACA,gBACA,eAEA,WA2BApY,KAxBc,CACd,QACA,SACA,SACA,WACA,MACA,QACA,OACA,OACA,OACA,QACA,WACA,aACA,aACA,aACA,cAEA,UACA,OACA,aAMAgzD,QAAS,kBAET/tC,SAAU,ozBAWN6uC,EAAsB,CAC1BN,EACAmB,EACAr/C,EACA6H,EAAK5H,qBACLg+C,EACAD,GAGIS,EAAqB,CAIzBz3C,SAAU,CACR,CACE1H,MAAO,IACPhW,IAAK,KAEP,CACEgW,MAAO,KACPhW,IAAK,MAEP,CACEmY,cAAe,wBACfnY,IAAK,MAGTsY,SAAU09C,EACV5/C,SAAU8+C,EAAoBh3D,OAAO,CACnC,CACE8X,MAAO,KACPhW,IAAK,KACLsY,SAAU09C,EACV5/C,SAAU8+C,EAAoBh3D,OAAO,CAAE,SACvC+X,UAAW,KAGfA,UAAW,GAGPm/C,EAAuB,CAC3Bp/C,MAAO,IAAMw+C,EAAmB,eAAiBK,EACjD95C,aAAa,EACb/a,IAAK,QACLib,YAAY,EACZ3C,SAAU09C,EACV7/C,QAAS,iBACTC,SAAU,CACR,CACEJ,MAAOs+C,EACPh8C,SAAU09C,EACV//C,UAAW,GAEb,CACED,MAAO6+C,EACP95C,aAAa,EACb3E,SAAU,CACRmI,EAAKH,QAAQnH,EAAY,CAAEvI,UAAW,oBAExCuH,UAAW,GAIb,CACEA,UAAW,EACX1W,MAAO,KAET,CACEmP,UAAW,SACXsH,MAAO,KACPhW,IAAK,KACLsY,SAAU09C,EACV//C,UAAW,EACXG,SAAU,CACRM,EACA6H,EAAK5H,qBACL+9C,EACAC,EACAoB,EAEA,CACE//C,MAAO,KACPhW,IAAK,KACLsY,SAAU09C,EACV//C,UAAW,EACXG,SAAU,CACR,OACAM,EACA6H,EAAK5H,qBACL+9C,EACAC,EACAoB,MAKRA,EACAr/C,EACA6H,EAAK5H,qBACLi+C,IAIJ,MAAO,CACL15D,KAAM,IACNujB,QAAS,CACP,KAEFnG,SAAU09C,EAGVl3C,mBAAmB,EACnB3I,QAAS,KACTC,SAAU,GAAGlY,OACXi3D,EACAC,EACAF,EACA,CACEN,EACA,CACE5+C,MAAOuI,EAAK7I,SAAW,KACvB4C,SAAU09C,GAEZ,CACEtnD,UAAW,QACXyJ,cAAe,0BACfnY,IAAK,WACLoW,SAAU,CACR,CACE+B,cAAe,sBAEjBoG,EAAKtH,eAIbvb,QAAS,CACPu6D,aAAcrB,EACdsB,QAASxB,EACTp8C,SAAU09C,KCjVhB,SAAS,EAASp1D,GAChB,OAAO,EAAO,MAAOA,EAAI,MAO3B,SAAS,KAAUhE,GAEjB,OADeA,EAAKsQ,KAAKtJ,IAAM,OA5BjBhD,EA4BwBgD,GA1BpB,kBAAPhD,EAAwBA,EAE5BA,EAAGX,OAHM,KADlB,IAAgBW,KA4B4BuM,KAAK,IA8kBjD,MAnkBA,SAAaoR,GAIX,MAAM7H,EAAsB6H,EAAKjI,QAAQ,KAAM,IAAK,CAClDF,SAAU,CACR,CACEJ,MAAO,WAIPs+C,EAAmB,qBACnBC,EAAe,kBAEfC,EAAmB,iCAEvB,EAASD,GACT,gBAAkB,EAJS,YAK7B,IAEME,EAAsB,CAC1B/lD,UAAW,OACXsH,MAAO,sBAMH0+C,EAAU,CACdhmD,UAAW,SACXgP,SAAU,CACR,CACE1H,MAAO,cACPhW,IAAK,IACLmW,QAAS,MACTC,SAAU,CAAEmI,EAAKxI,mBAEnB,CACEC,MAAO,sEACPhW,IAAK,IACLmW,QAAS,KAEXoI,EAAK3G,kBAAkB,CACrB5B,MAAO,mCACPhW,IAAK,0BAKL20D,EAAU,CACdjmD,UAAW,SACXgP,SAAU,CACR,CACE1H,MAAO,iBAET,CACEA,MAAO,yFAET,CACEA,MAAO,wFAGXC,UAAW,GAGP2+C,EAAe,CACnBlmD,UAAW,OACXsH,MAAO,eACPhW,IAAK,IACLsY,SAAU,CACRkB,QACE,0FAGJpD,SAAU,CACR,CACEJ,MAAO,OACPC,UAAW,GAEbsI,EAAKH,QAAQs2C,EAAS,CACpBhmD,UAAW,WAEb,CACEA,UAAW,SACXsH,MAAO,SAETU,EACA6H,EAAK5H,uBAIHM,EAAa,CACjBvI,UAAW,QACXsH,MAAO,EAASu+C,GAAgBh2C,EAAK7I,SACrCO,UAAW,GAGP4+C,EAAiB,EAASN,GAAgBh2C,EAAK7I,SAAW,UA+R1Do/C,EAAe,CACnB1zD,KA9LqB,CACrB,OACA,OACA,WACA,WACA,UACA,SACA,QACA,MACA,OACA,QACA,OACA,WAmLAoY,QA9RwB,CACxB,UACA,UACA,MACA,SACA,MACA,gBACA,gBACA,kBACA,OACA,SACA,QACA,QACA,OACA,QACA,QACA,WACA,YACA,WACA,QACA,UACA,QACA,gBACA,YACA,YACA,YACA,WACA,WACA,UACA,SACA,KACA,kBACA,OACA,OACA,WACA,SACA,SACA,QACA,QACA,MACA,SACA,OACA,KACA,SACA,SACA,SACA,UACA,YACA,MACA,WACA,MACA,SACA,UACA,WACA,KACA,QACA,WACA,UACA,YACA,SACA,WACA,WACA,sBACA,WACA,SACA,SACA,SACA,SACA,gBACA,iBACA,SACA,SACA,eACA,WACA,OACA,eACA,QACA,mBACA,2BACA,OACA,MACA,UACA,SACA,WACA,QACA,WACA,QACA,UACA,WACA,QACA,MACA,WAoMA46C,QAhBe,CACf,OACA,QACA,UACA,UACA,QAYA/tC,SARe,CACf,WAQA0uC,YAnLiB,CACjB,MACA,WACA,UACA,mBACA,SACA,UACA,qBACA,yBACA,qBACA,QACA,aACA,SACA,YACA,mBACA,gBACA,UACA,QACA,aACA,WACA,WACA,QACA,WACA,gBACA,gBACA,OACA,UACA,iBACA,QACA,kBACA,wBACA,cACA,MACA,gBACA,cACA,eACA,qBACA,aACA,QACA,cACA,eACA,cACA,SACA,YACA,QACA,cACA,aACA,gBACA,qBACA,qBACA,gBACA,UACA,SACA,WACA,UACA,iBA+HIC,EAAoB,CACxBtmD,UAAW,oBACXuH,UAAW,EACXqC,SAAU,CAER28C,MAjImB,CACrB,QACA,MACA,OACA,QACA,WACA,OACA,OACA,QACA,SACA,OACA,OACA,MACA,OACA,MACA,OACA,OACA,UACA,OACA,WACA,OACA,MACA,OACA,QACA,OACA,UACA,UACA,QACA,OACA,QACA,SACA,SACA,SACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WACA,OACA,UACA,QACA,MACA,QACA,YACA,cACA,4BACA,aACA,cACA,SACA,SACA,SACA,SACA,SACA,OACA,OACA,MACA,SACA,UACA,OACA,UACA,QACA,MACA,OACA,WACA,UACA,OACA,SACA,MACA,SACA,QACA,SACA,SACA,SACA,SACA,SACA,UACA,SACA,UACA,UACA,UACA,UACA,UACA,SACA,SACA,OACA,MACA,OACA,YACA,gBACA,UACA,UACA,WACA,QACA,UACA,aA+BAj/C,MAAO,EACL,KACA,eACA,SACA,UACA,YACAuI,EAAK7I,UAjbQ9U,EAkbH,mBAjbP,EAAO,MAAOA,EAAI,QAD3B,IAAmBA,EAqbjB,MAAMs0D,EAAsB,CAC1BF,EACAJ,EACAH,EACA/9C,EACA6H,EAAK5H,qBACLg+C,EACAD,GAGIS,EAAqB,CAIzBz3C,SAAU,CACR,CACE1H,MAAO,IACPhW,IAAK,KAEP,CACEgW,MAAO,KACPhW,IAAK,MAEP,CACEmY,cAAe,wBACfnY,IAAK,MAGTsY,SAAUw8C,EACV1+C,SAAU8+C,EAAoBh3D,OAAO,CACnC,CACE8X,MAAO,KACPhW,IAAK,KACLsY,SAAUw8C,EACV1+C,SAAU8+C,EAAoBh3D,OAAO,CAAE,SACvC+X,UAAW,KAGfA,UAAW,GAGPm/C,EAAuB,CAC3B1mD,UAAW,WACXsH,MAAO,IAAMw+C,EAAmB,eAAiBK,EACjD95C,aAAa,EACb/a,IAAK,QACLib,YAAY,EACZ3C,SAAUw8C,EACV3+C,QAAS,iBACTC,SAAU,CACR,CACEJ,MAAOs+C,EACPh8C,SAAUw8C,EACV7+C,UAAW,GAEb,CACED,MAAO6+C,EACP95C,aAAa,EACb3E,SAAU,CAAEa,GACZhB,UAAW,GAIb,CACED,MAAO,KACPC,UAAW,GAGb,CACED,MAAO,IACPsH,gBAAgB,EAChBlH,SAAU,CACRs+C,EACAC,IAKJ,CACE1+C,UAAW,EACX1W,MAAO,KAET,CACEmP,UAAW,SACXsH,MAAO,KACPhW,IAAK,KACLsY,SAAUw8C,EACV7+C,UAAW,EACXG,SAAU,CACRM,EACA6H,EAAK5H,qBACL+9C,EACAC,EACAF,EAEA,CACEz+C,MAAO,KACPhW,IAAK,KACLsY,SAAUw8C,EACV7+C,UAAW,EACXG,SAAU,CACR,OACAM,EACA6H,EAAK5H,qBACL+9C,EACAC,EACAF,MAKRA,EACA/9C,EACA6H,EAAK5H,qBACLi+C,IAIJ,MAAO,CACL15D,KAAM,MACNujB,QAAS,CACP,KACA,MACA,MACA,MACA,KACA,MACA,OAEFnG,SAAUw8C,EACV3+C,QAAS,KACT0G,iBAAkB,CAChB,oBAAqB,YAEvBzG,SAAU,GAAGlY,OACXi3D,EACAC,EACAJ,EACAE,EACA,CACEN,EACA,CACE5+C,MAAO,uMACPhW,IAAK,IACLsY,SAAUw8C,EACV1+C,SAAU,CACR,OACAq+C,IAGJ,CACEz+C,MAAOuI,EAAK7I,SAAW,KACvB4C,SAAUw8C,GAEZ,CACEv1D,MAAO,CAEL,wDACA,MACA,OAEFmP,UAAW,CACT,EAAG,UACH,EAAG,oBCnLf,MAhbA,SAAgB6P,GACd,MA4IMy3C,EAAW,CACfx8C,QAhGsB,CACtB,WACA,KACA,OACA,QACA,OACA,QACA,QACA,QACA,WACA,KACA,OACA,QACA,WACA,SACA,UACA,QACA,MACA,UACA,OACA,KACA,WACA,KACA,YACA,WACA,KACA,OACA,YACA,MACA,WACA,MACA,WACA,SACA,UACA,YACA,SACA,WACA,SACA,MACA,SACA,SACA,SACA,aACA,SACA,SACA,SACA,OACA,QACA,MACA,SACA,YACA,SACA,QACA,UACA,OACA,WACA,SAwCyBtb,OAtCC,CAC1B,MACA,QACA,MACA,YACA,QACA,QACA,KACA,aACA,SACA,OACA,MACA,SACA,QACA,OACA,OACA,OACA,MACA,SACA,MACA,UACA,KACA,KACA,UACA,UACA,SACA,SACA,MACA,YACA,UACA,MACA,OACA,QACA,OACA,UAKAmoB,SA9IwB,CACxB,OACA,OACA,OACA,UACA,WACA,SACA,UACA,OACA,QACA,MACA,OACA,OACA,QACA,SACA,QACA,QACA,SACA,QACA,OACA,UA2HA+tC,QAxGuB,CACvB,UACA,QACA,OACA,SAsGIn9C,EAAasH,EAAKH,QAAQG,EAAKtH,WAAY,CAC/CjB,MAAO,uBAEH2+C,EAAU,CACdjmD,UAAW,SACXgP,SAAU,CACR,CACE1H,MAAO,iBAET,CACEA,MAAO,mEAET,CACEA,MAAO,wFAGXC,UAAW,GAEPkgD,EAAkB,CACtBznD,UAAW,SACXsH,MAAO,KACPhW,IAAK,IACLoW,SAAU,CACR,CACEJ,MAAO,QAIPogD,EAAwB73C,EAAKH,QAAQ+3C,EAAiB,CAC1DhgD,QAAS,OAELs/C,EAAQ,CACZ/mD,UAAW,QACXsH,MAAO,KACPhW,IAAK,KACLsY,SAAU09C,GAENK,EAAc93C,EAAKH,QAAQq3C,EAAO,CACtCt/C,QAAS,OAELmgD,EAAsB,CAC1B5nD,UAAW,SACXsH,MAAO,MACPhW,IAAK,IACLmW,QAAS,KACTC,SAAU,CACR,CACEJ,MAAO,QAET,CACEA,MAAO,QAETuI,EAAKxI,iBACLsgD,IAGEE,EAA+B,CACnC7nD,UAAW,SACXsH,MAAO,OACPhW,IAAK,IACLoW,SAAU,CACR,CACEJ,MAAO,QAET,CACEA,MAAO,QAET,CACEA,MAAO,MAETy/C,IAGEe,EAAqCj4C,EAAKH,QAAQm4C,EAA8B,CACpFpgD,QAAS,KACTC,SAAU,CACR,CACEJ,MAAO,QAET,CACEA,MAAO,QAET,CACEA,MAAO,MAETqgD,KAGJZ,EAAMr/C,SAAW,CACfmgD,EACAD,EACAH,EACA53C,EAAKrI,iBACLqI,EAAKlI,kBACLs+C,EACAp2C,EAAK5H,sBAEP0/C,EAAYjgD,SAAW,CACrBogD,EACAF,EACAF,EACA73C,EAAKrI,iBACLqI,EAAKlI,kBACLs+C,EACAp2C,EAAKH,QAAQG,EAAK5H,qBAAsB,CACtCR,QAAS,QAGb,MAAMsgD,EAAS,CACb/4C,SAAU,CACR64C,EACAD,EACAH,EACA53C,EAAKrI,iBACLqI,EAAKlI,oBAIHqgD,EAAmB,CACvB1gD,MAAO,IACPhW,IAAK,IACLoW,SAAU,CACR,CACE+B,cAAe,UAEjBlB,IAGE0/C,EAAgBp4C,EAAK7I,SAAW,KAAO6I,EAAK7I,SAAW,aAAe6I,EAAK7I,SAAW,iBACtFkhD,EAAgB,CAGpB5gD,MAAO,IAAMuI,EAAK7I,SAClBO,UAAW,GAGb,MAAO,CACL/a,KAAM,KACNujB,QAAS,CACP,KACA,MAEFnG,SAAU09C,EACV7/C,QAAS,KACTC,SAAU,CACRmI,EAAKjI,QACH,MACA,IACA,CACEyE,aAAa,EACb3E,SAAU,CACR,CACE1H,UAAW,SACXgP,SAAU,CACR,CACE1H,MAAO,MACPC,UAAW,GAEb,CACED,MAAO,kBAET,CACEA,MAAO,MACPhW,IAAK,UAOjBue,EAAK7H,oBACL6H,EAAK5H,qBACL,CACEjI,UAAW,OACXsH,MAAO,IACPhW,IAAK,IACLsY,SAAU,CACRkB,QAAS,wFAGbi9C,EACA9B,EACA,CACEx8C,cAAe,kBACflC,UAAW,EACXjW,IAAK,QACLmW,QAAS,UACTC,SAAU,CACR,CACE+B,cAAe,eAEjBlB,EACAy/C,EACAn4C,EAAK7H,oBACL6H,EAAK5H,uBAGT,CACEwB,cAAe,YACflC,UAAW,EACXjW,IAAK,QACLmW,QAAS,SACTC,SAAU,CACRa,EACAsH,EAAK7H,oBACL6H,EAAK5H,uBAGT,CACEwB,cAAe,SACflC,UAAW,EACXjW,IAAK,QACLmW,QAAS,SACTC,SAAU,CACRa,EACAy/C,EACAn4C,EAAK7H,oBACL6H,EAAK5H,uBAGT,CAEEjI,UAAW,OACXsH,MAAO,oBACPQ,cAAc,EACdxW,IAAK,MACLib,YAAY,EACZ7E,SAAU,CACR,CACE1H,UAAW,SACXsH,MAAO,IACPhW,IAAK,OAIX,CAGEmY,cAAe,8BACflC,UAAW,GAEb,CACEvH,UAAW,WACXsH,MAAO,IAAM2gD,EAAgB,SAAWp4C,EAAK7I,SAAW,qBACxDqF,aAAa,EACb/a,IAAK,WACLib,YAAY,EACZ3C,SAAU09C,EACV5/C,SAAU,CAER,CACE+B,cAtXiB,CACzB,SACA,UACA,YACA,SACA,WACA,YACA,WACA,QACA,SACA,WACA,SACA,UACA,MACA,SACA,WAuW0ChL,KAAK,KACvC8I,UAAW,GAEb,CACED,MAAOuI,EAAK7I,SAAW,qBACvBqF,aAAa,EACb3E,SAAU,CACRmI,EAAKtH,WACLy/C,GAEFzgD,UAAW,GAEb,CACEvH,UAAW,SACXsH,MAAO,KACPhW,IAAK,KACLwW,cAAc,EACdyE,YAAY,EACZ3C,SAAU09C,EACV//C,UAAW,EACXG,SAAU,CACRqgD,EACA9B,EACAp2C,EAAK5H,uBAGT4H,EAAK7H,oBACL6H,EAAK5H,uBAGTigD,KCpbN,MAwCMC,EAAO,CACX,IACA,OACA,UACA,UACA,QACA,QACA,IACA,aACA,OACA,SACA,SACA,UACA,OACA,OACA,KACA,MACA,UACA,MACA,MACA,KACA,KACA,KACA,WACA,aACA,SACA,SACA,OACA,KACA,KACA,KACA,KACA,KACA,KACA,SACA,SACA,OACA,IACA,SACA,MACA,QACA,MACA,MACA,QACA,SACA,KACA,OACA,OACA,OACA,MACA,SACA,KACA,IACA,IACA,QACA,OACA,UACA,OACA,SACA,UACA,MACA,QACA,QACA,KACA,WACA,QACA,KACA,QACA,OACA,KACA,KACA,MACA,SAGIC,EAAiB,CACrB,YACA,cACA,eACA,QACA,cACA,cACA,sBACA,gBACA,eACA,eACA,gBACA,OACA,SACA,QACA,kBACA,aACA,cACA,iBACA,kBACA,UACA,uBACA,mBACA,yBACA,+BACA,aACA,OACA,YACA,SACA,QAEA,YACA,YACA,aACA,cAIIC,EAAiB,CACrB,SACA,WACA,QACA,UACA,UACA,UACA,UACA,MACA,WACA,OACA,QACA,UACA,QACA,cACA,gBACA,aACA,SACA,QACA,gBACA,eACA,MACA,OACA,eACA,QACA,gBACA,WACA,UACA,KACA,OACA,aACA,eACA,OACA,OACA,aACA,MACA,YACA,UACA,iBACA,eACA,mBACA,cACA,aACA,eACA,WACA,eACA,OACA,oBACA,YACA,aACA,WACA,QACA,OACA,QACA,SACA,gBACA,eACA,QACA,UACA,SAIIC,EAAkB,CACtB,QACA,WACA,SACA,MACA,aACA,eACA,aACA,gBACA,SACA,OACA,cACA,YACA,UACA,kBAGIC,EAAa,CACjB,gBACA,cACA,aACA,YACA,kBACA,sBACA,qBACA,sBACA,4BACA,iBACA,uBACA,4BACA,OACA,sBACA,aACA,wBACA,kBACA,mBACA,mBACA,oBACA,sBACA,oBACA,kBACA,SACA,gBACA,sBACA,4BACA,6BACA,sBACA,sBACA,kBACA,eACA,eACA,sBACA,sBACA,qBACA,sBACA,qBACA,cACA,oBACA,oBACA,oBACA,gBACA,eACA,qBACA,qBACA,qBACA,iBACA,eACA,aACA,mBACA,yBACA,0BACA,mBACA,mBACA,eACA,SACA,uBACA,aACA,aACA,cACA,eACA,eACA,eACA,QACA,OACA,YACA,QACA,eACA,cACA,aACA,cACA,oBACA,oBACA,oBACA,cACA,eACA,UACA,UACA,oBACA,gBACA,SACA,YACA,UACA,cACA,SACA,OACA,aACA,iBACA,YACA,YACA,cACA,YACA,QACA,OACA,eACA,cACA,wBACA,eACA,yBACA,YACA,mBACA,iBACA,eACA,aACA,eACA,yBACA,0BACA,cACA,SACA,UACA,OACA,oBACA,kBACA,mBACA,WACA,UACA,UACA,kBACA,OACA,iBACA,cACA,aACA,mBACA,sBACA,kBACA,SACA,gBACA,cACA,eACA,aACA,QACA,OACA,aACA,YACA,aACA,YACA,WACA,YACA,WACA,YACA,SACA,OACA,SACA,aACA,kBACA,UACA,QACA,UACA,UACA,gBACA,iBACA,gBACA,gBACA,WACA,gBACA,aACA,aACA,UACA,iBACA,eACA,gBACA,cACA,mBACA,oBACA,oBACA,cACA,qBACA,iBACA,WACA,SACA,SACA,QACA,MACA,WACA,eACA,aACA,kBACA,kBACA,wBACA,uBACA,wBACA,cACA,gBACA,iBACA,cACA,iBACA,0BACA,MACA,YACA,mBACA,kBACA,aACA,mBACA,sBACA,sBACA,6BACA,eACA,iBACA,aACA,cACA,SACA,QACA,aACA,eACA,YACA,WAGAjuB,UAsBF,SAAS,EAAUpoC,GACjB,OAOF,YAAmBhE,GAEjB,OADeA,EAAKsQ,KAAKtJ,GApB3B,SAAgBhD,GACd,OAAKA,EACa,kBAAPA,EAAwBA,EAE5BA,EAAGX,OAHM,KAmBe,CAAO2D,KAAIuJ,KAAK,IARxC,CAAO,MAAOvM,EAAI,KA+J3B,MA5IA,SAAa2d,GACX,MAAM24C,EAteM,CAAC34C,IACN,CACL44C,UAAW,CACTxkD,MAAO,OACPqD,MAAO,cAETohD,SAAU,CACRzkD,MAAO,SACPqD,MAAO,oCAETqhD,wBAAyB,CACvB1kD,MAAO,gBACPqD,MAAO,KACPhW,IAAK,KACLmW,QAAS,IACTC,SAAU,CACRmI,EAAKrI,iBACLqI,EAAKlI,oBAGTihD,gBAAiB,CACf3kD,MAAO,SACPqD,MAAOuI,EAAK3I,UAAL2I,kGASPtI,UAAW,GAEbshD,aAAc,CACZ7oD,UAAW,OACXsH,MAAO,8BAmcGoB,CAAMmH,GAWdm2C,EAAU,CACdn2C,EAAKrI,iBACLqI,EAAKlI,mBAGP,MAAO,CACLnb,KAAM,MACNsgB,kBAAkB,EAClBrF,QAAS,UACTmC,SAAU,CACRk/C,iBAAkB,WAEpB36C,iBAAkB,CAGhB26C,iBAAkB,gBAEpBphD,SAAU,CACRmI,EAAK5H,qBAxBa,CACpBX,MAAO,gCA2BLkhD,EAAMI,gBACN,CACE5oD,UAAW,cACXsH,MAAO,kBACPC,UAAW,GAEb,CACEvH,UAAW,iBACXsH,MAAO,6BACPC,UAAW,GAEbihD,EAAMG,wBACN,CACE3oD,UAAW,kBACXgP,SAAU,CACR,CACE1H,MAAO,KAAO+gD,EAAe5pD,KAAK,KAAO,KAE3C,CACE6I,MAAO,MAAQghD,EAAgB7pD,KAAK,KAAO,OAUjD+pD,EAAMK,aACN,CACE7oD,UAAW,YACXsH,MAAO,OAASihD,EAAW9pD,KAAK,KAAO,QAGzC,CACE6I,MAAO,IACPhW,IAAK,OACLoW,SAAU,CACR8gD,EAAME,SACNF,EAAMC,UACND,EAAMI,mBACH5C,EAIH,CACE1+C,MAAO,mBACPhW,IAAK,KACLiW,UAAW,EACXqC,SAAU,CACR+N,SAAU,gBAEZjQ,SAAU,CACR,CACE1H,UAAW,SAGXsH,MAAO,OACPsH,gBAAgB,EAChBrC,YAAY,KA5FA,CACxBvM,UAAW,WACXsH,MAAO,kBAiGL,CACEA,MAAO,EAAU,KACjBhW,IAAK,OACLiW,UAAW,EACXE,QAAS,IACTC,SAAU,CACR,CACE1H,UAAW,UACXsH,MAnGa,qBAqGf,CACEA,MAAO,KACPsH,gBAAgB,EAChBrC,YAAY,EACZhF,UAAW,EACXqC,SAAU,CACR6E,SAAU,UACV3D,QA7GS,kBA8GT2zB,UAAW2pB,EAAe3pD,KAAK,MAEjCiJ,SAAU,CACR,CACEJ,MAAO,eACPtH,UAAW,gBAEVgmD,EACHwC,EAAMI,oBAKd,CACE5oD,UAAW,eACXsH,MAAO,OAAS6gD,EAAK1pD,KAAK,KAAO,WCzkBzC,SAASsH,KAAU7X,GAKjB,MAHe,KApBjB,SAA8BA,GAC5B,MAAMyR,EAAOzR,EAAKA,EAAKV,OAAS,GAEhC,MAAoB,kBAATmS,GAAqBA,EAAKvT,cAAgBjB,QACnD+C,EAAK8X,OAAO9X,EAAKV,OAAS,EAAG,GACtBmS,GAEA,GAYIsG,CAAqB/X,GAE1BgY,QAAU,GAAK,MACrBhY,EAAKsQ,KAAKtJ,IAAM,OA7BJhD,EA6BWgD,GA3BP,kBAAPhD,EAAwBA,EAE5BA,EAAGX,OAHM,KADlB,IAAgBW,KA6BeuM,KAAK,KAAO,IAkE3C,MArDA,SAAcoR,GACZ,MAAO,CACLrjB,KAAM,OACNujB,QAAS,CAAC,SACVrI,SAAU,CACR,CACE1H,UAAW,OACXuH,UAAW,GACX1W,MAAOkV,EACL,+BACA,8BACA,yBAGJ,CACE/F,UAAW,UACXgP,SAAU,CACR,CACE1H,MAAOvB,EACL,UACA,SACA,QACA,QACA,UACA,SACA,eAEFzU,IAAK,KAEP,CACET,MAAO,cAIb,CACEmP,UAAW,WACXsH,MAAO,MACPhW,IAAK,KAEP,CACE0O,UAAW,WACXsH,MAAO,KACPhW,IAAK,KAEP,CACE0O,UAAW,WACXsH,MAAO,KACPhW,IAAK,QCsCb,MA/HA,SAAYue,GACV,MAqEMy3C,EAAW,CACfx8C,QA/CU,CACV,QACA,UACA,OACA,YACA,SACA,OACA,MACA,SACA,OACA,OACA,OACA,UACA,SACA,QACA,cACA,KACA,QACA,OACA,WACA,MACA,SACA,SACA,MACA,KACA,QACA,OACA,OACA,YACA,aACA,UACA,UACA,OACA,QACA,QACA,QACA,SACA,QACA,SACA,SACA,SACA,MACA,OACA,UACA,QAIA46C,QAvEe,CACf,OACA,QACA,OACA,OAoEA/tC,SAlEgB,CAChB,SACA,MACA,QACA,UACA,OACA,OACA,MACA,OACA,MACA,QACA,QACA,UACA,OACA,UACA,WAqDF,MAAO,CACLnrB,KAAM,KACNujB,QAAS,CAAC,UACVnG,SAAU09C,EACV7/C,QAAS,KACTC,SAAU,CACRmI,EAAK7H,oBACL6H,EAAK5H,qBACL,CACEjI,UAAW,SACXgP,SAAU,CACRa,EAAKlI,kBACLkI,EAAKrI,iBACL,CACEF,MAAO,IACPhW,IAAK,OAIX,CACE0O,UAAW,SACXgP,SAAU,CACR,CACE1H,MAAOuI,EAAK1I,YAAc,MAC1BI,UAAW,GAEbsI,EAAKzH,gBAGT,CACEd,MAAO,MAET,CACEtH,UAAW,WACXyJ,cAAe,OACfnY,IAAK,cACLib,YAAY,EAC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CPhW,IAAK,KACLoW,SAAU,CAAE,WAIZkiD,EAAS,CACb5pD,UAAW,SACXsH,MAAO,KACPhW,IAAK,KACLsY,SAAU09C,EACV//C,UAAW,EACXG,SAAU,CACRmI,EAAK5H,sBAEPmC,YAAY,GAGd,MAAO,CACL5d,KAAM,OACNujB,QAAS,CAAE,OACXnG,SAAU09C,EACV7/C,QAAS,QACTC,SAAU,CACRmI,EAAKjI,QACH,UACA,OACA,CACEL,UAAW,EACXG,SAAU,CACR,CAEEJ,MAAO,OACPC,UAAW,GAEb,CACEvH,UAAW,SACXsH,MAAO,iBAMf,CACEA,MAAO,wBACPsC,SAAU,SACVrC,UAAW,GAEbsI,EAAK7H,oBACL6H,EAAK5H,qBACL4H,EAAKrI,iBACLqI,EAAKlI,kBACL,CACE9W,MAAO,CACL,oDACA,MACA44D,GAEFzpD,UAAW,CACT,EAAG,UACH,EAAG,gBAGP,CACEsH,MAAO,CACLmiD,EACA,MACAA,EACA,MACA,KAEFzpD,UAAW,CACT,EAAG,OACH,EAAG,WACH,EAAG,aAGP,CACEsH,MAAO,CACL,SACA,MACAmiD,GAEFzpD,UAAW,CACT,EAAG,UACH,EAAG,eAEL0H,SAAU,CACRkiD,EACA/5C,EAAK7H,oBACL6H,EAAK5H,uBAGT,CAGEwB,cAAe,wBACflC,UAAW,GAEb,CACED,MAAO,CACL,MAAQoiD,EAAmB,QAC3B75C,EAAK5I,oBACL,aAEFjH,UAAW,CACT,EAAG,kBAEL4J,SAAU09C,EACV5/C,SAAU,CACR,CACE1H,UAAW,SACXsH,MAAO,KACPhW,IAAK,KACLsY,SAAU09C,EACV//C,UAAW,EACXG,SAAU,CACRiiD,EACA95C,EAAKrI,iBACLqI,EAAKlI,kBACL2hD,EACAz5C,EAAK5H,uBAGT4H,EAAK7H,oBACL6H,EAAK5H,uBAGTqhD,EACAK,KC/QN,MAAM3iD,EAAW,2BACXsgD,EAAW,CACf,KACA,KACA,KACA,KACA,MACA,QACA,UACA,MACA,MACA,WACA,KACA,SACA,OACA,OACA,QACA,QACA,aACA,OACA,QACA,OACA,UACA,MACA,SACA,WACA,SACA,SACA,MACA,QACA,QACA,QAIA,WACA,QACA,QACA,SACA,SACA,OACA,SACA,WAEI2B,EAAW,CACf,OACA,QACA,OACA,YACA,MACA,YAGI5B,EAAQ,CACZ,OACA,WACA,SACA,OACA,OACA,SACA,SACA,SACA,WACA,UACA,QACA,SACA,MACA,MACA,UACA,UACA,QACA,UACA,OACA,UACA,eACA,aACA,aACA,YACA,cACA,cACA,eACA,QACA,aACA,oBACA,cACA,gBACA,iBACA,UAGIwC,EAAc,CAClB,YACA,gBACA,aACA,iBACA,cACA,YACA,YAGIC,EAAmB,CACvB,cACA,aACA,gBACA,eAEA,UACA,UAEA,OACA,WACA,QACA,aACA,WACA,YACA,qBACA,YACA,qBACA,SACA,YAGIC,EAAqB,CACzB,YACA,OACA,QACA,UACA,SACA,WACA,eACA,SACA,UAGIC,EAAY,GAAGx6D,OACnBs6D,EACAzC,EACAwC,GAuBF,SAAS,EAAU33D,GACjB,OAAO,EAAO,MAAOA,EAAI,KAO3B,SAAS,KAAUhE,GAEjB,OADeA,EAAKsQ,KAAKtJ,IAAM,OApBjBhD,EAoBwBgD,GAlBpB,kBAAPhD,EAAwBA,EAE5BA,EAAGX,OAHM,KADlB,IAAgBW,KAoB4BuM,KAAK,IAihBjD,MArgBA,SAAoBoR,GAQlB,MAMMo6C,EAAajjD,EACbkjD,EACG,KADHA,EAEC,MAEDC,EAAU,CACd7iD,MAAO,sBACPhW,IAAK,4BAKL84D,kBAAmB,CAACv5D,EAAOwY,KACzB,MAAMghD,EAAkBx5D,EAAM,GAAGrD,OAASqD,EAAMiW,MAC1CwjD,EAAWz5D,EAAMyY,MAAM+gD,GAIZ,MAAbC,EAMa,MAAbA,IA9Bc,EAACz5D,GAASu5B,MAAAA,MAC9B,MAAMmgC,EAAM,KAAO15D,EAAM,GAAG1C,MAAM,GAElC,OAAgB,IADJ0C,EAAMyY,MAAM3P,QAAQ4wD,EAAKngC,IA+B5BogC,CAAc35D,EAAO,CAAEu5B,MAAOigC,KACjChhD,EAASnG,eATXmG,EAASnG,gBAcTunD,EAAa,CACjBh8C,SAAUzH,EACV8D,QAASw8C,EACT5B,QAA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,SAAU,CAAEmI,EAAKrH,wBAEnB,CACExI,UAAW,OACXsH,MAAO,IACPhW,IAAK,IACLsY,SAAU,UACVrC,UAAW,GAEb,CACEvH,UAAW,SACXsH,MAAO,KACPhW,IAAK,KACL8Y,YAAY,EACZR,SAAU09C,EACV//C,UAAW,EACXG,SAAU,CACR,CACEJ,MAAO,IACPhW,IAAK,SACLsd,gBAAgB,EAChBlH,SAAU,CACRqkD,EACAl8C,EAAK7H,oBACL8jD,GAEFvkD,UAAW,GAEbsI,EAAK7H,oBACL8jD,EACAF,EACAjC,EACA5B,EACAl4C,EAAKzH,gBAGT0jD,IAGJ,CACE9rD,UAAW,QACXyJ,cAAe,wBACfnY,IAAK,WACLib,YAAY,EACZ9E,QAAS,qBACTC,SAAU,CACR,CACE+B,cAAe,iDAEjBoG,EAAKrH,sBACL,CACExI,UAAW,OACXsH,MAAO,IACPhW,IAAK,IACLwW,cAAc,EACdyE,YAAY,EACZhF,UAAW,GAEb,CACEvH,UAAW,OACXsH,MAAO,UACPhW,IAAK,WACLwW,cAAc,EACd0E,WAAW,GAEbo/C,EACAjC,IAGJ5B,EACA,CACE/nD,UAAW,OACXsH,MAAO,kBACPhW,IAAK,IACLmW,QAAS,MAEXokD,KCtRN,MAwCM,EAAO,CACX,IACA,OACA,UACA,UACA,QACA,QACA,IACA,aACA,OACA,SACA,SACA,UACA,OACA,OACA,KACA,MACA,UACA,MACA,MACA,KACA,KACA,KACA,WACA,aACA,SACA,SACA,OACA,KACA,KACA,KACA,KACA,KACA,KACA,SACA,SACA,OACA,IACA,SACA,MACA,QACA,MACA,MACA,QACA,SACA,KACA,OACA,OACA,OACA,MACA,SACA,KACA,IACA,IACA,QACA,OACA,UACA,OACA,SACA,UACA,MACA,QACA,QACA,KACA,WACA,QACA,KACA,QACA,OACA,KACA,KACA,MACA,SAGI,EAAiB,CACrB,YACA,cACA,eACA,QACA,cACA,cACA,sBACA,gBACA,eACA,eACA,gBACA,OACA,SACA,QACA,kBACA,aACA,cACA,iBACA,kBACA,UACA,uBACA,mBACA,yBACA,+BACA,aACA,OACA,YACA,SACA,QAEA,YACA,YACA,aACA,cAII,EAAiB,CACrB,SACA,WACA,QACA,UACA,UACA,UACA,UACA,MACA,WACA,OACA,QACA,UACA,QACA,cACA,gBACA,aACA,SACA,QACA,gBACA,eACA,MACA,OACA,eACA,QACA,gBACA,WACA,UACA,KACA,OACA,aACA,eACA,OACA,OACA,aACA,MACA,YACA,UACA,iBACA,eACA,mBACA,cACA,aACA,eACA,WACA,eACA,OACA,oBACA,YACA,aACA,WACA,QACA,OACA,QACA,SACA,gBACA,eACA,QACA,UACA,SAII,EAAkB,CACtB,QACA,WACA,SACA,MACA,aACA,eACA,aACA,gBACA,SACA,OACA,cACA,YACA,UACA,kBAGI,EAAa,CACjB,gBACA,cACA,aACA,YACA,kBACA,sBACA,qBACA,sBACA,4BACA,iBACA,uBACA,4BACA,OACA,sBACA,aACA,wBACA,kBACA,mBACA,mBACA,oBACA,sBACA,oBACA,kBACA,SACA,gBACA,sBACA,4BACA,6BACA,sBACA,sBACA,kBACA,eACA,eACA,sBACA,sBACA,qBACA,sBACA,qBACA,cACA,oBACA,oBACA,oBACA,gBACA,eACA,qBACA,qBACA,qBACA,iBACA,eACA,aACA,mBACA,yBACA,0BACA,mBACA,mBACA,eACA,SACA,uBACA,aACA,aACA,cACA,eACA,eACA,eACA,QACA,OACA,YACA,QACA,eACA,cACA,aACA,cACA,oBACA,oBACA,oBACA,cACA,eACA,UACA,UACA,oBACA,gBACA,SACA,YACA,UACA,cACA,SACA,OACA,aACA,iBACA,YACA,YACA,cACA,YACA,QACA,OACA,eACA,cACA,wBACA,eACA,yBACA,YACA,mBACA,iBACA,eACA,aACA,eACA,yBACA,0BACA,cACA,SACA,UACA,OACA,oBACA,kBACA,mBACA,WACA,UACA,UACA,kBACA,OACA,iBACA,cACA,aACA,mBACA,sBACA,kBACA,SACA,gBACA,cACA,eACA,aACA,QACA,OACA,aACA,YACA,aACA,YACA,WACA,YACA,WACA,YACA,SACA,OACA,SACA,aACA,kBACA,UACA,QACA,UACA,UACA,gBACA,iBACA,gBACA,gBACA,WACA,gBACA,aACA,aACA,UACA,iBACA,eACA,gBACA,cACA,mBACA,oBACA,oBACA,cACA,qBACA,iBACA,WACA,SACA,SACA,QACA,MACA,WACA,eACA,aACA,kBACA,kBACA,wBACA,uBACA,wBACA,cACA,gBACA,iBACA,cACA,iBACA,0BACA,MACA,YACA,mBACA,kBACA,aACA,mBACA,sBACA,sBACA,6BACA,eACA,iBACA,aACA,cACA,SACA,QACA,aACA,eACA,YACA,WAGAvxB,UAGI2xB,GAAmB,EAAez8D,OAAO,GA8O/C,OAnOA,SAAcqgB,GACZ,MAAM24C,EA1cM,CAAC34C,IACN,CACL44C,UAAW,CACTxkD,MAAO,OACPqD,MAAO,cAETohD,SAAU,CACRzkD,MAAO,SACPqD,MAAO,oCAETqhD,wBAAyB,CACvB1kD,MAAO,gBACPqD,MAAO,KACPhW,IAAK,KACLmW,QAAS,IACTC,SAAU,CACRmI,EAAKrI,iBACLqI,EAAKlI,oBAGTihD,gBAAiB,CACf3kD,MAAO,SACPqD,MAAOuI,EAAK3I,UAAL2I,kGASPtI,UAAW,GAEbshD,aAAc,CACZ7oD,UAAW,OACXsH,MAAO,8BAuaG,CAAMuI,GACdq8C,EAAqBD,GAIrBE,EAAkB,2BAIlBC,EAAQ,GAAUC,EAAc,GAEhCC,EAAc,SAASz+D,GAC3B,MAAO,CAELmS,UAAW,SACXsH,MAAO,KAAOzZ,EAAI,MAAQA,IAIxB0+D,EAAa,SAAS//D,EAAM8a,EAAOC,GACvC,MAAO,CACLvH,UAAWxT,EACX8a,MAAOA,EACPC,UAAWA,IAITilD,EAAc,CAClB/9C,SAAU,UACV3D,QA1BmB,kBA2BnB2zB,UAAW,EAAehgC,KAAK,MAG3BguD,EAAc,CAElBnlD,MAAO,MACPhW,IAAK,MACLoW,SAAU2kD,EACVziD,SAAU4iD,EACVjlD,UAAW,GAIb8kD,EAAYp6D,KACV4d,EAAK7H,oBACL6H,EAAK5H,qBACLqkD,EA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,eACP+E,aAAa,EACb3E,SAAU,CACR,CACE1H,UAAW,SACXsH,MAAO,KACPhW,IAAK,KACLwW,cAAc,EACdyE,YAAY,GAEd,CACEvM,UAAW,OACXsH,MAAO,OACPhW,IAAK,IACLwW,cAAc,QCoJtB,OAjPA,SAAoB+H,GAClB,MAIM+9C,EAAgB,yBA2JhBC,EAAiB,CACrBp/C,SAAUm/C,EACV9iD,QAAS,CACP,aACA,SACA,YACA,oBAGJ,MAAO,CACLte,KAAM,cACNujB,QAAS,CACP,KACA,OACA,QACA,UACA,iBAEFnG,SAxBe,CACf6E,SAAUm/C,EACV9iD,QAtJU,CACV,MACA,QACA,QACA,OACA,SACA,SACA,UACA,QACA,SACA,MACA,QACA,WACA,OACA,WACA,SACA,OACA,UACA,KACA,KACA,SACA,OACA,OACA,OACA,OACA,QACA,SACA,MACA,OACA,QACA,UACA,SACA,WACA,WACA,SACA,WACA,OACA,SACA,WACA,UACA,SACA,WACA,SACA,YACA,OACA,gBACA,KACA,SACA,YACA,QACA,UACA,WACA,WACA,SACA,OACA,OACA,KACA,MACA,QACA,SACA,QACA,SACA,WACA,SACA,UACA,kBACA,WACA,aACA,UACA,OACA,YACA,OACA,SACA,SACA,WACA,mBACA,cACA,WACA,YACA,YACA,YACA,UACA,WACA,UACA,QACA,uBACA,WACA,oBACA,oBACA,kBACA,cACA,kBACA,WACA,WACA,YACA,oBACA,eACA,sBACA,gBACA,SACA,SACA,SACA,oBACA,UACA,WACA,mBACA,kBACA,QACA,eACA,4BACA,iBACA,oBACA,2BACA,YACA,eACA,gBACA,UACA,aACA,uBACA,0BACA,wBACA,uBACA,gBACA,mBACA,YACA,aACA,gBACA,iBACA,iBAuBA46C,QArBe,CACf,QACA,OACA,QACA,OACA,MACA,MACA,KACA,QAcA/tC,SAZgB,CAChB,OACA,kBACA,mBACA,gBACA,iBACA,kBA2BAlQ,QAAS,KACTC,SAAU,CAnLM,CAChB1H,UAAW,WACXsH,MAAO,wEAmLLuI,EAAK7H,oBACL6H,EAAK5H,qBACL4H,EAAKzH,cACLyH,EAAKlI,kBACLkI,EAAKrI,iBACL,CACExH,UAAW,SACXgP,SAAU,CACR,CACE1H,MAAO,KACPhW,IAAK,IACLmW,QAAS,MACTC,SAAU,CAAEmI,EAAKxI,qBAIvB,CACErH,UAAW,OACXsH,MAAO,eACPhW,IAAK,IACLsY,SAAU,CACRkB,QACE,kFAGJpD,SAAU,CACR,CACEJ,MAAO,OACPC,UAAW,GAEbsI,EAAKH,QAAQG,EAAKlI,kBAAmB,CACnC3H,UAAW,WAEb,CACEA,UAAW,SACXsH,MAAO,QACPhW,IAAK,IACLmW,QAAS,OAEXoI,EAAK7H,oBACL6H,EAAK5H,uBAGT,CACEjI,UAAW,QACXsH,MAAO,IAAMumD,EAAe/iD,QAAQrM,KAAK,KAAO,OAChDnN,IAAK,SACLib,YAAY,EACZ3C,SAAUikD,EACVnmD,SAAU,CAAEmI,EAAKrH,wBAEnB,CACElB,MAAO,MAAQuI,EAAK5I,oBACpBM,UAAW,MC1OnB,SAAS,GAAOrV,GACd,OAAKA,EACa,kBAAPA,EAAwBA,EAE5BA,EAAGX,OAHM,KAUlB,SAAS,MAAUrD,GAEjB,OADeA,EAAKsQ,KAAKtJ,GAAM,GAAOA,KAAIuJ,KAAK,IAsBjD,SAAS,MAAUvQ,GAKjB,MAHe,KApBjB,SAA8BA,GAC5B,MAAMyR,EAAOzR,EAAKA,EAAKV,OAAS,GAEhC,MAAoB,kBAATmS,GAAqBA,EAAKvT,cAAgBjB,QACnD+C,EAAK8X,OAAO9X,EAAKV,OAAS,EAAG,GACtBmS,GAEA,GAYI,CAAqBzR,GAE1BgY,QAAU,GAAK,MACrBhY,EAAKsQ,KAAKtJ,GAAM,GAAOA,KAAIuJ,KAAK,KAAO,IAie3C,OArdA,SAAcoR,GACZ,MA0OMi+C,EAAkB,uBAClBC,EAAgB,CACpBt/C,SAAU,SACV3D,QA7Oe,CACf,MACA,SACA,QACA,MACA,QACA,OACA,UACA,QACA,QACA,SACA,QACA,QACA,QACA,OACA,QACA,MACA,SACA,QACA,WACA,UACA,WACA,MACA,QACA,WACA,UACA,UACA,SACA,MACA,KACA,OACA,OACA,OACA,QACA,WACA,aACA,YACA,cACA,WACA,aACA,MACA,OACA,OACA,SACA,OACA,MACA,QACA,SACA,QACA,MACA,UACA,OACA,SACA,WACA,OACA,WACA,WACA,WACA,gBACA,gBACA,aACA,WACA,eACA,eACA,YACA,cACA,UACA,cACA,iBACA,mBACA,cACA,WACA,WACA,WACA,gBACA,gBACA,aACA,cACA,aACA,QACA,OACA,SACA,OACA,OACA,KACA,MACA,KACA,QACA,MACA,QACA,OACA,OACA,OACA,OACA,KACA,UACA,SACA,OACA,SACA,QACA,YACA,MACA,QACA,KACA,KACA,MACA,QACA,SACA,SACA,SACA,SACA,KACA,KACA,OACA,KACA,MACA,MACA,OACA,UACA,KACA,MACA,MACA,OACA,UACA,OACA,MACA,MACA,QACA,SACA,YACA,OACA,MACA,KACA,YACA,KACA,KACA,OACA,OACA,UACA,WACA,WACA,WACA,OACA,OACA,MACA,SACA,UACA,QACA,SACA,UACA,YACA,SACA,QACA,MACA,SACA,OACA,UACA,SACA,SACA,SACA,QACA,OACA,WACA,aACA,YACA,UACA,cACA,cACA,WACA,aACA,aACA,QACA,SACA,SACA,UACA,WACA,WACA,MACA,QACA,SACA,aACA,OACA,SACA,QACA,UACA,OACA,QACA,OACA,QACA,QACA,MACA,SACA,UACA,UACA,UACA,UACA,UACA,SACA,WACA,OACA,UACA,MACA,OACA,OACA,QACA,KACA,WACA,KACA,UACA,QACA,QACA,SACA,SACA,SACA,UACA,QACA,QACA,MACA,QACA,SACA,MACA,OACA,UACA,YACA,OACA,OACA,QACA,QACA,MACA,MACA,OAOkBrM,KAAK,MAEnBsoD,EAAQ,CACZ/mD,UAAW,QACXsH,MAAO,UACPhW,IAAK,MACLsY,SAAUmkD,GAENC,EAAS,CACb1mD,MAAO,OACPhW,IAAK,MAGDu1D,EAAM,CACV73C,SAAU,CACR,CACE1H,MAAO,QAET,CACEA,MAAO,GACL,iDAGA,0BAGJ,CACEA,MAAO,gBACPC,UAA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AChBqC,EAAOpC,GAAOD,EAAIC,MAGE,EAwEXyjB,CACX,CACEzL,MAAO,UACPqD,MAAAA,EACAhW,IAAAA,EACAoW,SAAU,IAEZG,GAEF9E,EAAK2E,SAASzV,KAAK,CACjBgS,MAAO,SAGPqD,MAAO,mDACPhW,IAAK,2CACLwW,cAAc,EACdP,UAAW,IAEb,MAAMQ,EAAe,GAEnB,IACA,IACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAEA,iCACA,qBACA,qBA4BF,OAzBAhF,EAAK2E,SAASzV,KACZ,CAgBEqV,MAAO,GACL,OACA,IACAS,EACA,uBACA,UAGChF,GAET6E,GAAQ,KAAM,KACdA,GAAQ,OAAQ,QAChBA,GAAQ,IAAK,KAwab,OA/ZA,SAAgBiI,GACd,MAuIMy3C,EAAW,CACf74C,SAAU,sBACV3D,QAzIqB,CACrB,MACA,KACA,SACA,QACA,QACA,QACA,QACA,WACA,MACA,MACA,OACA,OACA,SACA,UACA,MACA,OACA,SACA,KACA,SACA,KACA,KACA,SACA,cACA,MACA,KACA,OACA,QACA,SACA,MACA,QACA,OACA,SA0GA6M,SAvGgB,CAChB,aACA,MACA,MACA,MACA,QACA,MACA,OACA,aACA,YACA,QACA,WACA,MACA,cACA,UACA,UACA,UACA,OACA,MACA,SACA,YACA,OACA,OACA,SACA,QACA,SACA,YACA,UACA,UACA,UACA,OACA,OACA,MACA,KACA,QACA,MACA,aACA,aACA,OACA,MACA,OACA,SACA,MACA,MACA,aACA,MACA,OACA,SACA,MACA,OACA,MACA,MACA,QACA,WACA,QACA,OACA,WACA,QACA,MACA,UACA,QACA,SACA,eACA,MACA,MACA,QACA,QACA,OACA,OACA,OAmCA+tC,QAhCe,CACf,YACA,WACA,QACA,OACA,iBACA,QA2BAhzD,KArBY,CACZ,MACA,WACA,YACA,OACA,OACA,UACA,UACA,WACA,WACA,MACA,QACA,OACA,UAWIg8D,EAAS,CACb1uD,UAAW,OACXsH,MAAO,kBAGHy/C,EAAQ,CACZ/mD,UAAW,QACXsH,MAAO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AAOA,EAAI,QAD3B,IAAmBA,EAgCjB,MAAMw9D,EAAgB,wCA8DhBC,EAAW,CAEf,QAEA,OACA,OACA,QACA,OACA,OACA,KACA,QACA,SACA,UACA,QACA,QACA,YACA,aACA,KACA,MACA,QACA,QACA,OACA,OACA,UACA,WACA,SACA,eACA,sBACA,oBACA,iBACA,WAEA,UACA,aACA,YACA,SACA,OACA,OACA,UACA,iBACA,gBACA,mBACA,OACA,SACA,QACA,UACA,eACA,eACA,eACA,QACA,kBACA,eACA,cACA,SACA,WACA,UACA,aACA,OACA,iBACA,eACA,OACA,SACA,WACA,eACA,aACA,oBA0BF,MAAO,CACLnjE,KAAM,OACNujB,QAAS,CAAE,MACXnG,SAAU,CACR6E,SAAUoB,EAAK7I,SAAW,KAC1BtU,KA7BU,CACZ,KACA,MACA,MACA,MACA,OACA,QACA,KACA,MACA,MACA,MACA,OACA,QACA,MACA,MACA,MACA,OACA,OACA,MACA,SACA,SACA,SACA,OAQEoY,QA9Ja,CACf,WACA,KACA,QACA,QACA,SACA,MACA,QACA,QACA,WACA,QACA,KACA,MACA,OACA,OACA,SACA,QACA,QACA,KACA,MACA,KACA,OACA,KACA,MACA,OACA,QACA,QACA,MACA,OACA,MACA,WACA,OACA,MACA,MACA,SACA,OACA,OACA,SACA,SACA,QACA,QACA,OACA,MACA,OACA,SACA,SACA,UACA,MACA,UACA,QACA,QACA,SA4GE46C,QA1Ga,CACf,OACA,QACA,OACA,OACA,KACA,OAqGE/tC,SAAUg4C,GAEZloD,QAAS,KACTC,SAAU,CACRmI,EAAK7H,oBACL6H,EAAKjI,QAAQ,OAAQ,OAAQ,CAC3BF,SAAU,CAAE,UAEdmI,EAAKH,QAAQG,EAAKlI,kBAAmB,CACnCL,MAAO,MACPG,QAAS,OAEX,CACEzH,UAAW,SACXgP,SAAU,CACR,CACE1H,MAAO,4BAET,CACEA,MAAO,qCAIb,CACEtH,UAAW,SACXsH,MAAO,2BAET,CACEtH,UAAW,SACXgP,SAAU,CACR,CACE1H,MAAO,gBAAkBooD,GAE3B,CACEpoD,MAAO,iBAAmBooD,GAE5B,CACEpoD,MAAO,uBAAyBooD,GAElC,CACEpoD,MAAO,kDACAooD,IAGXnoD,UAAW,GAEb,CACED,MAAO,CACL,KACA,MACAuI,EAAK5I,qBAEPjH,UAAW,CACT,EAAG,UACH,EAAG,mBAGP,CACEA,UAAW,OACXsH,MAAO,SACPhW,IAAK,MACLoW,SAAU,CACR,CACE1H,UAAW,SACXsH,MAAO,IACPhW,IAAK,OAIX,CACEgW,MAAO,CACL,MAAO,MACP,cACAuI,EAAK5I,qBAEPjH,UAAW,CACT,EAAG,UACH,EAAG,UACH,EAAG,aAIP,CACEsH,MAAO,CACL,MACA,MACAuI,EAAK5I,oBACL,MACA,MAEFjH,UAAW,CACT,EAAG,UACH,EAAG,WACH,EAAG,YAGP,CACEsH,MAAO,CACL,OACA,MACAuI,EAAK5I,qBAEPjH,UAAW,CACT,EAAG,UACH,EAAG,gBAGP,CACEsH,MAAO,CACL,uCACA,MACAuI,EAAK5I,qBAEPjH,UAAW,CACT,EAAG,UACH,EAAG,gBAGP,CACEsH,MAAOuI,EAAK7I,SAAW,KACvB4C,SAAU,CACRkB,QAAS,OACT6M,SAAUg4C,IAGd,CACE3vD,UAAW,cACXsH,MAAO,MAETmoD,KCtVN,MAwCM,GAAO,CACX,IACA,OACA,UACA,UACA,QACA,QACA,IACA,aACA,OACA,SACA,SACA,UACA,OACA,OACA,KACA,MACA,UACA,MACA,MACA,KACA,KACA,KACA,WACA,aACA,SACA,SACA,OACA,KACA,KACA,KACA,KACA,KACA,KACA,SACA,SACA,OACA,IACA,SACA,MACA,QACA,MACA,MACA,QACA,SACA,KACA,OACA,OACA,OACA,MACA,SACA,KACA,IACA,IACA,QACA,OACA,UACA,OACA,SACA,UACA,MACA,QACA,QACA,KACA,WACA,QACA,KACA,QACA,OACA,KACA,KACA,MACA,SAGI,GAAiB,CACrB,YACA,cACA,eACA,QACA,cACA,cACA,sBACA,gBACA,eACA,eACA,gBACA,OACA,SACA,QACA,kBACA,aACA,cACA,iBACA,kBACA,UACA,uBACA,mBACA,yBACA,+BACA,aACA,OACA,YACA,SACA,QAEA,YACA,YACA,aACA,cAII,GAAiB,CACrB,SACA,WACA,QACA,UACA,UACA,UACA,UACA,MACA,WACA,OACA,QACA,UACA,QACA,cACA,gBACA,aACA,SACA,QACA,gBACA,eACA,MACA,OACA,eACA,QACA,gBACA,WACA,UACA,KACA,OACA,aACA,eACA,OACA,OACA,aACA,MACA,YACA,UACA,iBACA,eACA,mBACA,cACA,aACA,eACA,WACA,eACA,OACA,oBACA,YACA,aACA,WACA,QACA,OACA,QACA,SACA,gBACA,eACA,QACA,UACA,SAII,GAAkB,CACtB,QACA,WACA,SACA,MACA,aACA,eACA,aACA,gBACA,SACA,OACA,cACA,YACA,UACA,kBAGI,GAAa,CACjB,gBACA,cACA,aACA,YACA,kBACA,sBACA,qBACA,sBACA,4BACA,iBACA,uBACA,4BACA,OACA,sBACA,aACA,wBACA,kBACA,mBACA,mBACA,oBACA,sBACA,oBACA,kBACA,SACA,gBACA,sBACA,4BACA,6BACA,sBACA,sBACA,kBACA,eACA,eACA,sBACA,sBACA,qBACA,sBACA,qBACA,cACA,oBACA,oBACA,oBACA,gBACA,eACA,qBACA,qBACA,qBACA,iBACA,eACA,aACA,mBACA,yBACA,0BACA,mBACA,mBACA,eACA,SACA,uBACA,aACA,aACA,cACA,eACA,eACA,eACA,QACA,OACA,YACA,QACA,eACA,cACA,aACA,cACA,oBACA,oBACA,oBACA,cACA,eACA,UACA,UACA,oBACA,gBACA,SACA,YACA,UACA,cACA,SACA,OACA,aACA,iBACA,YACA,YACA,cACA,YACA,QACA,OACA,eACA,cACA,wBACA,eACA,yBACA,YACA,mBACA,iBACA,eACA,aACA,eACA,yBACA,0BACA,cACA,SACA,UACA,OACA,oBACA,kBACA,mBACA,WACA,UACA,UACA,kBACA,OACA,iBACA,cACA,aACA,mBACA,sBACA,kBACA,SACA,gBACA,cACA,eACA,aACA,QACA,OACA,aACA,YACA,aACA,YACA,WACA,YACA,WACA,YACA,SACA,OACA,SACA,aACA,kBACA,UACA,QACA,UACA,UACA,gBACA,iBACA,gBACA,gBACA,WACA,gBACA,aACA,aACA,UACA,iBACA,eACA,gBACA,cACA,mBACA,oBACA,oBACA,cACA,qBACA,iBACA,WACA,SACA,SACA,QACA,MACA,WACA,eACA,aACA,kBACA,kBACA,wBACA,uBACA,wBACA,cACA,gBACA,iBACA,cACA,iBACA,0BACA,MACA,YACA,mBACA,kBACA,aACA,mBACA,sBACA,sBACA,6BACA,eACA,iBACA,aACA,cACA,SACA,QACA,aACA,eACA,YACA,WAGAn1B,UAyHF,OA9GA,SAAczqB,GACZ,MAAM24C,EAvcM,CAAC34C,IACN,CACL44C,UAAW,CACTxkD,MAAO,OACPqD,MAAO,cAETohD,SAAU,CACRzkD,MAAO,SACPqD,MAAO,oCAETqhD,wBAAyB,CACvB1kD,MAAO,gBACPqD,MAAO,KACPhW,IAAK,KACLmW,QAAS,IACTC,SAAU,CACRmI,EAAKrI,iBACLqI,EAAKlI,oBAGTihD,gBAAiB,CACf3kD,MAAO,SACPqD,MAAOuI,EAAK3I,UAAL2I,kGASPtI,UAAW,GAEbshD,aAAc,CACZ7oD,UAAW,OACXsH,MAAO,8BAoaG,CAAMuI,GACd+/C,EAAoB,GACpBC,EAAmB,GAEnB3H,EAAgB,WAGhByD,EAAW,CACf3rD,UAAW,WACXsH,MAAO,mCAGT,MAAO,CACL9a,KAAM,OACNsgB,kBAAkB,EAClBrF,QAAS,SACTC,SAAU,CACRmI,EAAK7H,oBACL6H,EAAK5H,qBACL,CACEjI,UAAW,cACXsH,MAAO,kBACPC,UAAW,GAEb,CACEvH,UAAW,iBACXsH,MAAO,oBACPC,UAAW,GAEbihD,EAAMG,wBACN,CACE3oD,UAAW,eACXsH,MAAO,OAAS,GAAK7I,KAAK,KAAO,OAEjC8I,UAAW,GAEb,CACEvH,UAAW,kBACXsH,MAAO,KAAOuoD,EAAiBpxD,KAAK,KAAO,KAE7C,CACEuB,UAAW,kBACXsH,MAAO,MAAQsoD,EAAkBnxD,KAAK,KAAO,KAE/CktD,EACA,CACErkD,MAAO,KACPhW,IAAK,KACLoW,SAAU,CAAE8gD,EAAMI,kBAEpBJ,EAAMK,aACN,CACE7oD,UAAW,YACXsH,MAAO,OAAS,GAAW7I,KAAK,KAAO,QAEzC,CACE6I,MAAO,8oCAET,CACEA,MAAO,IACPhW,IAAK,IACLoW,SAAU,CACRikD,EACAnD,EAAME,SACNF,EAAMI,gBACN/4C,EAAKlI,kBACLkI,EAAKrI,iBACLghD,EAAMC,YAMV,CACEnhD,MAAO,oBACPsC,SAAU,CACR6E,SAAUy5C,EACVp9C,QAAS,qBAGb,CACExD,MAAO,IACPhW,IAAK,OACL+a,aAAa,EACbzC,SAAU,CACR6E,SAAU,UACV3D,QAjFa,kBAkFb2zB,UAAW,GAAehgC,KAAK,MAEjCiJ,SAAU,CACR,CACEJ,MAAO4gD,EACPloD,UAAW,WAEb,CACEsH,MAAO,eACPtH,UAAW,aAEb2rD,EACA97C,EAAKlI,kBACLkI,EAAKrI,iBACLghD,EAAME,SACNF,EAAMI,qBChhBhB,OApBA,SAAe/4C,GACb,MAAO,CACLrjB,KAAM,gBACNujB,QAAS,CAAE,UAAW,gBACtBrI,SAAU,CACR,CACE1H,UAAW,OAIXsH,MAAO,qCACP4C,OAAQ,CACN5Y,IAAK,gBACLygB,YAAa,YCbvB,SAAS,GAAO7f,GACd,OAAKA,EACa,kBAAPA,EAAwBA,EAE5BA,EAAGX,OAHM,KAUlB,SAAS,MAAUrD,GAEjB,OADeA,EAAKsQ,KAAKtJ,GAAM,GAAOA,KAAIuJ,KAAK,IAsBjD,SAAS,MAAUvQ,GAKjB,MAHe,KApBjB,SAA8BA,GAC5B,MAAMyR,EAAOzR,EAAKA,EAAKV,OAAS,GAEhC,MAAoB,kBAATmS,GAAqBA,EAAKvT,cAAgBjB,QACnD+C,EAAK8X,OAAO9X,EAAKV,OAAS,EAAG,GACtBmS,GAEA,GAYI,CAAqBzR,GAE1BgY,QAAU,GAAK,MACrBhY,EAAKsQ,KAAKtJ,GAAM,GAAOA,KAAIuJ,KAAK,KAAO,IA2pB3C,OAjpBA,SAAaoR,GACX,MAAMigD,EAAejgD,EAAKjI,QAAQ,KAAM,KAmBlCqhD,EAAW,CACf,OACA,QAGA,WAUI5B,EAAQ,CACZ,SACA,SACA,OACA,UACA,OACA,YACA,OACA,OACA,MACA,WACA,UACA,QACA,MACA,UACA,WACA,QACA,QACA,WACA,UACA,OACA,MACA,WACA,OACA,YACA,UACA,UACA,aAmYI0I,EAAqB,CACzB,MACA,OACA,YACA,OACA,OACA,MACA,OACA,OACA,UACA,WACA,OACA,MACA,OACA,QACA,YACA,aACA,YACA,aACA,QACA,UACA,MACA,UACA,cACA,QACA,aACA,gBACA,cACA,cACA,iBACA,aACA,aACA,uBACA,aACA,MACA,aACA,OACA,UACA,KACA,MACA,QACA,QACA,MACA,MACA,MACA,YACA,QACA,SACA,eACA,kBACA,kBACA,WACA,iBACA,QACA,OACA,YACA,YACA,aACA,iBACA,UACA,aACA,WACA,WACA,WACA,aACA,MACA,OACA,OACA,aACA,cACA,YACA,kBACA,MACA,MACA,OACA,YACA,kBACA,QACA,OACA,aACA,SACA,QACA,WACA,UACA,WACA,gBAwBIC,EAAS,CACb,eACA,cACA,cACA,cACA,WACA,cACA,iBACA,gBACA,cACA,gBACA,gBACA,eACA,cACA,aACA,cACA,iBAGIC,EAAYF,EAEZzI,EAAW,CArff,MACA,OACA,MACA,WACA,QACA,MACA,MACA,MACA,QACA,YACA,wBACA,KACA,aACA,OACA,aACA,KACA,OACA,SACA,gBACA,MACA,QACA,cACA,kBACA,UACA,SACA,SACA,OACA,UACA,OACA,KACA,OACA,SACA,cACA,WACA,OACA,OACA,OACA,UACA,OACA,cACA,YACA,mBACA,QACA,aACA,OACA,QACA,WACA,UACA,UACA,SACA,SACA,YACA,UACA,aACA,WACA,UACA,OACA,OACA,gBACA,MACA,OACA,QACA,YACA,aACA,SACA,QACA,OACA,YACA,UACA,kBACA,eACA,kCACA,eACA,eACA,cACA,iBACA,eACA,oBACA,eACA,eACA,mCACA,eACA,SACA,QACA,OACA,MACA,aACA,MACA,UACA,WACA,UACA,UACA,SACA,SACA,aACA,QACA,WACA,gBACA,aACA,WACA,SACA,OACA,UACA,OACA,UACA,OACA,QACA,MACA,YACA,gBACA,WACA,SACA,SACA,QACA,SACA,OACA,UACA,SACA,MACA,WACA,UACA,QACA,QACA,SACA,cACA,QACA,QACA,MACA,UACA,YACA,OACA,OACA,OACA,WACA,SACA,MACA,SACA,QACA,QACA,WACA,SACA,SACA,OACA,OACA,WACA,KACA,YACA,UACA,QACA,QACA,cACA,SACA,MACA,UACA,YACA,eACA,WACA,OACA,KACA,OACA,aACA,gBACA,cACA,cACA,iBACA,aACA,aACA,uBACA,aACA,MACA,WACA,QACA,aACA,UACA,OACA,UACA,OACA,OACA,aACA,UACA,KACA,QACA,YACA,iBACA,MACA,QACA,QACA,QACA,eACA,kBACA,UACA,MACA,SACA,QACA,SACA,MACA,SACA,MACA,WACA,SACA,QACA,WACA,WACA,UACA,QACA,QACA,MACA,KACA,OACA,YACA,MACA,YACA,QACA,OACA,SACA,UACA,eACA,oBACA,KACA,SACA,MACA,OACA,KACA,MACA,OACA,OACA,KACA,QACA,MACA,QACA,OACA,WACA,UACA,YACA,YACA,UACA,MACA,UACA,eACA,kBACA,kBACA,SACA,UACA,WACA,iBACA,QACA,WACA,YACA,UACA,UACA,YACA,MACA,QACA,OACA,QACA,OACA,YACA,MACA,aACA,cACA,YACA,YACA,aACA,iBACA,UACA,aACA,WACA,WACA,WACA,UACA,SACA,SACA,UACA,SACA,QACA,WACA,SACA,MACA,aACA,OACA,UACA,YACA,QACA,SACA,SACA,SACA,OACA,SACA,YACA,eACA,MACA,OACA,UACA,MACA,OACA,OACA,WACA,OACA,WACA,eACA,MACA,eACA,WACA,aACA,OACA,QACA,SACA,aACA,cACA,cACA,SACA,YACA,kBACA,WACA,MACA,YACA,SACA,cACA,cACA,QACA,cACA,MACA,OACA,OACA,OACA,YACA,gBACA,kBACA,KACA,WACA,YACA,kBACA,cACA,QACA,UACA,OACA,aACA,OACA,WACA,UACA,QACA,SACA,UACA,SACA,SACA,QACA,OACA,QACA,QACA,SACA,WACA,UACA,WACA,YACA,UACA,UACA,aACA,OACA,WACA,QACA,eACA,SACA,OACA,SACA,UACA,OAzXA,MACA,MACA,YACA,OACA,QACA,QACA,OACA,QA0f0D3lD,QAAQmJ,IAC1DilD,EAAmB3rD,SAAS0G,KAchCugD,EAAgB,CACpB/jD,MAAO,GAAO,KAAM,MAAU2oD,GAAY,SAC1C1oD,UAAW,EACXqC,SAAU,CACR+N,SAAUs4C,IAmBd,MAAO,CACLzjE,KAAM,MACNsgB,kBAAkB,EAElBrF,QAAS,WACTmC,SAAU,CACR6E,SAAU,YACV3D,QArBJ,SAAyB8I,GAAM,WAACs8C,EAAU,KAAEC,GAAQ,IAClD,MAAMC,EAAYD,EAElB,OADAD,EAAaA,GAAc,GACpBt8C,EAAKpV,KAAKuV,GACXA,EAAKljB,MAAM,WAAaq/D,EAAW9rD,SAAS2P,GACvCA,EACEq8C,EAAUr8C,GACZ,GAAGA,MAEHA,IAaPs8C,CAAgB/I,EAAU,CAAE6I,KAAOj7D,GAAMA,EAAE1H,OAAS,IACtDk4D,QAASuD,EACTv2D,KAAM20D,EACN1vC,SA1F4B,CAC9B,kBACA,eACA,kCACA,eACA,eACA,iBACA,mCACA,eACA,eACA,cACA,cACA,eACA,YACA,oBACA,mBA6EAjQ,SAAU,CACR,CACEJ,MAAO,MAAU0oD,GACjBzoD,UAAW,EACXqC,SAAU,CACR6E,SAAU,UACV3D,QAASw8C,EAAS93D,OAAOwgE,GACzBtK,QAASuD,EACTv2D,KAAM20D,IAGV,CACErnD,UAAW,OACXsH,MAAO,GAtmBX,mBACA,eACA,gBACA,qBAqmBE+jD,EA9Da,CACfrrD,UAAW,WACXsH,MAAO,cAvkBM,CACbtH,UAAW,SACXgP,SAAU,CACR,CACE1H,MAAO,IACPhW,IAAK,IACLoW,SAAU,CACR,CAACJ,MAAO,UAKU,CACxBA,MAAO,IACPhW,IAAK,IACLoW,SAAU,CAAE,CAAEJ,MAAO,QAwnBnBuI,EAAKzH,cACLyH,EAAK5H,qBACL6nD,EA/Da,CACf9vD,UAAW,WACXsH,MAAO,gDACPC,UAAW,MC/nBf,SAAS,GAAOrV,GACd,OAAKA,EACa,kBAAPA,EAAwBA,EAE5BA,EAAGX,OAHM,KAUlB,SAAS,GAAUW,GACjB,OAAO,GAAO,MAAOA,EAAI,KAO3B,SAAS,MAAUhE,GAEjB,OADeA,EAAKsQ,KAAKtJ,GAAM,GAAOA,KAAIuJ,KAAK,IAsBjD,SAAS,MAAUvQ,GAKjB,MAHe,KApBjB,SAA8BA,GAC5B,MAAMyR,EAAOzR,EAAKA,EAAKV,OAAS,GAEhC,MAAoB,kBAATmS,GAAqBA,EAAKvT,cAAgBjB,QACnD+C,EAAK8X,OAAO9X,EAAKV,OAAS,EAAG,GACtBmS,GAEA,GAYI,CAAqBzR,GAE1BgY,QAAU,GAAK,MACrBhY,EAAKsQ,KAAKtJ,GAAM,GAAOA,KAAIuJ,KAAK,KAAO,IAI3C,MAAM6xD,GAAiBxlD,GAAW,GAChC,KACAA,EACA,MAAMnc,KAAKmc,GAAW,KAAO,MAIzBylD,GAAc,CAClB,WACA,QACA/xD,IAAI8xD,IAGAE,GAAsB,CAC1B,OACA,QACAhyD,IAAI8xD,IAGAG,GAAe,CACnB,MACA,QAII7mD,GAAW,CAIf,QACA,iBACA,QACA,QACA,OACA,MACA,KACA,QACA,OACA,QACA,QACA,WACA,cACA,UACA,QACA,SACA,SACA,KACA,UACA,OACA,OACA,YACA,cACA,qBACA,cACA,QACA,MACA,OACA,MACA,QACA,KACA,SACA,WACA,QACA,SACA,QACA,QACA,kBACA,WACA,KACA,KACA,WACA,cACA,OACA,MACA,WACA,cACA,cACA,OACA,WACA,WACA,WACA,UACA,kBACA,SACA,iBACA,UACA,WACA,gBACA,SACA,SACA,WACA,WACA,SACA,MACA,OACA,SACA,SACA,YACA,QACA,SACA,SACA,QACA,QACA,OACA,MACA,YACA,kBACA,oBACA,UACA,MACA,OACA,QACA,QACA,WAOI8mD,GAAW,CACf,QACA,MACA,QAIIC,GAA0B,CAC9B,aACA,gBACA,aACA,OACA,YACA,OACA,SAKIC,GAAqB,CACzB,gBACA,UACA,aACA,QACA,UACA,SACA,SACA,QACA,UACA,eACA,YACA,YACA,MACA,gBACA,WACA,QACA,YACA,kBACA,2BACA,YAIIC,GAAW,CACf,MACA,MACA,MACA,SACA,mBACA,aACA,OACA,aACA,YACA,4BACA,MACA,MACA,cACA,eACA,eACA,eACA,sBACA,QACA,WACA,gBACA,WACA,SACA,OACA,oCACA,YACA,OACA,gBACA,iBACA,uBACA,2BACA,oBACA,aACA,0BACA,OAIIC,GAAe,GACnB,oBACA,kBACA,iBACA,iBACA,iBACA,mCACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,YAIIC,GAAoB,GACxBD,GACA,kBACA,kBACA,kBACA,kBACA,mBAMI/T,GAAW,GAAO+T,GAAcC,GAAmB,KAGnDC,GAAiB,GACrB,YACA,uDACA,yDACA,yDACA,kBACA,+DACA,yDACA,+BACA,yDACA,yDACA,gCASIC,GAAsB,GAC1BD,GACA,KACA,0DAIItlC,GAAa,GAAOslC,GAAgBC,GAAqB,KAGzDC,GAAiB,GAAO,QAASD,GAAqB,KAItDE,GAAoB,CACxB,cACA,GAAO,eAAgB,GAAO,QAAS,QAAS,KAAM,MACtD,oBACA,kBACA,sBACA,WACA,SACA,gBACA,WACA,eACA,gBACA,WACA,gBACA,YACA,OACA,UACA,oBACA,YACA,YACA,GAAO,SAAUzlC,GAAY,MAC7B,OACA,cACA,kBACA,iCACA,gBACA,WACA,oBACA,UACA,oBAII0lC,GAAuB,CAC3B,MACA,0BACA,QACA,4BACA,cACA,kCACA,UACA,8BACA,OACA,2BACA,SAsfF,OAzeA,SAAevhD,GACb,MAAMwhD,EAAa,CACjBxgE,MAAO,MACP0W,UAAW,GAGP+pD,EAAgBzhD,EAAKjI,QACzB,OACA,OACA,CACEF,SAAU,CAAE,UAGVqhD,EAAW,CACfl5C,EAAK7H,oBACLspD,GAKIC,EAAc,CAClB1gE,MAAO,CACL,KACA,MAAU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PhW,IAAK,KACLoW,SAAU,CACR,UACGsrD,KAMX,MAAO,CACLxmE,KAAM,QACNod,SAAU09C,EACV5/C,SAAU,IACLqhD,EACH3B,EACAwL,EACA,CACEnpD,cAAe,6CACfnY,IAAK,MACLib,YAAY,EACZ3C,SAAU09C,EACV5/C,SAAU,CACRmI,EAAKH,QAAQG,EAAKtH,WAAY,CAC5BvI,UAAW,cACXsH,MAAO,6CAENsqD,IAGPiB,EACAC,EACA,CACErpD,cAAe,SACfnY,IAAK,IACLoW,SAAU,IAAKqhD,GACfxhD,UAAW,MAEVqqD,KACA5H,KACA8H,EACHnH,EACA5C,KACGuK,KACA/J,EACHgK,EACAE,KCx2BN,MAAM,GAAW,2BACX,GAAW,CACf,KACA,KACA,KACA,KACA,MACA,QACA,UACA,MACA,MACA,WACA,KACA,SACA,OACA,OACA,QACA,QACA,aACA,OACA,QACA,OACA,UACA,MACA,SACA,WACA,SACA,SACA,MACA,QACA,QACA,QAIA,WACA,QACA,QACA,SACA,SACA,OACA,SACA,WAEI,GAAW,CACf,OACA,QACA,OACA,YACA,MACA,YAGI,GAAQ,CACZ,OACA,WACA,SACA,OACA,OACA,SACA,SACA,SACA,WACA,UACA,QACA,SACA,MACA,MACA,UACA,UACA,QACA,UACA,OACA,UACA,eACA,aACA,aACA,YACA,cACA,cACA,eACA,QACA,aACA,oBACA,cACA,gBACA,iBACA,UAGI,GAAc,CAClB,YACA,gBACA,aACA,iBACA,cACA,YACA,YAGI,GAAmB,CACvB,cACA,aACA,gBACA,eAEA,UACA,UAEA,OACA,WACA,QACA,aACA,WACA,YACA,qBACA,YACA,qBACA,SACA,YAGI,GAAqB,CACzB,YACA,OACA,QACA,UACA,SACA,WACA,eACA,SACA,UAGI,GAAY,GAAGjjE,OACnB,GACA,GACA,IAuBF,SAAS,GAAU0C,GACjB,OAAO,GAAO,MAAOA,EAAI,KAO3B,SAAS,MAAUhE,GAEjB,OADeA,EAAKsQ,KAAKtJ,IAAM,OApBjBhD,EAoBwBgD,GAlBpB,kBAAPhD,EAAwBA,EAE5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","sources":["webpack://_N_E/./node_modules/extend/index.js","webpack://_N_E/./node_modules/format/format.js","webpack://_N_E/./node_modules/inline-style-parser/index.js","webpack://_N_E/./node_modules/is-buffer/index.js","webpack://_N_E/./node_modules/mdurl/encode.js","webpack://_N_E/./node_modules/next/error.js","webpack://_N_E/./node_modules/react-is/cjs/react-is.production.min.js","webpack://_N_E/./node_modules/react-is/index.js","webpack://_N_E/./node_modules/react-share/es/EmailIcon.js","webpack://_N_E/./node_modules/react-share/es/EmailShareButton.js","webpack://_N_E/./node_modules/react-share/es/LinkedinIcon.js","webpack://_N_E/./node_modules/react-share/es/LinkedinShareButton.js","webpack://_N_E/./node_modules/react-share/es/RedditIcon.js","webpack://_N_E/./node_modules/react-share/es/RedditShareButton.js","webpack://_N_E/./node_modules/react-share/es/hocs/createIcon.js","webpack://_N_E/./node_modules/react-share/es/ShareButton.js","webpack://_N_E/./node_modules/react-share/es/hocs/createShareButton.js","webpack://_N_E/./node_modules/react-share/es/utils/assert.js","webpack://_N_E/./node_modules/react-share/es/utils/objectToGetParams.js","webpack://_N_E/./node_modules/style-to-object/index.js","webpack://_N_E/./node_modules/highlight.js/lib/core.js","webpack://_N_E/./node_modules/highlight.js/es/languages/x86asm.js","webpack://_N_E/./node_modules/unist-util-stringify-position/index.js","webpack://_N_E/./node_modules/vfile-message/index.js","webpack://_N_E/./node_modules/vfile/lib/minpath.browser.js","webpack://_N_E/./node_modules/vfile/lib/minproc.browser.js","webpack://_N_E/./node_modules/vfile/lib/minurl.shared.js","webpack://_N_E/./node_modules/vfile/lib/minurl.browser.js","webpack://_N_E/./node_modules/vfile/lib/index.js","webpack://_N_E/./node_modules/bail/index.js","webpack://_N_E/./node_modules/is-plain-obj/index.js","webpack://_N_E/./node_modules/trough/index.js","webpack://_N_E/./node_modules/unified/lib/index.js","webpack://_N_E/./node_modules/mdast-util-to-string/index.js","webpack://_N_E/./node_modules/micromark-util-chunked/index.js","webpack://_N_E/./node_modules/micromark-util-combine-extensions/index.js","webpack://_N_E/./node_modules/micromark-util-character/lib/unicode-punctuation-regex.js","webpack://_N_E/./node_modules/micromark-util-character/index.js","webpack://_N_E/./node_modules/micromark-factory-space/index.js","webpack://_N_E/./node_modules/micromark/lib/initialize/content.js","webpack://_N_E/./node_modules/micromark/lib/initialize/document.js","webpack://_N_E/./node_modules/micromark-core-commonmark/lib/blank-line.js","webpack://_N_E/./node_modules/micromark-util-subtokenize/index.js","webpack://_N_E/./node_modules/micromark-core-commonmark/lib/content.js","webpack://_N_E/./node_modules/micromark/lib/initialize/flow.js","webpack://_N_E/./node_modules/micromark/lib/initialize/text.js","webpack://_N_E/./node_modules/micromark-util-resolve-all/index.js","webpack://_N_E/./node_modules/micromark/lib/create-tokenizer.js","webpack://_N_E/./node_modules/micromark-core-commonmark/lib/thematic-break.js","webpack://_N_E/./node_modules/micromark-core-commonmark/lib/list.js","webpack://_N_E/./node_modules/micromark-core-commonmark/lib/block-quote.js","webpack://_N_E/./node_modules/micromark-factory-destination/index.js","webpack://_N_E/./node_modules/micromark-factory-label/index.js","webpack://_N_E/./node_modules/micromark-factory-title/index.js","webpack://_N_E/./node_modules/micromark-factory-whitespace/index.js","webpack://_N_E/./node_modules/micromark-util-normalize-identifier/index.js","webpack://_N_E/./node_modules/micromark-core-commonmark/lib/definition.js","webpack://_N_E/./node_modules/micromark-core-commonmark/lib/code-indented.js","webpack://_N_E/./node_modules/micromark-core-commonmark/lib/setext-underline.js","webpack://_N_E/./node_modules/micromark-util-html-tag-name/index.js","webpack://_N_E/./node_modules/micromark-core-commonmark/lib/html-flow.js","webpack://_N_E/./node_modules/micromark-core-commonmark/lib/code-fenced.js","webpack://_N_E/./node_modules/parse-entities/decode-entity.browser.js","webpack://_N_E/./node_modules/micromark-core-commonmark/lib/character-reference.js","webpack://_N_E/./node_modules/micromark-core-commonmark/lib/character-escape.js","webpack://_N_E/./node_modules/micromark-core-commonmark/lib/line-ending.js","webpack://_N_E/./node_modules/micromark-core-commonmark/lib/label-end.js","webpack://_N_E/./node_modules/micromark-util-classify-character/index.js","webpack://_N_E/./node_modules/micromark-core-commonmark/lib/attention.js","webpack://_N_E/./node_modules/micromark/lib/constructs.js","webpack://_N_E/./node_modules/micromark-core-commonmark/lib/heading-atx.js","webpack://_N_E/./node_modules/micromark-core-commonmark/lib/label-start-image.js","webpack://_N_E/./node_modules/micromark-core-commonmark/lib/autolink.js","webpack://_N_E/./node_modules/micromark-core-commonmark/lib/html-text.js","webpack://_N_E/./node_modules/micromark-core-commonmark/lib/label-start-link.js","webpack://_N_E/./node_modules/micromark-core-commonmark/lib/hard-break-escape.js","webpack://_N_E/./node_modules/micromark-core-commonmark/lib/code-text.js","webpack://_N_E/./node_modules/micromark/lib/parse.js","webpack://_N_E/./node_modules/micromark/lib/preprocess.js","webpack://_N_E/./node_modules/mdast-util-from-markdown/lib/index.js","webpack://_N_E/./node_modules/micromark-util-decode-numeric-character-reference/index.js","webpack://_N_E/./node_modules/micromark/lib/postprocess.js","webpack://_N_E/./node_modules/remark-parse/index.js","webpack://_N_E/./node_modules/remark-parse/lib/index.js","webpack://_N_E/./node_modules/unist-builder/index.js","webpack://_N_E/./node_modules/mdast-util-to-hast/node_modules/unist-util-visit-parents/index.js","webpack://_N_E/./node_modules/unist-util-position/index.js","webpack://_N_E/./node_modules/mdast-util-definitions/node_modules/unist-util-visit-parents/index.js","webpack://_N_E/./node_modules/mdast-util-definitions/node_modules/unist-util-visit/index.js","webpack://_N_E/./node_modules/mdast-util-definitions/index.js","webpack://_N_E/./node_modules/mdast-util-to-hast/lib/traverse.js","webpack://_N_E/./node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","webpack://_N_E/./node_modules/mdast-util-to-hast/lib/wrap.js","webpack://_N_E/./node_modules/mdast-util-to-hast/lib/handlers/list.js","webpack://_N_E/./node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","webpack://_N_E/./node_modules/mdast-util-to-hast/lib/revert.js","webpack://_N_E/./node_modules/mdast-util-to-hast/lib/handlers/list-item.js","webpack://_N_E/./node_modules/mdast-util-to-hast/lib/handlers/index.js","webpack://_N_E/./node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","webpack://_N_E/./node_modules/mdast-util-to-hast/lib/handlers/break.js","webpack://_N_E/./node_modules/mdast-util-to-hast/lib/handlers/code.js","webpack://_N_E/./node_modules/mdast-util-to-hast/lib/handlers/delete.js","webpack://_N_E/./node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","webpack://_N_E/./node_modules/mdast-util-to-hast/lib/handlers/footnote.js","webpack://_N_E/./node_modules/mdast-util-to-hast/lib/handlers/heading.js","webpack://_N_E/./node_modules/mdast-util-to-hast/lib/handlers/html.js","webpack://_N_E/./node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","webpack://_N_E/./node_modules/mdast-util-to-hast/lib/handlers/image.js","webpack://_N_E/./node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","webpack://_N_E/./node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","webpack://_N_E/./node_modules/mdast-util-to-hast/lib/handlers/link.js","webpack://_N_E/./node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","webpack://_N_E/./node_modules/mdast-util-to-hast/lib/handlers/root.js","webpack://_N_E/./node_modules/mdast-util-to-hast/lib/handlers/strong.js","webpack://_N_E/./node_modules/mdast-util-to-hast/lib/handlers/table.js","webpack://_N_E/./node_modules/mdast-util-to-hast/lib/handlers/text.js","webpack://_N_E/./node_modules/mdast-util-to-hast/lib/index.js","webpack://_N_E/./node_modules/mdast-util-to-hast/node_modules/unist-util-visit/index.js","webpack://_N_E/./node_modules/unist-util-generated/index.js","webpack://_N_E/./node_modules/mdast-util-to-hast/lib/footer.js","webpack://_N_E/./node_modules/remark-rehype/index.js","webpack://_N_E/./node_modules/property-information/lib/util/schema.js","webpack://_N_E/./node_modules/property-information/lib/util/merge.js","webpack://_N_E/./node_modules/property-information/lib/normalize.js","webpack://_N_E/./node_modules/property-information/lib/util/info.js","webpack://_N_E/./node_modules/property-information/lib/util/types.js","webpack://_N_E/./node_modules/property-information/lib/util/defined-info.js","webpack://_N_E/./node_modules/property-information/lib/util/create.js","webpack://_N_E/./node_modules/property-information/lib/xlink.js","webpack://_N_E/./node_modules/property-information/lib/xml.js","webpack://_N_E/./node_modules/property-information/lib/util/case-sensitive-transform.js","webpack://_N_E/./node_modules/property-information/lib/util/case-insensitive-transform.js","webpack://_N_E/./node_modules/property-information/lib/xmlns.js","webpack://_N_E/./node_modules/property-information/lib/aria.js","webpack://_N_E/./node_modules/property-information/lib/html.js","webpack://_N_E/./node_modules/property-information/lib/svg.js","webpack://_N_E/./node_modules/property-information/index.js","webpack://_N_E/./node_modules/react-markdown/lib/rehype-filter.js","webpack://_N_E/./node_modules/react-markdown/lib/uri-transformer.js","webpack://_N_E/./node_modules/property-information/lib/find.js","webpack://_N_E/./node_modules/property-information/lib/hast-to-react.js","webpack://_N_E/./node_modules/react-markdown/lib/ast-to-react.js","webpack://_N_E/./node_modules/comma-separated-tokens/index.js","webpack://_N_E/./node_modules/space-separated-tokens/index.js","webpack://_N_E/./node_modules/react-markdown/lib/react-markdown.js","webpack://_N_E/./node_modules/react-markdown/index.js","webpack://_N_E/./node_modules/highlight.js/es/languages/arduino.js","webpack://_N_E/./node_modules/highlight.js/es/languages/bash.js","webpack://_N_E/./node_modules/highlight.js/es/languages/c.js","webpack://_N_E/./node_modules/highlight.js/es/languages/cpp.js","webpack://_N_E/./node_modules/highlight.js/es/languages/csharp.js","webpack://_N_E/./node_modules/highlight.js/es/languages/css.js","webpack://_N_E/./node_modules/highlight.js/es/languages/diff.js","webpack://_N_E/./node_modules/highlight.js/es/languages/go.js","webpack://_N_E/./node_modules/highlight.js/es/languages/ini.js","webpack://_N_E/./node_modules/highlight.js/es/languages/java.js","webpack://_N_E/./node_modules/highlight.js/es/languages/javascript.js","webpack://_N_E/./node_modules/highlight.js/es/languages/json.js","webpack://_N_E/./node_modules/highlight.js/es/languages/kotlin.js","webpack://_N_E/./node_modules/highlight.js/es/languages/less.js","webpack://_N_E/./node_modules/highlight.js/es/languages/lua.js","webpack://_N_E/./node_modules/highlight.js/es/languages/makefile.js","webpack://_N_E/./node_modules/highlight.js/es/languages/markdown.js","webpack://_N_E/./node_modules/highlight.js/es/languages/objectivec.js","webpack://_N_E/./node_modules/highlight.js/es/languages/perl.js","webpack://_N_E/./node_modules/highlight.js/es/languages/php.js","webpack://_N_E/./node_modules/highlight.js/es/languages/php-template.js","webpack://_N_E/./node_modules/highlight.js/es/languages/plaintext.js","webpack://_N_E/./node_modules/highlight.js/es/languages/python.js","webpack://_N_E/./node_modules/highlight.js/es/languages/python-repl.js","webpack://_N_E/./node_modules/highlight.js/es/languages/r.js","webpack://_N_E/./node_modules/highlight.js/es/languages/ruby.js","webpack://_N_E/./node_modules/highlight.js/es/languages/rust.js","webpack://_N_E/./node_modules/highlight.js/es/languages/scss.js","webpack://_N_E/./node_modules/highlight.js/es/languages/shell.js","webpack://_N_E/./node_modules/highlight.js/es/languages/sql.js","webpack://_N_E/./node_modules/highlight.js/es/languages/swift.js","webpack://_N_E/./node_modules/highlight.js/es/languages/typescript.js","webpack://_N_E/./node_modules/highlight.js/es/languages/vbnet.js","webpack://_N_E/./node_modules/highlight.js/es/languages/xml.js","webpack://_N_E/./node_modules/highlight.js/es/languages/yaml.js","webpack://_N_E/./node_modules/highlight.js/es/core.js","webpack://_N_E/./node_modules/fault/index.js","webpack://_N_E/./node_modules/lowlight/lib/core.js","webpack://_N_E/./node_modules/lowlight/lib/common.js","webpack://_N_E/./node_modules/hast-util-is-element/index.js","webpack://_N_E/./node_modules/unist-util-find-after/index.js","webpack://_N_E/./node_modules/hast-util-to-text/index.js","webpack://_N_E/./node_modules/rehype-highlight/index.js","webpack://_N_E/./node_modules/unist-util-is/index.js","webpack://_N_E/./node_modules/unist-util-visit-parents/index.js","webpack://_N_E/./node_modules/unist-util-visit/index.js"],"sourcesContent":["'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","//\n// format - printf-like string formatting for JavaScript\n// github.com/samsonjs/format\n// @_sjs\n//\n// Copyright 2010 - 2013 Sami Samhuri <sami@samhuri.net>\n//\n// MIT License\n// http://sjs.mit-license.org\n//\n\n;(function() {\n\n  //// Export the API\n  var namespace;\n\n  // CommonJS / Node module\n  if (typeof module !== 'undefined') {\n    namespace = module.exports = format;\n  }\n\n  // Browsers and other environments\n  else {\n    // Get the global object. Works in ES3, ES5, and ES5 strict mode.\n    namespace = (function(){ return this || (1,eval)('this') }());\n  }\n\n  namespace.format = format;\n  namespace.vsprintf = vsprintf;\n\n  if (typeof console !== 'undefined' && typeof console.log === 'function') {\n    namespace.printf = printf;\n  }\n\n  function printf(/* ... */) {\n    console.log(format.apply(null, arguments));\n  }\n\n  function vsprintf(fmt, replacements) {\n    return format.apply(null, [fmt].concat(replacements));\n  }\n\n  function format(fmt) {\n    var argIndex = 1 // skip initial format argument\n      , args = [].slice.call(arguments)\n      , i = 0\n      , n = fmt.length\n      , result = ''\n      , c\n      , escaped = false\n      , arg\n      , tmp\n      , leadingZero = false\n      , precision\n      , nextArg = function() { return args[argIndex++]; }\n      , slurpNumber = function() {\n          var digits = '';\n          while (/\\d/.test(fmt[i])) {\n            digits += fmt[i++];\n            c = fmt[i];\n          }\n          return digits.length > 0 ? parseInt(digits) : null;\n        }\n      ;\n    for (; i < n; ++i) {\n      c = fmt[i];\n      if (escaped) {\n        escaped = false;\n        if (c == '.') {\n          leadingZero = false;\n          c = fmt[++i];\n        }\n        else if (c == '0' && fmt[i + 1] == '.') {\n          leadingZero = true;\n          i += 2;\n          c = fmt[i];\n        }\n        else {\n          leadingZero = true;\n        }\n        precision = slurpNumber();\n        switch (c) {\n        case 'b': // number in binary\n          result += parseInt(nextArg(), 10).toString(2);\n          break;\n        case 'c': // character\n          arg = nextArg();\n          if (typeof arg === 'string' || arg instanceof String)\n            result += arg;\n          else\n            result += String.fromCharCode(parseInt(arg, 10));\n          break;\n        case 'd': // number in decimal\n          result += parseInt(nextArg(), 10);\n          break;\n        case 'f': // floating point number\n          tmp = String(parseFloat(nextArg()).toFixed(precision || 6));\n          result += leadingZero ? tmp : tmp.replace(/^0/, '');\n          break;\n        case 'j': // JSON\n          result += JSON.stringify(nextArg());\n          break;\n        case 'o': // number in octal\n          result += '0' + parseInt(nextArg(), 10).toString(8);\n          break;\n        case 's': // string\n          result += nextArg();\n          break;\n        case 'x': // lowercase hexadecimal\n          result += '0x' + parseInt(nextArg(), 10).toString(16);\n          break;\n        case 'X': // uppercase hexadecimal\n          result += '0x' + parseInt(nextArg(), 10).toString(16).toUpperCase();\n          break;\n        default:\n          result += c;\n          break;\n        }\n      } else if (c === '%') {\n        escaped = true;\n      } else {\n        result += c;\n      }\n    }\n    return result;\n  }\n\n}());\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function(style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function(node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","\n'use strict';\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n","module.exports = require('./dist/pages/_error')\n","/** @license React v17.0.2\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var b=60103,c=60106,d=60107,e=60108,f=60114,g=60109,h=60110,k=60112,l=60113,m=60120,n=60115,p=60116,q=60121,r=60122,u=60117,v=60129,w=60131;\nif(\"function\"===typeof Symbol&&Symbol.for){var x=Symbol.for;b=x(\"react.element\");c=x(\"react.portal\");d=x(\"react.fragment\");e=x(\"react.strict_mode\");f=x(\"react.profiler\");g=x(\"react.provider\");h=x(\"react.context\");k=x(\"react.forward_ref\");l=x(\"react.suspense\");m=x(\"react.suspense_list\");n=x(\"react.memo\");p=x(\"react.lazy\");q=x(\"react.block\");r=x(\"react.server.block\");u=x(\"react.fundamental\");v=x(\"react.debug_trace_mode\");w=x(\"react.legacy_hidden\")}\nfunction y(a){if(\"object\"===typeof a&&null!==a){var t=a.$$typeof;switch(t){case b:switch(a=a.type,a){case d:case f:case e:case l:case m:return a;default:switch(a=a&&a.$$typeof,a){case h:case k:case p:case n:case g:return a;default:return t}}case c:return t}}}var z=g,A=b,B=k,C=d,D=p,E=n,F=c,G=f,H=e,I=l;exports.ContextConsumer=h;exports.ContextProvider=z;exports.Element=A;exports.ForwardRef=B;exports.Fragment=C;exports.Lazy=D;exports.Memo=E;exports.Portal=F;exports.Profiler=G;exports.StrictMode=H;\nexports.Suspense=I;exports.isAsyncMode=function(){return!1};exports.isConcurrentMode=function(){return!1};exports.isContextConsumer=function(a){return y(a)===h};exports.isContextProvider=function(a){return y(a)===g};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===b};exports.isForwardRef=function(a){return y(a)===k};exports.isFragment=function(a){return y(a)===d};exports.isLazy=function(a){return y(a)===p};exports.isMemo=function(a){return y(a)===n};\nexports.isPortal=function(a){return y(a)===c};exports.isProfiler=function(a){return y(a)===f};exports.isStrictMode=function(a){return y(a)===e};exports.isSuspense=function(a){return y(a)===l};exports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===d||a===f||a===v||a===e||a===l||a===m||a===w||\"object\"===typeof a&&null!==a&&(a.$$typeof===p||a.$$typeof===n||a.$$typeof===g||a.$$typeof===h||a.$$typeof===k||a.$$typeof===u||a.$$typeof===q||a[0]===r)?!0:!1};\nexports.typeOf=y;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","import createIcon from './hocs/createIcon';\nvar EmailIcon = createIcon({\n    color: '#7f7f7f',\n    networkName: 'email',\n    path: 'M17,22v20h30V22H17z M41.1,25L32,32.1L22.9,25H41.1z M20,39V26.6l12,9.3l12-9.3V39H20z',\n});\nexport default EmailIcon;\n","import objectToGetParams from './utils/objectToGetParams';\nimport createShareButton from './hocs/createShareButton';\nfunction emailLink(url, _a) {\n    var subject = _a.subject, body = _a.body, separator = _a.separator;\n    return 'mailto:' + objectToGetParams({ subject: subject, body: body ? body + separator + url : url });\n}\nvar EmailShareButton = createShareButton('email', emailLink, function (props) { return ({\n    subject: props.subject,\n    body: props.body,\n    separator: props.separator || ' ',\n}); }, {\n    openShareDialogOnClick: false,\n    onClick: function (_, link) {\n        window.location.href = link;\n    },\n});\nexport default EmailShareButton;\n","import createIcon from './hocs/createIcon';\nvar LinkedinIcon = createIcon({\n    color: '#007fb1',\n    networkName: 'linkedin',\n    path: 'M20.4,44h5.4V26.6h-5.4V44z M23.1,18c-1.7,0-3.1,1.4-3.1,3.1c0,1.7,1.4,3.1,3.1,3.1 c1.7,0,3.1-1.4,3.1-3.1C26.2,19.4,24.8,18,23.1,18z M39.5,26.2c-2.6,0-4.4,1.4-5.1,2.8h-0.1v-2.4h-5.2V44h5.4v-8.6 c0-2.3,0.4-4.5,3.2-4.5c2.8,0,2.8,2.6,2.8,4.6V44H46v-9.5C46,29.8,45,26.2,39.5,26.2z',\n});\nexport default LinkedinIcon;\n","import assert from './utils/assert';\nimport objectToGetParams from './utils/objectToGetParams';\nimport createShareButton from './hocs/createShareButton';\nfunction linkedinLink(url, _a) {\n    var title = _a.title, summary = _a.summary, source = _a.source;\n    assert(url, 'linkedin.url');\n    return ('https://linkedin.com/shareArticle' +\n        objectToGetParams({ url: url, mini: 'true', title: title, summary: summary, source: source }));\n}\nvar LinkedinShareButton = createShareButton('linkedin', linkedinLink, function (_a) {\n    var title = _a.title, summary = _a.summary, source = _a.source;\n    return ({ title: title, summary: summary, source: source });\n}, {\n    windowWidth: 750,\n    windowHeight: 600,\n});\nexport default LinkedinShareButton;\n","import createIcon from './hocs/createIcon';\nvar RedditIcon = createIcon({\n    color: '#ff4500',\n    networkName: 'reddit',\n    path: 'm 52.8165,31.942362 c 0,-2.4803 -2.0264,-4.4965 -4.5169,-4.4965 -1.2155,0 -2.3171,0.4862 -3.128,1.2682 -3.077,-2.0247 -7.2403,-3.3133 -11.8507,-3.4782 l 2.5211,-7.9373 6.8272,1.5997 -0.0102,0.0986 c 0,2.0281 1.6575,3.6771 3.6958,3.6771 2.0366,0 3.6924,-1.649 3.6924,-3.6771 0,-2.0281 -1.6575,-3.6788 -3.6924,-3.6788 -1.564,0 -2.8968,0.9758 -3.4357,2.3443 l -7.3593,-1.7255 c -0.3213,-0.0782 -0.6477,0.1071 -0.748,0.4233 L 32,25.212062 c -4.8246,0.0578 -9.1953,1.3566 -12.41,3.4425 -0.8058,-0.7446 -1.8751,-1.2104 -3.0583,-1.2104 -2.4905,0 -4.5152,2.0179 -4.5152,4.4982 0,1.649 0.9061,3.0787 2.2389,3.8607 -0.0884,0.4794 -0.1462,0.9639 -0.1462,1.4569 0,6.6487 8.1736,12.0581 18.2223,12.0581 10.0487,0 18.224,-5.4094 18.224,-12.0581 0,-0.4658 -0.0493,-0.9248 -0.1275,-1.377 1.4144,-0.7599 2.3885,-2.2304 2.3885,-3.9406 z m -29.2808,3.0872 c 0,-1.4756 1.207,-2.6775 2.6894,-2.6775 1.4824,0 2.6877,1.2019 2.6877,2.6775 0,1.4756 -1.2053,2.6758 -2.6877,2.6758 -1.4824,0 -2.6894,-1.2002 -2.6894,-2.6758 z m 15.4037,7.9373 c -1.3549,1.3481 -3.4816,2.0043 -6.5008,2.0043 l -0.0221,-0.0051 -0.0221,0.0051 c -3.0209,0 -5.1476,-0.6562 -6.5008,-2.0043 -0.2465,-0.2448 -0.2465,-0.6443 0,-0.8891 0.2465,-0.2465 0.6477,-0.2465 0.8942,0 1.105,1.0999 2.9393,1.6337 5.6066,1.6337 l 0.0221,0.0051 0.0221,-0.0051 c 2.6673,0 4.5016,-0.5355 5.6066,-1.6354 0.2465,-0.2465 0.6477,-0.2448 0.8942,0 0.2465,0.2465 0.2465,0.6443 0,0.8908 z m -0.3213,-5.2615 c -1.4824,0 -2.6877,-1.2002 -2.6877,-2.6758 0,-1.4756 1.2053,-2.6775 2.6877,-2.6775 1.4824,0 2.6877,1.2019 2.6877,2.6775 0,1.4756 -1.2053,2.6758 -2.6877,2.6758 z',\n});\nexport default RedditIcon;\n","import assert from './utils/assert';\nimport objectToGetParams from './utils/objectToGetParams';\nimport createShareButton from './hocs/createShareButton';\nfunction redditLink(url, _a) {\n    var title = _a.title;\n    assert(url, 'reddit.url');\n    return ('https://www.reddit.com/submit' +\n        objectToGetParams({\n            url: url,\n            title: title,\n        }));\n}\nvar RedditShareButton = createShareButton('reddit', redditLink, function (props) { return ({\n    title: props.title,\n}); }, {\n    windowWidth: 660,\n    windowHeight: 460,\n    windowPosition: 'windowCenter',\n});\nexport default RedditShareButton;\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from 'react';\nexport default function createIcon(iconConfig) {\n    var Icon = function (_a) {\n        var bgStyle = _a.bgStyle, borderRadius = _a.borderRadius, iconFillColor = _a.iconFillColor, round = _a.round, size = _a.size, rest = __rest(_a, [\"bgStyle\", \"borderRadius\", \"iconFillColor\", \"round\", \"size\"]);\n        return (React.createElement(\"svg\", __assign({ viewBox: \"0 0 64 64\", width: size, height: size }, rest),\n            round ? (React.createElement(\"circle\", { cx: \"32\", cy: \"32\", r: \"31\", fill: iconConfig.color, style: bgStyle })) : (React.createElement(\"rect\", { width: \"64\", height: \"64\", rx: borderRadius, ry: borderRadius, fill: iconConfig.color, style: bgStyle })),\n            React.createElement(\"path\", { d: iconConfig.path, fill: iconFillColor })));\n    };\n    Icon.defaultProps = {\n        bgStyle: {},\n        borderRadius: 0,\n        iconFillColor: 'white',\n        size: 64,\n    };\n    return Icon;\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { Component } from 'react';\nimport cx from 'classnames';\nvar isPromise = function (obj) {\n    return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';\n};\nvar getBoxPositionOnWindowCenter = function (width, height) { return ({\n    left: window.outerWidth / 2 + (window.screenX || window.screenLeft || 0) - width / 2,\n    top: window.outerHeight / 2 + (window.screenY || window.screenTop || 0) - height / 2,\n}); };\nvar getBoxPositionOnScreenCenter = function (width, height) { return ({\n    top: (window.screen.height - height) / 2,\n    left: (window.screen.width - width) / 2,\n}); };\nfunction windowOpen(url, _a, onClose) {\n    var height = _a.height, width = _a.width, configRest = __rest(_a, [\"height\", \"width\"]);\n    var config = __assign({ height: height,\n        width: width, location: 'no', toolbar: 'no', status: 'no', directories: 'no', menubar: 'no', scrollbars: 'yes', resizable: 'no', centerscreen: 'yes', chrome: 'yes' }, configRest);\n    var shareDialog = window.open(url, '', Object.keys(config)\n        .map(function (key) { return key + \"=\" + config[key]; })\n        .join(', '));\n    if (onClose) {\n        var interval_1 = window.setInterval(function () {\n            try {\n                if (shareDialog === null || shareDialog.closed) {\n                    window.clearInterval(interval_1);\n                    onClose(shareDialog);\n                }\n            }\n            catch (e) {\n                /* eslint-disable no-console */\n                console.error(e);\n                /* eslint-enable no-console */\n            }\n        }, 1000);\n    }\n    return shareDialog;\n}\nvar ShareButton = /** @class */ (function (_super) {\n    __extends(ShareButton, _super);\n    function ShareButton() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.openShareDialog = function (link) {\n            var _a = _this.props, onShareWindowClose = _a.onShareWindowClose, _b = _a.windowHeight, windowHeight = _b === void 0 ? 400 : _b, _c = _a.windowPosition, windowPosition = _c === void 0 ? 'windowCenter' : _c, _d = _a.windowWidth, windowWidth = _d === void 0 ? 550 : _d;\n            var windowConfig = __assign({ height: windowHeight, width: windowWidth }, (windowPosition === 'windowCenter'\n                ? getBoxPositionOnWindowCenter(windowWidth, windowHeight)\n                : getBoxPositionOnScreenCenter(windowWidth, windowHeight)));\n            windowOpen(link, windowConfig, onShareWindowClose);\n        };\n        _this.handleClick = function (event) { return __awaiter(_this, void 0, void 0, function () {\n            var _a, beforeOnClick, disabled, networkLink, onClick, url, openShareDialogOnClick, opts, link, returnVal;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = this.props, beforeOnClick = _a.beforeOnClick, disabled = _a.disabled, networkLink = _a.networkLink, onClick = _a.onClick, url = _a.url, openShareDialogOnClick = _a.openShareDialogOnClick, opts = _a.opts;\n                        link = networkLink(url, opts);\n                        if (disabled) {\n                            return [2 /*return*/];\n                        }\n                        event.preventDefault();\n                        if (!beforeOnClick) return [3 /*break*/, 2];\n                        returnVal = beforeOnClick();\n                        if (!isPromise(returnVal)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, returnVal];\n                    case 1:\n                        _b.sent();\n                        _b.label = 2;\n                    case 2:\n                        if (openShareDialogOnClick) {\n                            this.openShareDialog(link);\n                        }\n                        if (onClick) {\n                            onClick(event, link);\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        }); };\n        return _this;\n    }\n    ShareButton.prototype.render = function () {\n        var _a = this.props, beforeOnClick = _a.beforeOnClick, children = _a.children, className = _a.className, disabled = _a.disabled, disabledStyle = _a.disabledStyle, forwardedRef = _a.forwardedRef, networkLink = _a.networkLink, networkName = _a.networkName, onShareWindowClose = _a.onShareWindowClose, openShareDialogOnClick = _a.openShareDialogOnClick, opts = _a.opts, resetButtonStyle = _a.resetButtonStyle, style = _a.style, url = _a.url, windowHeight = _a.windowHeight, windowPosition = _a.windowPosition, windowWidth = _a.windowWidth, rest = __rest(_a, [\"beforeOnClick\", \"children\", \"className\", \"disabled\", \"disabledStyle\", \"forwardedRef\", \"networkLink\", \"networkName\", \"onShareWindowClose\", \"openShareDialogOnClick\", \"opts\", \"resetButtonStyle\", \"style\", \"url\", \"windowHeight\", \"windowPosition\", \"windowWidth\"]);\n        var newClassName = cx('react-share__ShareButton', {\n            'react-share__ShareButton--disabled': !!disabled,\n            disabled: !!disabled,\n        }, className);\n        var newStyle = resetButtonStyle\n            ? __assign(__assign({ backgroundColor: 'transparent', border: 'none', padding: 0, font: 'inherit', color: 'inherit', cursor: 'pointer' }, style), (disabled && disabledStyle)) : __assign(__assign({}, style), (disabled && disabledStyle));\n        return (React.createElement(\"button\", __assign({}, rest, { \"aria-label\": rest['aria-label'] || networkName, className: newClassName, onClick: this.handleClick, ref: forwardedRef, style: newStyle }), children));\n    };\n    ShareButton.defaultProps = {\n        disabledStyle: { opacity: 0.6 },\n        openShareDialogOnClick: true,\n        resetButtonStyle: true,\n    };\n    return ShareButton;\n}(Component));\nexport default ShareButton;\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport React, { forwardRef } from 'react';\nimport ShareButton from '../ShareButton';\nfunction createShareButton(networkName, link, optsMap, defaultProps) {\n    function CreatedButton(props, ref) {\n        var opts = optsMap(props);\n        var passedProps = __assign({}, props);\n        // remove keys from passed props that are passed as opts\n        var optsKeys = Object.keys(opts);\n        optsKeys.forEach(function (key) {\n            delete passedProps[key];\n        });\n        return (React.createElement(ShareButton, __assign({}, defaultProps, passedProps, { forwardedRef: ref, networkName: networkName, networkLink: link, opts: optsMap(props) })));\n    }\n    CreatedButton.displayName = \"ShareButton-\" + networkName;\n    return forwardRef(CreatedButton);\n}\nexport default createShareButton;\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar AssertionError = /** @class */ (function (_super) {\n    __extends(AssertionError, _super);\n    function AssertionError(message) {\n        var _this = _super.call(this, message) || this;\n        _this.name = 'AssertionError';\n        return _this;\n    }\n    return AssertionError;\n}(Error));\nexport default function assert(value, message) {\n    if (!value) {\n        throw new AssertionError(message);\n    }\n}\n","export default function objectToGetParams(object) {\n    var params = Object.entries(object)\n        .filter(function (_a) {\n        var value = _a[1];\n        return value !== undefined && value !== null;\n    })\n        .map(function (_a) {\n        var key = _a[0], value = _a[1];\n        return encodeURIComponent(key) + \"=\" + encodeURIComponent(String(value));\n    });\n    return params.length > 0 ? \"?\" + params.join('&') : '';\n}\n","var parse = require('inline-style-parser');\n\n/**\n * Parses inline style to object.\n *\n * @example\n * // returns { 'line-height': '42' }\n * StyleToObject('line-height: 42;');\n *\n * @param  {String}      style      - The inline style.\n * @param  {Function}    [iterator] - The iterator function.\n * @return {null|Object}\n */\nfunction StyleToObject(style, iterator) {\n  var output = null;\n  if (!style || typeof style !== 'string') {\n    return output;\n  }\n\n  var declaration;\n  var declarations = parse(style);\n  var hasIterator = typeof iterator === 'function';\n  var property;\n  var value;\n\n  for (var i = 0, len = declarations.length; i < len; i++) {\n    declaration = declarations[i];\n    property = declaration.property;\n    value = declaration.value;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      output || (output = {});\n      output[property] = value;\n    }\n  }\n\n  return output;\n}\n\nmodule.exports = StyleToObject;\n","var deepFreezeEs6 = {exports: {}};\n\nfunction deepFreeze(obj) {\n    if (obj instanceof Map) {\n        obj.clear = obj.delete = obj.set = function () {\n            throw new Error('map is read-only');\n        };\n    } else if (obj instanceof Set) {\n        obj.add = obj.clear = obj.delete = function () {\n            throw new Error('set is read-only');\n        };\n    }\n\n    // Freeze self\n    Object.freeze(obj);\n\n    Object.getOwnPropertyNames(obj).forEach(function (name) {\n        var prop = obj[name];\n\n        // Freeze prop if it is an object\n        if (typeof prop == 'object' && !Object.isFrozen(prop)) {\n            deepFreeze(prop);\n        }\n    });\n\n    return obj;\n}\n\ndeepFreezeEs6.exports = deepFreeze;\ndeepFreezeEs6.exports.default = deepFreeze;\n\nvar deepFreeze$1 = deepFreezeEs6.exports;\n\n/** @typedef {import('highlight.js').CallbackResponse} CallbackResponse */\n/** @typedef {import('highlight.js').CompiledMode} CompiledMode */\n/** @implements CallbackResponse */\n\nclass Response {\n  /**\n   * @param {CompiledMode} mode\n   */\n  constructor(mode) {\n    // eslint-disable-next-line no-undefined\n    if (mode.data === undefined) mode.data = {};\n\n    this.data = mode.data;\n    this.isMatchIgnored = false;\n  }\n\n  ignoreMatch() {\n    this.isMatchIgnored = true;\n  }\n}\n\n/**\n * @param {string} value\n * @returns {string}\n */\nfunction escapeHTML(value) {\n  return value\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#x27;');\n}\n\n/**\n * performs a shallow merge of multiple objects into one\n *\n * @template T\n * @param {T} original\n * @param {Record<string,any>[]} objects\n * @returns {T} a single new object\n */\nfunction inherit$1(original, ...objects) {\n  /** @type Record<string,any> */\n  const result = Object.create(null);\n\n  for (const key in original) {\n    result[key] = original[key];\n  }\n  objects.forEach(function(obj) {\n    for (const key in obj) {\n      result[key] = obj[key];\n    }\n  });\n  return /** @type {T} */ (result);\n}\n\n/**\n * @typedef {object} Renderer\n * @property {(text: string) => void} addText\n * @property {(node: Node) => void} openNode\n * @property {(node: Node) => void} closeNode\n * @property {() => string} value\n */\n\n/** @typedef {{kind?: string, sublanguage?: boolean}} Node */\n/** @typedef {{walk: (r: Renderer) => void}} Tree */\n/** */\n\nconst SPAN_CLOSE = '</span>';\n\n/**\n * Determines if a node needs to be wrapped in <span>\n *\n * @param {Node} node */\nconst emitsWrappingTags = (node) => {\n  return !!node.kind;\n};\n\n/**\n *\n * @param {string} name\n * @param {{prefix:string}} options\n */\nconst expandScopeName = (name, { prefix }) => {\n  if (name.includes(\".\")) {\n    const pieces = name.split(\".\");\n    return [\n      `${prefix}${pieces.shift()}`,\n      ...(pieces.map((x, i) => `${x}${\"_\".repeat(i + 1)}`))\n    ].join(\" \");\n  }\n  return `${prefix}${name}`;\n};\n\n/** @type {Renderer} */\nclass HTMLRenderer {\n  /**\n   * Creates a new HTMLRenderer\n   *\n   * @param {Tree} parseTree - the parse tree (must support `walk` API)\n   * @param {{classPrefix: string}} options\n   */\n  constructor(parseTree, options) {\n    this.buffer = \"\";\n    this.classPrefix = options.classPrefix;\n    parseTree.walk(this);\n  }\n\n  /**\n   * Adds texts to the output stream\n   *\n   * @param {string} text */\n  addText(text) {\n    this.buffer += escapeHTML(text);\n  }\n\n  /**\n   * Adds a node open to the output stream (if needed)\n   *\n   * @param {Node} node */\n  openNode(node) {\n    if (!emitsWrappingTags(node)) return;\n\n    let scope = node.kind;\n    if (node.sublanguage) {\n      scope = `language-${scope}`;\n    } else {\n      scope = expandScopeName(scope, { prefix: this.classPrefix });\n    }\n    this.span(scope);\n  }\n\n  /**\n   * Adds a node close to the output stream (if needed)\n   *\n   * @param {Node} node */\n  closeNode(node) {\n    if (!emitsWrappingTags(node)) return;\n\n    this.buffer += SPAN_CLOSE;\n  }\n\n  /**\n   * returns the accumulated buffer\n  */\n  value() {\n    return this.buffer;\n  }\n\n  // helpers\n\n  /**\n   * Builds a span element\n   *\n   * @param {string} className */\n  span(className) {\n    this.buffer += `<span class=\"${className}\">`;\n  }\n}\n\n/** @typedef {{kind?: string, sublanguage?: boolean, children: Node[]} | string} Node */\n/** @typedef {{kind?: string, sublanguage?: boolean, children: Node[]} } DataNode */\n/** @typedef {import('highlight.js').Emitter} Emitter */\n/**  */\n\nclass TokenTree {\n  constructor() {\n    /** @type DataNode */\n    this.rootNode = { children: [] };\n    this.stack = [this.rootNode];\n  }\n\n  get top() {\n    return this.stack[this.stack.length - 1];\n  }\n\n  get root() { return this.rootNode; }\n\n  /** @param {Node} node */\n  add(node) {\n    this.top.children.push(node);\n  }\n\n  /** @param {string} kind */\n  openNode(kind) {\n    /** @type Node */\n    const node = { kind, children: [] };\n    this.add(node);\n    this.stack.push(node);\n  }\n\n  closeNode() {\n    if (this.stack.length > 1) {\n      return this.stack.pop();\n    }\n    // eslint-disable-next-line no-undefined\n    return undefined;\n  }\n\n  closeAllNodes() {\n    while (this.closeNode());\n  }\n\n  toJSON() {\n    return JSON.stringify(this.rootNode, null, 4);\n  }\n\n  /**\n   * @typedef { import(\"./html_renderer\").Renderer } Renderer\n   * @param {Renderer} builder\n   */\n  walk(builder) {\n    // this does not\n    return this.constructor._walk(builder, this.rootNode);\n    // this works\n    // return TokenTree._walk(builder, this.rootNode);\n  }\n\n  /**\n   * @param {Renderer} builder\n   * @param {Node} node\n   */\n  static _walk(builder, node) {\n    if (typeof node === \"string\") {\n      builder.addText(node);\n    } else if (node.children) {\n      builder.openNode(node);\n      node.children.forEach((child) => this._walk(builder, child));\n      builder.closeNode(node);\n    }\n    return builder;\n  }\n\n  /**\n   * @param {Node} node\n   */\n  static _collapse(node) {\n    if (typeof node === \"string\") return;\n    if (!node.children) return;\n\n    if (node.children.every(el => typeof el === \"string\")) {\n      // node.text = node.children.join(\"\");\n      // delete node.children;\n      node.children = [node.children.join(\"\")];\n    } else {\n      node.children.forEach((child) => {\n        TokenTree._collapse(child);\n      });\n    }\n  }\n}\n\n/**\n  Currently this is all private API, but this is the minimal API necessary\n  that an Emitter must implement to fully support the parser.\n\n  Minimal interface:\n\n  - addKeyword(text, kind)\n  - addText(text)\n  - addSublanguage(emitter, subLanguageName)\n  - finalize()\n  - openNode(kind)\n  - closeNode()\n  - closeAllNodes()\n  - toHTML()\n\n*/\n\n/**\n * @implements {Emitter}\n */\nclass TokenTreeEmitter extends TokenTree {\n  /**\n   * @param {*} options\n   */\n  constructor(options) {\n    super();\n    this.options = options;\n  }\n\n  /**\n   * @param {string} text\n   * @param {string} kind\n   */\n  addKeyword(text, kind) {\n    if (text === \"\") { return; }\n\n    this.openNode(kind);\n    this.addText(text);\n    this.closeNode();\n  }\n\n  /**\n   * @param {string} text\n   */\n  addText(text) {\n    if (text === \"\") { return; }\n\n    this.add(text);\n  }\n\n  /**\n   * @param {Emitter & {root: DataNode}} emitter\n   * @param {string} name\n   */\n  addSublanguage(emitter, name) {\n    /** @type DataNode */\n    const node = emitter.root;\n    node.kind = name;\n    node.sublanguage = true;\n    this.add(node);\n  }\n\n  toHTML() {\n    const renderer = new HTMLRenderer(this, this.options);\n    return renderer.value();\n  }\n\n  finalize() {\n    return true;\n  }\n}\n\n/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction lookahead(re) {\n  return concat('(?=', re, ')');\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\nfunction stripOptionsFromArgs(args) {\n  const opts = args[args.length - 1];\n\n  if (typeof opts === 'object' && opts.constructor === Object) {\n    args.splice(args.length - 1, 1);\n    return opts;\n  } else {\n    return {};\n  }\n}\n\n/**\n * Any of the passed expresssions may match\n *\n * Creates a huge this | this | that | that match\n * @param {(RegExp | string)[] } args\n * @returns {string}\n */\nfunction either(...args) {\n  const opts = stripOptionsFromArgs(args);\n  const joined = '(' +\n    (opts.capture ? \"\" : \"?:\") +\n    args.map((x) => source(x)).join(\"|\") + \")\";\n  return joined;\n}\n\n/**\n * @param {RegExp} re\n * @returns {number}\n */\nfunction countMatchGroups(re) {\n  return (new RegExp(re.toString() + '|')).exec('').length - 1;\n}\n\n/**\n * Does lexeme start with a regular expression match at the beginning\n * @param {RegExp} re\n * @param {string} lexeme\n */\nfunction startsWith(re, lexeme) {\n  const match = re && re.exec(lexeme);\n  return match && match.index === 0;\n}\n\n// BACKREF_RE matches an open parenthesis or backreference. To avoid\n// an incorrect parse, it additionally matches the following:\n// - [...] elements, where the meaning of parentheses and escapes change\n// - other escape sequences, so we do not misparse escape sequences as\n//   interesting elements\n// - non-matching or lookahead parentheses, which do not capture. These\n//   follow the '(' with a '?'.\nconst BACKREF_RE = /\\[(?:[^\\\\\\]]|\\\\.)*\\]|\\(\\??|\\\\([1-9][0-9]*)|\\\\./;\n\n// **INTERNAL** Not intended for outside usage\n// join logically computes regexps.join(separator), but fixes the\n// backreferences so they continue to match.\n// it also places each individual regular expression into it's own\n// match group, keeping track of the sequencing of those match groups\n// is currently an exercise for the caller. :-)\n/**\n * @param {(string | RegExp)[]} regexps\n * @param {{joinWith: string}} opts\n * @returns {string}\n */\nfunction _rewriteBackreferences(regexps, { joinWith }) {\n  let numCaptures = 0;\n\n  return regexps.map((regex) => {\n    numCaptures += 1;\n    const offset = numCaptures;\n    let re = source(regex);\n    let out = '';\n\n    while (re.length > 0) {\n      const match = BACKREF_RE.exec(re);\n      if (!match) {\n        out += re;\n        break;\n      }\n      out += re.substring(0, match.index);\n      re = re.substring(match.index + match[0].length);\n      if (match[0][0] === '\\\\' && match[1]) {\n        // Adjust the backreference.\n        out += '\\\\' + String(Number(match[1]) + offset);\n      } else {\n        out += match[0];\n        if (match[0] === '(') {\n          numCaptures++;\n        }\n      }\n    }\n    return out;\n  }).map(re => `(${re})`).join(joinWith);\n}\n\n/** @typedef {import('highlight.js').Mode} Mode */\n/** @typedef {import('highlight.js').ModeCallback} ModeCallback */\n\n// Common regexps\nconst MATCH_NOTHING_RE = /\\b\\B/;\nconst IDENT_RE = '[a-zA-Z]\\\\w*';\nconst UNDERSCORE_IDENT_RE = '[a-zA-Z_]\\\\w*';\nconst NUMBER_RE = '\\\\b\\\\d+(\\\\.\\\\d+)?';\nconst C_NUMBER_RE = '(-?)(\\\\b0[xX][a-fA-F0-9]+|(\\\\b\\\\d+(\\\\.\\\\d*)?|\\\\.\\\\d+)([eE][-+]?\\\\d+)?)'; // 0x..., 0..., decimal, float\nconst BINARY_NUMBER_RE = '\\\\b(0b[01]+)'; // 0b...\nconst RE_STARTERS_RE = '!|!=|!==|%|%=|&|&&|&=|\\\\*|\\\\*=|\\\\+|\\\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\\\?|\\\\[|\\\\{|\\\\(|\\\\^|\\\\^=|\\\\||\\\\|=|\\\\|\\\\||~';\n\n/**\n* @param { Partial<Mode> & {binary?: string | RegExp} } opts\n*/\nconst SHEBANG = (opts = {}) => {\n  const beginShebang = /^#![ ]*\\//;\n  if (opts.binary) {\n    opts.begin = concat(\n      beginShebang,\n      /.*\\b/,\n      opts.binary,\n      /\\b.*/);\n  }\n  return inherit$1({\n    scope: 'meta',\n    begin: beginShebang,\n    end: /$/,\n    relevance: 0,\n    /** @type {ModeCallback} */\n    \"on:begin\": (m, resp) => {\n      if (m.index !== 0) resp.ignoreMatch();\n    }\n  }, opts);\n};\n\n// Common modes\nconst BACKSLASH_ESCAPE = {\n  begin: '\\\\\\\\[\\\\s\\\\S]', relevance: 0\n};\nconst APOS_STRING_MODE = {\n  scope: 'string',\n  begin: '\\'',\n  end: '\\'',\n  illegal: '\\\\n',\n  contains: [BACKSLASH_ESCAPE]\n};\nconst QUOTE_STRING_MODE = {\n  scope: 'string',\n  begin: '\"',\n  end: '\"',\n  illegal: '\\\\n',\n  contains: [BACKSLASH_ESCAPE]\n};\nconst PHRASAL_WORDS_MODE = {\n  begin: /\\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|they|like|more)\\b/\n};\n/**\n * Creates a comment mode\n *\n * @param {string | RegExp} begin\n * @param {string | RegExp} end\n * @param {Mode | {}} [modeOptions]\n * @returns {Partial<Mode>}\n */\nconst COMMENT = function(begin, end, modeOptions = {}) {\n  const mode = inherit$1(\n    {\n      scope: 'comment',\n      begin,\n      end,\n      contains: []\n    },\n    modeOptions\n  );\n  mode.contains.push({\n    scope: 'doctag',\n    // hack to avoid the space from being included. the space is necessary to\n    // match here to prevent the plain text rule below from gobbling up doctags\n    begin: '[ ]*(?=(TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):)',\n    end: /(TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):/,\n    excludeBegin: true,\n    relevance: 0\n  });\n  const ENGLISH_WORD = either(\n    // list of common 1 and 2 letter words in English\n    \"I\",\n    \"a\",\n    \"is\",\n    \"so\",\n    \"us\",\n    \"to\",\n    \"at\",\n    \"if\",\n    \"in\",\n    \"it\",\n    \"on\",\n    // note: this is not an exhaustive list of contractions, just popular ones\n    /[A-Za-z]+['](d|ve|re|ll|t|s|n)/, // contractions - can't we'd they're let's, etc\n    /[A-Za-z]+[-][a-z]+/, // `no-way`, etc.\n    /[A-Za-z][a-z]{2,}/ // allow capitalized words at beginning of sentences\n  );\n  // looking like plain text, more likely to be a comment\n  mode.contains.push(\n    {\n      // TODO: how to include \", (, ) without breaking grammars that use these for\n      // comment delimiters?\n      // begin: /[ ]+([()\"]?([A-Za-z'-]{3,}|is|a|I|so|us|[tT][oO]|at|if|in|it|on)[.]?[()\":]?([.][ ]|[ ]|\\))){3}/\n      // ---\n\n      // this tries to find sequences of 3 english words in a row (without any\n      // \"programming\" type syntax) this gives us a strong signal that we've\n      // TRULY found a comment - vs perhaps scanning with the wrong language.\n      // It's possible to find something that LOOKS like the start of the\n      // comment - but then if there is no readable text - good chance it is a\n      // false match and not a comment.\n      //\n      // for a visual example please see:\n      // https://github.com/highlightjs/highlight.js/issues/2827\n\n      begin: concat(\n        /[ ]+/, // necessary to prevent us gobbling up doctags like /* @author Bob Mcgill */\n        '(',\n        ENGLISH_WORD,\n        /[.]?[:]?([.][ ]|[ ])/,\n        '){3}') // look for 3 words in a row\n    }\n  );\n  return mode;\n};\nconst C_LINE_COMMENT_MODE = COMMENT('//', '$');\nconst C_BLOCK_COMMENT_MODE = COMMENT('/\\\\*', '\\\\*/');\nconst HASH_COMMENT_MODE = COMMENT('#', '$');\nconst NUMBER_MODE = {\n  scope: 'number',\n  begin: NUMBER_RE,\n  relevance: 0\n};\nconst C_NUMBER_MODE = {\n  scope: 'number',\n  begin: C_NUMBER_RE,\n  relevance: 0\n};\nconst BINARY_NUMBER_MODE = {\n  scope: 'number',\n  begin: BINARY_NUMBER_RE,\n  relevance: 0\n};\nconst REGEXP_MODE = {\n  // this outer rule makes sure we actually have a WHOLE regex and not simply\n  // an expression such as:\n  //\n  //     3 / something\n  //\n  // (which will then blow up when regex's `illegal` sees the newline)\n  begin: /(?=\\/[^/\\n]*\\/)/,\n  contains: [{\n    scope: 'regexp',\n    begin: /\\//,\n    end: /\\/[gimuy]*/,\n    illegal: /\\n/,\n    contains: [\n      BACKSLASH_ESCAPE,\n      {\n        begin: /\\[/,\n        end: /\\]/,\n        relevance: 0,\n        contains: [BACKSLASH_ESCAPE]\n      }\n    ]\n  }]\n};\nconst TITLE_MODE = {\n  scope: 'title',\n  begin: IDENT_RE,\n  relevance: 0\n};\nconst UNDERSCORE_TITLE_MODE = {\n  scope: 'title',\n  begin: UNDERSCORE_IDENT_RE,\n  relevance: 0\n};\nconst METHOD_GUARD = {\n  // excludes method names from keyword processing\n  begin: '\\\\.\\\\s*' + UNDERSCORE_IDENT_RE,\n  relevance: 0\n};\n\n/**\n * Adds end same as begin mechanics to a mode\n *\n * Your mode must include at least a single () match group as that first match\n * group is what is used for comparison\n * @param {Partial<Mode>} mode\n */\nconst END_SAME_AS_BEGIN = function(mode) {\n  return Object.assign(mode,\n    {\n      /** @type {ModeCallback} */\n      'on:begin': (m, resp) => { resp.data._beginMatch = m[1]; },\n      /** @type {ModeCallback} */\n      'on:end': (m, resp) => { if (resp.data._beginMatch !== m[1]) resp.ignoreMatch(); }\n    });\n};\n\nvar MODES = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    MATCH_NOTHING_RE: MATCH_NOTHING_RE,\n    IDENT_RE: IDENT_RE,\n    UNDERSCORE_IDENT_RE: UNDERSCORE_IDENT_RE,\n    NUMBER_RE: NUMBER_RE,\n    C_NUMBER_RE: C_NUMBER_RE,\n    BINARY_NUMBER_RE: BINARY_NUMBER_RE,\n    RE_STARTERS_RE: RE_STARTERS_RE,\n    SHEBANG: SHEBANG,\n    BACKSLASH_ESCAPE: BACKSLASH_ESCAPE,\n    APOS_STRING_MODE: APOS_STRING_MODE,\n    QUOTE_STRING_MODE: QUOTE_STRING_MODE,\n    PHRASAL_WORDS_MODE: PHRASAL_WORDS_MODE,\n    COMMENT: COMMENT,\n    C_LINE_COMMENT_MODE: C_LINE_COMMENT_MODE,\n    C_BLOCK_COMMENT_MODE: C_BLOCK_COMMENT_MODE,\n    HASH_COMMENT_MODE: HASH_COMMENT_MODE,\n    NUMBER_MODE: NUMBER_MODE,\n    C_NUMBER_MODE: C_NUMBER_MODE,\n    BINARY_NUMBER_MODE: BINARY_NUMBER_MODE,\n    REGEXP_MODE: REGEXP_MODE,\n    TITLE_MODE: TITLE_MODE,\n    UNDERSCORE_TITLE_MODE: UNDERSCORE_TITLE_MODE,\n    METHOD_GUARD: METHOD_GUARD,\n    END_SAME_AS_BEGIN: END_SAME_AS_BEGIN\n});\n\n/**\n@typedef {import('highlight.js').CallbackResponse} CallbackResponse\n@typedef {import('highlight.js').CompilerExt} CompilerExt\n*/\n\n// Grammar extensions / plugins\n// See: https://github.com/highlightjs/highlight.js/issues/2833\n\n// Grammar extensions allow \"syntactic sugar\" to be added to the grammar modes\n// without requiring any underlying changes to the compiler internals.\n\n// `compileMatch` being the perfect small example of now allowing a grammar\n// author to write `match` when they desire to match a single expression rather\n// than being forced to use `begin`.  The extension then just moves `match` into\n// `begin` when it runs.  Ie, no features have been added, but we've just made\n// the experience of writing (and reading grammars) a little bit nicer.\n\n// ------\n\n// TODO: We need negative look-behind support to do this properly\n/**\n * Skip a match if it has a preceding dot\n *\n * This is used for `beginKeywords` to prevent matching expressions such as\n * `bob.keyword.do()`. The mode compiler automatically wires this up as a\n * special _internal_ 'on:begin' callback for modes with `beginKeywords`\n * @param {RegExpMatchArray} match\n * @param {CallbackResponse} response\n */\nfunction skipIfHasPrecedingDot(match, response) {\n  const before = match.input[match.index - 1];\n  if (before === \".\") {\n    response.ignoreMatch();\n  }\n}\n\n/**\n *\n * @type {CompilerExt}\n */\nfunction scopeClassName(mode, _parent) {\n  // eslint-disable-next-line no-undefined\n  if (mode.className !== undefined) {\n    mode.scope = mode.className;\n    delete mode.className;\n  }\n}\n\n/**\n * `beginKeywords` syntactic sugar\n * @type {CompilerExt}\n */\nfunction beginKeywords(mode, parent) {\n  if (!parent) return;\n  if (!mode.beginKeywords) return;\n\n  // for languages with keywords that include non-word characters checking for\n  // a word boundary is not sufficient, so instead we check for a word boundary\n  // or whitespace - this does no harm in any case since our keyword engine\n  // doesn't allow spaces in keywords anyways and we still check for the boundary\n  // first\n  mode.begin = '\\\\b(' + mode.beginKeywords.split(' ').join('|') + ')(?!\\\\.)(?=\\\\b|\\\\s)';\n  mode.__beforeBegin = skipIfHasPrecedingDot;\n  mode.keywords = mode.keywords || mode.beginKeywords;\n  delete mode.beginKeywords;\n\n  // prevents double relevance, the keywords themselves provide\n  // relevance, the mode doesn't need to double it\n  // eslint-disable-next-line no-undefined\n  if (mode.relevance === undefined) mode.relevance = 0;\n}\n\n/**\n * Allow `illegal` to contain an array of illegal values\n * @type {CompilerExt}\n */\nfunction compileIllegal(mode, _parent) {\n  if (!Array.isArray(mode.illegal)) return;\n\n  mode.illegal = either(...mode.illegal);\n}\n\n/**\n * `match` to match a single expression for readability\n * @type {CompilerExt}\n */\nfunction compileMatch(mode, _parent) {\n  if (!mode.match) return;\n  if (mode.begin || mode.end) throw new Error(\"begin & end are not supported with match\");\n\n  mode.begin = mode.match;\n  delete mode.match;\n}\n\n/**\n * provides the default 1 relevance to all modes\n * @type {CompilerExt}\n */\nfunction compileRelevance(mode, _parent) {\n  // eslint-disable-next-line no-undefined\n  if (mode.relevance === undefined) mode.relevance = 1;\n}\n\n// allow beforeMatch to act as a \"qualifier\" for the match\n// the full match begin must be [beforeMatch][begin]\nconst beforeMatchExt = (mode, parent) => {\n  if (!mode.beforeMatch) return;\n  // starts conflicts with endsParent which we need to make sure the child\n  // rule is not matched multiple times\n  if (mode.starts) throw new Error(\"beforeMatch cannot be used with starts\");\n\n  const originalMode = Object.assign({}, mode);\n  Object.keys(mode).forEach((key) => { delete mode[key]; });\n\n  mode.keywords = originalMode.keywords;\n  mode.begin = concat(originalMode.beforeMatch, lookahead(originalMode.begin));\n  mode.starts = {\n    relevance: 0,\n    contains: [\n      Object.assign(originalMode, { endsParent: true })\n    ]\n  };\n  mode.relevance = 0;\n\n  delete originalMode.beforeMatch;\n};\n\n// keywords that should have no default relevance value\nconst COMMON_KEYWORDS = [\n  'of',\n  'and',\n  'for',\n  'in',\n  'not',\n  'or',\n  'if',\n  'then',\n  'parent', // common variable name\n  'list', // common variable name\n  'value' // common variable name\n];\n\nconst DEFAULT_KEYWORD_SCOPE = \"keyword\";\n\n/**\n * Given raw keywords from a language definition, compile them.\n *\n * @param {string | Record<string,string|string[]> | Array<string>} rawKeywords\n * @param {boolean} caseInsensitive\n */\nfunction compileKeywords(rawKeywords, caseInsensitive, scopeName = DEFAULT_KEYWORD_SCOPE) {\n  /** @type KeywordDict */\n  const compiledKeywords = Object.create(null);\n\n  // input can be a string of keywords, an array of keywords, or a object with\n  // named keys representing scopeName (which can then point to a string or array)\n  if (typeof rawKeywords === 'string') {\n    compileList(scopeName, rawKeywords.split(\" \"));\n  } else if (Array.isArray(rawKeywords)) {\n    compileList(scopeName, rawKeywords);\n  } else {\n    Object.keys(rawKeywords).forEach(function(scopeName) {\n      // collapse all our objects back into the parent object\n      Object.assign(\n        compiledKeywords,\n        compileKeywords(rawKeywords[scopeName], caseInsensitive, scopeName)\n      );\n    });\n  }\n  return compiledKeywords;\n\n  // ---\n\n  /**\n   * Compiles an individual list of keywords\n   *\n   * Ex: \"for if when while|5\"\n   *\n   * @param {string} scopeName\n   * @param {Array<string>} keywordList\n   */\n  function compileList(scopeName, keywordList) {\n    if (caseInsensitive) {\n      keywordList = keywordList.map(x => x.toLowerCase());\n    }\n    keywordList.forEach(function(keyword) {\n      const pair = keyword.split('|');\n      compiledKeywords[pair[0]] = [scopeName, scoreForKeyword(pair[0], pair[1])];\n    });\n  }\n}\n\n/**\n * Returns the proper score for a given keyword\n *\n * Also takes into account comment keywords, which will be scored 0 UNLESS\n * another score has been manually assigned.\n * @param {string} keyword\n * @param {string} [providedScore]\n */\nfunction scoreForKeyword(keyword, providedScore) {\n  // manual scores always win over common keywords\n  // so you can force a score of 1 if you really insist\n  if (providedScore) {\n    return Number(providedScore);\n  }\n\n  return commonKeyword(keyword) ? 0 : 1;\n}\n\n/**\n * Determines if a given keyword is common or not\n *\n * @param {string} keyword */\nfunction commonKeyword(keyword) {\n  return COMMON_KEYWORDS.includes(keyword.toLowerCase());\n}\n\n/*\n\nFor the reasoning behind this please see:\nhttps://github.com/highlightjs/highlight.js/issues/2880#issuecomment-747275419\n\n*/\n\n/**\n * @type {Record<string, boolean>}\n */\nconst seenDeprecations = {};\n\n/**\n * @param {string} message\n */\nconst error = (message) => {\n  console.error(message);\n};\n\n/**\n * @param {string} message\n * @param {any} args\n */\nconst warn = (message, ...args) => {\n  console.log(`WARN: ${message}`, ...args);\n};\n\n/**\n * @param {string} version\n * @param {string} message\n */\nconst deprecated = (version, message) => {\n  if (seenDeprecations[`${version}/${message}`]) return;\n\n  console.log(`Deprecated as of ${version}. ${message}`);\n  seenDeprecations[`${version}/${message}`] = true;\n};\n\n/* eslint-disable no-throw-literal */\n\n/**\n@typedef {import('highlight.js').CompiledMode} CompiledMode\n*/\n\nconst MultiClassError = new Error();\n\n/**\n * Renumbers labeled scope names to account for additional inner match\n * groups that otherwise would break everything.\n *\n * Lets say we 3 match scopes:\n *\n *   { 1 => ..., 2 => ..., 3 => ... }\n *\n * So what we need is a clean match like this:\n *\n *   (a)(b)(c) => [ \"a\", \"b\", \"c\" ]\n *\n * But this falls apart with inner match groups:\n *\n * (a)(((b)))(c) => [\"a\", \"b\", \"b\", \"b\", \"c\" ]\n *\n * Our scopes are now \"out of alignment\" and we're repeating `b` 3 times.\n * What needs to happen is the numbers are remapped:\n *\n *   { 1 => ..., 2 => ..., 5 => ... }\n *\n * We also need to know that the ONLY groups that should be output\n * are 1, 2, and 5.  This function handles this behavior.\n *\n * @param {CompiledMode} mode\n * @param {Array<RegExp>} regexes\n * @param {{key: \"beginScope\"|\"endScope\"}} opts\n */\nfunction remapScopeNames(mode, regexes, { key }) {\n  let offset = 0;\n  const scopeNames = mode[key];\n  /** @type Record<number,boolean> */\n  const emit = {};\n  /** @type Record<number,string> */\n  const positions = {};\n\n  for (let i = 1; i <= regexes.length; i++) {\n    positions[i + offset] = scopeNames[i];\n    emit[i + offset] = true;\n    offset += countMatchGroups(regexes[i - 1]);\n  }\n  // we use _emit to keep track of which match groups are \"top-level\" to avoid double\n  // output from inside match groups\n  mode[key] = positions;\n  mode[key]._emit = emit;\n  mode[key]._multi = true;\n}\n\n/**\n * @param {CompiledMode} mode\n */\nfunction beginMultiClass(mode) {\n  if (!Array.isArray(mode.begin)) return;\n\n  if (mode.skip || mode.excludeBegin || mode.returnBegin) {\n    error(\"skip, excludeBegin, returnBegin not compatible with beginScope: {}\");\n    throw MultiClassError;\n  }\n\n  if (typeof mode.beginScope !== \"object\" || mode.beginScope === null) {\n    error(\"beginScope must be object\");\n    throw MultiClassError;\n  }\n\n  remapScopeNames(mode, mode.begin, {key: \"beginScope\"});\n  mode.begin = _rewriteBackreferences(mode.begin, { joinWith: \"\" });\n}\n\n/**\n * @param {CompiledMode} mode\n */\nfunction endMultiClass(mode) {\n  if (!Array.isArray(mode.end)) return;\n\n  if (mode.skip || mode.excludeEnd || mode.returnEnd) {\n    error(\"skip, excludeEnd, returnEnd not compatible with endScope: {}\");\n    throw MultiClassError;\n  }\n\n  if (typeof mode.endScope !== \"object\" || mode.endScope === null) {\n    error(\"endScope must be object\");\n    throw MultiClassError;\n  }\n\n  remapScopeNames(mode, mode.end, {key: \"endScope\"});\n  mode.end = _rewriteBackreferences(mode.end, { joinWith: \"\" });\n}\n\n/**\n * this exists only to allow `scope: {}` to be used beside `match:`\n * Otherwise `beginScope` would necessary and that would look weird\n\n  {\n    match: [ /def/, /\\w+/ ]\n    scope: { 1: \"keyword\" , 2: \"title\" }\n  }\n\n * @param {CompiledMode} mode\n */\nfunction scopeSugar(mode) {\n  if (mode.scope && typeof mode.scope === \"object\" && mode.scope !== null) {\n    mode.beginScope = mode.scope;\n    delete mode.scope;\n  }\n}\n\n/**\n * @param {CompiledMode} mode\n */\nfunction MultiClass(mode) {\n  scopeSugar(mode);\n\n  if (typeof mode.beginScope === \"string\") {\n    mode.beginScope = { _wrap: mode.beginScope };\n  }\n  if (typeof mode.endScope === \"string\") {\n    mode.endScope = { _wrap: mode.endScope };\n  }\n\n  beginMultiClass(mode);\n  endMultiClass(mode);\n}\n\n/**\n@typedef {import('highlight.js').Mode} Mode\n@typedef {import('highlight.js').CompiledMode} CompiledMode\n@typedef {import('highlight.js').Language} Language\n@typedef {import('highlight.js').HLJSPlugin} HLJSPlugin\n@typedef {import('highlight.js').CompiledLanguage} CompiledLanguage\n*/\n\n// compilation\n\n/**\n * Compiles a language definition result\n *\n * Given the raw result of a language definition (Language), compiles this so\n * that it is ready for highlighting code.\n * @param {Language} language\n * @returns {CompiledLanguage}\n */\nfunction compileLanguage(language) {\n  /**\n   * Builds a regex with the case sensitivity of the current language\n   *\n   * @param {RegExp | string} value\n   * @param {boolean} [global]\n   */\n  function langRe(value, global) {\n    return new RegExp(\n      source(value),\n      'm' + (language.case_insensitive ? 'i' : '') + (global ? 'g' : '')\n    );\n  }\n\n  /**\n    Stores multiple regular expressions and allows you to quickly search for\n    them all in a string simultaneously - returning the first match.  It does\n    this by creating a huge (a|b|c) regex - each individual item wrapped with ()\n    and joined by `|` - using match groups to track position.  When a match is\n    found checking which position in the array has content allows us to figure\n    out which of the original regexes / match groups triggered the match.\n\n    The match object itself (the result of `Regex.exec`) is returned but also\n    enhanced by merging in any meta-data that was registered with the regex.\n    This is how we keep track of which mode matched, and what type of rule\n    (`illegal`, `begin`, end, etc).\n  */\n  class MultiRegex {\n    constructor() {\n      this.matchIndexes = {};\n      // @ts-ignore\n      this.regexes = [];\n      this.matchAt = 1;\n      this.position = 0;\n    }\n\n    // @ts-ignore\n    addRule(re, opts) {\n      opts.position = this.position++;\n      // @ts-ignore\n      this.matchIndexes[this.matchAt] = opts;\n      this.regexes.push([opts, re]);\n      this.matchAt += countMatchGroups(re) + 1;\n    }\n\n    compile() {\n      if (this.regexes.length === 0) {\n        // avoids the need to check length every time exec is called\n        // @ts-ignore\n        this.exec = () => null;\n      }\n      const terminators = this.regexes.map(el => el[1]);\n      this.matcherRe = langRe(_rewriteBackreferences(terminators, { joinWith: '|' }), true);\n      this.lastIndex = 0;\n    }\n\n    /** @param {string} s */\n    exec(s) {\n      this.matcherRe.lastIndex = this.lastIndex;\n      const match = this.matcherRe.exec(s);\n      if (!match) { return null; }\n\n      // eslint-disable-next-line no-undefined\n      const i = match.findIndex((el, i) => i > 0 && el !== undefined);\n      // @ts-ignore\n      const matchData = this.matchIndexes[i];\n      // trim off any earlier non-relevant match groups (ie, the other regex\n      // match groups that make up the multi-matcher)\n      match.splice(0, i);\n\n      return Object.assign(match, matchData);\n    }\n  }\n\n  /*\n    Created to solve the key deficiently with MultiRegex - there is no way to\n    test for multiple matches at a single location.  Why would we need to do\n    that?  In the future a more dynamic engine will allow certain matches to be\n    ignored.  An example: if we matched say the 3rd regex in a large group but\n    decided to ignore it - we'd need to started testing again at the 4th\n    regex... but MultiRegex itself gives us no real way to do that.\n\n    So what this class creates MultiRegexs on the fly for whatever search\n    position they are needed.\n\n    NOTE: These additional MultiRegex objects are created dynamically.  For most\n    grammars most of the time we will never actually need anything more than the\n    first MultiRegex - so this shouldn't have too much overhead.\n\n    Say this is our search group, and we match regex3, but wish to ignore it.\n\n      regex1 | regex2 | regex3 | regex4 | regex5    ' ie, startAt = 0\n\n    What we need is a new MultiRegex that only includes the remaining\n    possibilities:\n\n      regex4 | regex5                               ' ie, startAt = 3\n\n    This class wraps all that complexity up in a simple API... `startAt` decides\n    where in the array of expressions to start doing the matching. It\n    auto-increments, so if a match is found at position 2, then startAt will be\n    set to 3.  If the end is reached startAt will return to 0.\n\n    MOST of the time the parser will be setting startAt manually to 0.\n  */\n  class ResumableMultiRegex {\n    constructor() {\n      // @ts-ignore\n      this.rules = [];\n      // @ts-ignore\n      this.multiRegexes = [];\n      this.count = 0;\n\n      this.lastIndex = 0;\n      this.regexIndex = 0;\n    }\n\n    // @ts-ignore\n    getMatcher(index) {\n      if (this.multiRegexes[index]) return this.multiRegexes[index];\n\n      const matcher = new MultiRegex();\n      this.rules.slice(index).forEach(([re, opts]) => matcher.addRule(re, opts));\n      matcher.compile();\n      this.multiRegexes[index] = matcher;\n      return matcher;\n    }\n\n    resumingScanAtSamePosition() {\n      return this.regexIndex !== 0;\n    }\n\n    considerAll() {\n      this.regexIndex = 0;\n    }\n\n    // @ts-ignore\n    addRule(re, opts) {\n      this.rules.push([re, opts]);\n      if (opts.type === \"begin\") this.count++;\n    }\n\n    /** @param {string} s */\n    exec(s) {\n      const m = this.getMatcher(this.regexIndex);\n      m.lastIndex = this.lastIndex;\n      let result = m.exec(s);\n\n      // The following is because we have no easy way to say \"resume scanning at the\n      // existing position but also skip the current rule ONLY\". What happens is\n      // all prior rules are also skipped which can result in matching the wrong\n      // thing. Example of matching \"booger\":\n\n      // our matcher is [string, \"booger\", number]\n      //\n      // ....booger....\n\n      // if \"booger\" is ignored then we'd really need a regex to scan from the\n      // SAME position for only: [string, number] but ignoring \"booger\" (if it\n      // was the first match), a simple resume would scan ahead who knows how\n      // far looking only for \"number\", ignoring potential string matches (or\n      // future \"booger\" matches that might be valid.)\n\n      // So what we do: We execute two matchers, one resuming at the same\n      // position, but the second full matcher starting at the position after:\n\n      //     /--- resume first regex match here (for [number])\n      //     |/---- full match here for [string, \"booger\", number]\n      //     vv\n      // ....booger....\n\n      // Which ever results in a match first is then used. So this 3-4 step\n      // process essentially allows us to say \"match at this position, excluding\n      // a prior rule that was ignored\".\n      //\n      // 1. Match \"booger\" first, ignore. Also proves that [string] does non match.\n      // 2. Resume matching for [number]\n      // 3. Match at index + 1 for [string, \"booger\", number]\n      // 4. If #2 and #3 result in matches, which came first?\n      if (this.resumingScanAtSamePosition()) {\n        if (result && result.index === this.lastIndex) ; else { // use the second matcher result\n          const m2 = this.getMatcher(0);\n          m2.lastIndex = this.lastIndex + 1;\n          result = m2.exec(s);\n        }\n      }\n\n      if (result) {\n        this.regexIndex += result.position + 1;\n        if (this.regexIndex === this.count) {\n          // wrap-around to considering all matches again\n          this.considerAll();\n        }\n      }\n\n      return result;\n    }\n  }\n\n  /**\n   * Given a mode, builds a huge ResumableMultiRegex that can be used to walk\n   * the content and find matches.\n   *\n   * @param {CompiledMode} mode\n   * @returns {ResumableMultiRegex}\n   */\n  function buildModeRegex(mode) {\n    const mm = new ResumableMultiRegex();\n\n    mode.contains.forEach(term => mm.addRule(term.begin, { rule: term, type: \"begin\" }));\n\n    if (mode.terminatorEnd) {\n      mm.addRule(mode.terminatorEnd, { type: \"end\" });\n    }\n    if (mode.illegal) {\n      mm.addRule(mode.illegal, { type: \"illegal\" });\n    }\n\n    return mm;\n  }\n\n  /** skip vs abort vs ignore\n   *\n   * @skip   - The mode is still entered and exited normally (and contains rules apply),\n   *           but all content is held and added to the parent buffer rather than being\n   *           output when the mode ends.  Mostly used with `sublanguage` to build up\n   *           a single large buffer than can be parsed by sublanguage.\n   *\n   *             - The mode begin ands ends normally.\n   *             - Content matched is added to the parent mode buffer.\n   *             - The parser cursor is moved forward normally.\n   *\n   * @abort  - A hack placeholder until we have ignore.  Aborts the mode (as if it\n   *           never matched) but DOES NOT continue to match subsequent `contains`\n   *           modes.  Abort is bad/suboptimal because it can result in modes\n   *           farther down not getting applied because an earlier rule eats the\n   *           content but then aborts.\n   *\n   *             - The mode does not begin.\n   *             - Content matched by `begin` is added to the mode buffer.\n   *             - The parser cursor is moved forward accordingly.\n   *\n   * @ignore - Ignores the mode (as if it never matched) and continues to match any\n   *           subsequent `contains` modes.  Ignore isn't technically possible with\n   *           the current parser implementation.\n   *\n   *             - The mode does not begin.\n   *             - Content matched by `begin` is ignored.\n   *             - The parser cursor is not moved forward.\n   */\n\n  /**\n   * Compiles an individual mode\n   *\n   * This can raise an error if the mode contains certain detectable known logic\n   * issues.\n   * @param {Mode} mode\n   * @param {CompiledMode | null} [parent]\n   * @returns {CompiledMode | never}\n   */\n  function compileMode(mode, parent) {\n    const cmode = /** @type CompiledMode */ (mode);\n    if (mode.isCompiled) return cmode;\n\n    [\n      scopeClassName,\n      // do this early so compiler extensions generally don't have to worry about\n      // the distinction between match/begin\n      compileMatch,\n      MultiClass,\n      beforeMatchExt\n    ].forEach(ext => ext(mode, parent));\n\n    language.compilerExtensions.forEach(ext => ext(mode, parent));\n\n    // __beforeBegin is considered private API, internal use only\n    mode.__beforeBegin = null;\n\n    [\n      beginKeywords,\n      // do this later so compiler extensions that come earlier have access to the\n      // raw array if they wanted to perhaps manipulate it, etc.\n      compileIllegal,\n      // default to 1 relevance if not specified\n      compileRelevance\n    ].forEach(ext => ext(mode, parent));\n\n    mode.isCompiled = true;\n\n    let keywordPattern = null;\n    if (typeof mode.keywords === \"object\" && mode.keywords.$pattern) {\n      // we need a copy because keywords might be compiled multiple times\n      // so we can't go deleting $pattern from the original on the first\n      // pass\n      mode.keywords = Object.assign({}, mode.keywords);\n      keywordPattern = mode.keywords.$pattern;\n      delete mode.keywords.$pattern;\n    }\n    keywordPattern = keywordPattern || /\\w+/;\n\n    if (mode.keywords) {\n      mode.keywords = compileKeywords(mode.keywords, language.case_insensitive);\n    }\n\n    cmode.keywordPatternRe = langRe(keywordPattern, true);\n\n    if (parent) {\n      if (!mode.begin) mode.begin = /\\B|\\b/;\n      cmode.beginRe = langRe(mode.begin);\n      if (!mode.end && !mode.endsWithParent) mode.end = /\\B|\\b/;\n      if (mode.end) cmode.endRe = langRe(mode.end);\n      cmode.terminatorEnd = source(mode.end) || '';\n      if (mode.endsWithParent && parent.terminatorEnd) {\n        cmode.terminatorEnd += (mode.end ? '|' : '') + parent.terminatorEnd;\n      }\n    }\n    if (mode.illegal) cmode.illegalRe = langRe(/** @type {RegExp | string} */ (mode.illegal));\n    if (!mode.contains) mode.contains = [];\n\n    mode.contains = [].concat(...mode.contains.map(function(c) {\n      return expandOrCloneMode(c === 'self' ? mode : c);\n    }));\n    mode.contains.forEach(function(c) { compileMode(/** @type Mode */ (c), cmode); });\n\n    if (mode.starts) {\n      compileMode(mode.starts, parent);\n    }\n\n    cmode.matcher = buildModeRegex(cmode);\n    return cmode;\n  }\n\n  if (!language.compilerExtensions) language.compilerExtensions = [];\n\n  // self is not valid at the top-level\n  if (language.contains && language.contains.includes('self')) {\n    throw new Error(\"ERR: contains `self` is not supported at the top-level of a language.  See documentation.\");\n  }\n\n  // we need a null object, which inherit will guarantee\n  language.classNameAliases = inherit$1(language.classNameAliases || {});\n\n  return compileMode(/** @type Mode */ (language));\n}\n\n/**\n * Determines if a mode has a dependency on it's parent or not\n *\n * If a mode does have a parent dependency then often we need to clone it if\n * it's used in multiple places so that each copy points to the correct parent,\n * where-as modes without a parent can often safely be re-used at the bottom of\n * a mode chain.\n *\n * @param {Mode | null} mode\n * @returns {boolean} - is there a dependency on the parent?\n * */\nfunction dependencyOnParent(mode) {\n  if (!mode) return false;\n\n  return mode.endsWithParent || dependencyOnParent(mode.starts);\n}\n\n/**\n * Expands a mode or clones it if necessary\n *\n * This is necessary for modes with parental dependenceis (see notes on\n * `dependencyOnParent`) and for nodes that have `variants` - which must then be\n * exploded into their own individual modes at compile time.\n *\n * @param {Mode} mode\n * @returns {Mode | Mode[]}\n * */\nfunction expandOrCloneMode(mode) {\n  if (mode.variants && !mode.cachedVariants) {\n    mode.cachedVariants = mode.variants.map(function(variant) {\n      return inherit$1(mode, { variants: null }, variant);\n    });\n  }\n\n  // EXPAND\n  // if we have variants then essentially \"replace\" the mode with the variants\n  // this happens in compileMode, where this function is called from\n  if (mode.cachedVariants) {\n    return mode.cachedVariants;\n  }\n\n  // CLONE\n  // if we have dependencies on parents then we need a unique\n  // instance of ourselves, so we can be reused with many\n  // different parents without issue\n  if (dependencyOnParent(mode)) {\n    return inherit$1(mode, { starts: mode.starts ? inherit$1(mode.starts) : null });\n  }\n\n  if (Object.isFrozen(mode)) {\n    return inherit$1(mode);\n  }\n\n  // no special dependency issues, just return ourselves\n  return mode;\n}\n\nvar version = \"11.2.0\";\n\n/*\nSyntax highlighting with language autodetection.\nhttps://highlightjs.org/\n*/\n\n/**\n@typedef {import('highlight.js').Mode} Mode\n@typedef {import('highlight.js').CompiledMode} CompiledMode\n@typedef {import('highlight.js').Language} Language\n@typedef {import('highlight.js').HLJSApi} HLJSApi\n@typedef {import('highlight.js').HLJSPlugin} HLJSPlugin\n@typedef {import('highlight.js').PluginEvent} PluginEvent\n@typedef {import('highlight.js').HLJSOptions} HLJSOptions\n@typedef {import('highlight.js').LanguageFn} LanguageFn\n@typedef {import('highlight.js').HighlightedHTMLElement} HighlightedHTMLElement\n@typedef {import('highlight.js').BeforeHighlightContext} BeforeHighlightContext\n@typedef {import('highlight.js/private').MatchType} MatchType\n@typedef {import('highlight.js/private').KeywordData} KeywordData\n@typedef {import('highlight.js/private').EnhancedMatch} EnhancedMatch\n@typedef {import('highlight.js/private').AnnotatedError} AnnotatedError\n@typedef {import('highlight.js').AutoHighlightResult} AutoHighlightResult\n@typedef {import('highlight.js').HighlightOptions} HighlightOptions\n@typedef {import('highlight.js').HighlightResult} HighlightResult\n*/\n\n\nconst escape = escapeHTML;\nconst inherit = inherit$1;\nconst NO_MATCH = Symbol(\"nomatch\");\nconst MAX_KEYWORD_HITS = 7;\n\n/**\n * @param {any} hljs - object that is extended (legacy)\n * @returns {HLJSApi}\n */\nconst HLJS = function(hljs) {\n  // Global internal variables used within the highlight.js library.\n  /** @type {Record<string, Language>} */\n  const languages = Object.create(null);\n  /** @type {Record<string, string>} */\n  const aliases = Object.create(null);\n  /** @type {HLJSPlugin[]} */\n  const plugins = [];\n\n  // safe/production mode - swallows more errors, tries to keep running\n  // even if a single syntax or parse hits a fatal error\n  let SAFE_MODE = true;\n  const LANGUAGE_NOT_FOUND = \"Could not find the language '{}', did you forget to load/include a language module?\";\n  /** @type {Language} */\n  const PLAINTEXT_LANGUAGE = { disableAutodetect: true, name: 'Plain text', contains: [] };\n\n  // Global options used when within external APIs. This is modified when\n  // calling the `hljs.configure` function.\n  /** @type HLJSOptions */\n  let options = {\n    ignoreUnescapedHTML: false,\n    noHighlightRe: /^(no-?highlight)$/i,\n    languageDetectRe: /\\blang(?:uage)?-([\\w-]+)\\b/i,\n    classPrefix: 'hljs-',\n    cssSelector: 'pre code',\n    languages: null,\n    // beta configuration options, subject to change, welcome to discuss\n    // https://github.com/highlightjs/highlight.js/issues/1086\n    __emitter: TokenTreeEmitter\n  };\n\n  /* Utility functions */\n\n  /**\n   * Tests a language name to see if highlighting should be skipped\n   * @param {string} languageName\n   */\n  function shouldNotHighlight(languageName) {\n    return options.noHighlightRe.test(languageName);\n  }\n\n  /**\n   * @param {HighlightedHTMLElement} block - the HTML element to determine language for\n   */\n  function blockLanguage(block) {\n    let classes = block.className + ' ';\n\n    classes += block.parentNode ? block.parentNode.className : '';\n\n    // language-* takes precedence over non-prefixed class names.\n    const match = options.languageDetectRe.exec(classes);\n    if (match) {\n      const language = getLanguage(match[1]);\n      if (!language) {\n        warn(LANGUAGE_NOT_FOUND.replace(\"{}\", match[1]));\n        warn(\"Falling back to no-highlight mode for this block.\", block);\n      }\n      return language ? match[1] : 'no-highlight';\n    }\n\n    return classes\n      .split(/\\s+/)\n      .find((_class) => shouldNotHighlight(_class) || getLanguage(_class));\n  }\n\n  /**\n   * Core highlighting function.\n   *\n   * OLD API\n   * highlight(lang, code, ignoreIllegals, continuation)\n   *\n   * NEW API\n   * highlight(code, {lang, ignoreIllegals})\n   *\n   * @param {string} codeOrLanguageName - the language to use for highlighting\n   * @param {string | HighlightOptions} optionsOrCode - the code to highlight\n   * @param {boolean} [ignoreIllegals] - whether to ignore illegal matches, default is to bail\n   *\n   * @returns {HighlightResult} Result - an object that represents the result\n   * @property {string} language - the language name\n   * @property {number} relevance - the relevance score\n   * @property {string} value - the highlighted HTML code\n   * @property {string} code - the original raw code\n   * @property {CompiledMode} top - top of the current mode stack\n   * @property {boolean} illegal - indicates whether any illegal matches were found\n  */\n  function highlight(codeOrLanguageName, optionsOrCode, ignoreIllegals) {\n    let code = \"\";\n    let languageName = \"\";\n    if (typeof optionsOrCode === \"object\") {\n      code = codeOrLanguageName;\n      ignoreIllegals = optionsOrCode.ignoreIllegals;\n      languageName = optionsOrCode.language;\n    } else {\n      // old API\n      deprecated(\"10.7.0\", \"highlight(lang, code, ...args) has been deprecated.\");\n      deprecated(\"10.7.0\", \"Please use highlight(code, options) instead.\\nhttps://github.com/highlightjs/highlight.js/issues/2277\");\n      languageName = codeOrLanguageName;\n      code = optionsOrCode;\n    }\n\n    // https://github.com/highlightjs/highlight.js/issues/3149\n    // eslint-disable-next-line no-undefined\n    if (ignoreIllegals === undefined) { ignoreIllegals = true; }\n\n    /** @type {BeforeHighlightContext} */\n    const context = {\n      code,\n      language: languageName\n    };\n    // the plugin can change the desired language or the code to be highlighted\n    // just be changing the object it was passed\n    fire(\"before:highlight\", context);\n\n    // a before plugin can usurp the result completely by providing it's own\n    // in which case we don't even need to call highlight\n    const result = context.result\n      ? context.result\n      : _highlight(context.language, context.code, ignoreIllegals);\n\n    result.code = context.code;\n    // the plugin can change anything in result to suite it\n    fire(\"after:highlight\", result);\n\n    return result;\n  }\n\n  /**\n   * private highlight that's used internally and does not fire callbacks\n   *\n   * @param {string} languageName - the language to use for highlighting\n   * @param {string} codeToHighlight - the code to highlight\n   * @param {boolean?} [ignoreIllegals] - whether to ignore illegal matches, default is to bail\n   * @param {CompiledMode?} [continuation] - current continuation mode, if any\n   * @returns {HighlightResult} - result of the highlight operation\n  */\n  function _highlight(languageName, codeToHighlight, ignoreIllegals, continuation) {\n    const keywordHits = Object.create(null);\n\n    /**\n     * Return keyword data if a match is a keyword\n     * @param {CompiledMode} mode - current mode\n     * @param {string} matchText - the textual match\n     * @returns {KeywordData | false}\n     */\n    function keywordData(mode, matchText) {\n      return mode.keywords[matchText];\n    }\n\n    function processKeywords() {\n      if (!top.keywords) {\n        emitter.addText(modeBuffer);\n        return;\n      }\n\n      let lastIndex = 0;\n      top.keywordPatternRe.lastIndex = 0;\n      let match = top.keywordPatternRe.exec(modeBuffer);\n      let buf = \"\";\n\n      while (match) {\n        buf += modeBuffer.substring(lastIndex, match.index);\n        const word = language.case_insensitive ? match[0].toLowerCase() : match[0];\n        const data = keywordData(top, word);\n        if (data) {\n          const [kind, keywordRelevance] = data;\n          emitter.addText(buf);\n          buf = \"\";\n\n          keywordHits[word] = (keywordHits[word] || 0) + 1;\n          if (keywordHits[word] <= MAX_KEYWORD_HITS) relevance += keywordRelevance;\n          if (kind.startsWith(\"_\")) {\n            // _ implied for relevance only, do not highlight\n            // by applying a class name\n            buf += match[0];\n          } else {\n            const cssClass = language.classNameAliases[kind] || kind;\n            emitter.addKeyword(match[0], cssClass);\n          }\n        } else {\n          buf += match[0];\n        }\n        lastIndex = top.keywordPatternRe.lastIndex;\n        match = top.keywordPatternRe.exec(modeBuffer);\n      }\n      buf += modeBuffer.substr(lastIndex);\n      emitter.addText(buf);\n    }\n\n    function processSubLanguage() {\n      if (modeBuffer === \"\") return;\n      /** @type HighlightResult */\n      let result = null;\n\n      if (typeof top.subLanguage === 'string') {\n        if (!languages[top.subLanguage]) {\n          emitter.addText(modeBuffer);\n          return;\n        }\n        result = _highlight(top.subLanguage, modeBuffer, true, continuations[top.subLanguage]);\n        continuations[top.subLanguage] = /** @type {CompiledMode} */ (result._top);\n      } else {\n        result = highlightAuto(modeBuffer, top.subLanguage.length ? top.subLanguage : null);\n      }\n\n      // Counting embedded language score towards the host language may be disabled\n      // with zeroing the containing mode relevance. Use case in point is Markdown that\n      // allows XML everywhere and makes every XML snippet to have a much larger Markdown\n      // score.\n      if (top.relevance > 0) {\n        relevance += result.relevance;\n      }\n      emitter.addSublanguage(result._emitter, result.language);\n    }\n\n    function processBuffer() {\n      if (top.subLanguage != null) {\n        processSubLanguage();\n      } else {\n        processKeywords();\n      }\n      modeBuffer = '';\n    }\n\n    /**\n     * @param {CompiledMode} mode\n     * @param {RegExpMatchArray} match\n     */\n    function emitMultiClass(scope, match) {\n      let i = 1;\n      // eslint-disable-next-line no-undefined\n      while (match[i] !== undefined) {\n        if (!scope._emit[i]) { i++; continue; }\n        const klass = language.classNameAliases[scope[i]] || scope[i];\n        const text = match[i];\n        if (klass) {\n          emitter.addKeyword(text, klass);\n        } else {\n          modeBuffer = text;\n          processKeywords();\n          modeBuffer = \"\";\n        }\n        i++;\n      }\n    }\n\n    /**\n     * @param {CompiledMode} mode - new mode to start\n     * @param {RegExpMatchArray} match\n     */\n    function startNewMode(mode, match) {\n      if (mode.scope && typeof mode.scope === \"string\") {\n        emitter.openNode(language.classNameAliases[mode.scope] || mode.scope);\n      }\n      if (mode.beginScope) {\n        // beginScope just wraps the begin match itself in a scope\n        if (mode.beginScope._wrap) {\n          emitter.addKeyword(modeBuffer, language.classNameAliases[mode.beginScope._wrap] || mode.beginScope._wrap);\n          modeBuffer = \"\";\n        } else if (mode.beginScope._multi) {\n          // at this point modeBuffer should just be the match\n          emitMultiClass(mode.beginScope, match);\n          modeBuffer = \"\";\n        }\n      }\n\n      top = Object.create(mode, { parent: { value: top } });\n      return top;\n    }\n\n    /**\n     * @param {CompiledMode } mode - the mode to potentially end\n     * @param {RegExpMatchArray} match - the latest match\n     * @param {string} matchPlusRemainder - match plus remainder of content\n     * @returns {CompiledMode | void} - the next mode, or if void continue on in current mode\n     */\n    function endOfMode(mode, match, matchPlusRemainder) {\n      let matched = startsWith(mode.endRe, matchPlusRemainder);\n\n      if (matched) {\n        if (mode[\"on:end\"]) {\n          const resp = new Response(mode);\n          mode[\"on:end\"](match, resp);\n          if (resp.isMatchIgnored) matched = false;\n        }\n\n        if (matched) {\n          while (mode.endsParent && mode.parent) {\n            mode = mode.parent;\n          }\n          return mode;\n        }\n      }\n      // even if on:end fires an `ignore` it's still possible\n      // that we might trigger the end node because of a parent mode\n      if (mode.endsWithParent) {\n        return endOfMode(mode.parent, match, matchPlusRemainder);\n      }\n    }\n\n    /**\n     * Handle matching but then ignoring a sequence of text\n     *\n     * @param {string} lexeme - string containing full match text\n     */\n    function doIgnore(lexeme) {\n      if (top.matcher.regexIndex === 0) {\n        // no more regexes to potentially match here, so we move the cursor forward one\n        // space\n        modeBuffer += lexeme[0];\n        return 1;\n      } else {\n        // no need to move the cursor, we still have additional regexes to try and\n        // match at this very spot\n        resumeScanAtSamePosition = true;\n        return 0;\n      }\n    }\n\n    /**\n     * Handle the start of a new potential mode match\n     *\n     * @param {EnhancedMatch} match - the current match\n     * @returns {number} how far to advance the parse cursor\n     */\n    function doBeginMatch(match) {\n      const lexeme = match[0];\n      const newMode = match.rule;\n\n      const resp = new Response(newMode);\n      // first internal before callbacks, then the public ones\n      const beforeCallbacks = [newMode.__beforeBegin, newMode[\"on:begin\"]];\n      for (const cb of beforeCallbacks) {\n        if (!cb) continue;\n        cb(match, resp);\n        if (resp.isMatchIgnored) return doIgnore(lexeme);\n      }\n\n      if (newMode.skip) {\n        modeBuffer += lexeme;\n      } else {\n        if (newMode.excludeBegin) {\n          modeBuffer += lexeme;\n        }\n        processBuffer();\n        if (!newMode.returnBegin && !newMode.excludeBegin) {\n          modeBuffer = lexeme;\n        }\n      }\n      startNewMode(newMode, match);\n      return newMode.returnBegin ? 0 : lexeme.length;\n    }\n\n    /**\n     * Handle the potential end of mode\n     *\n     * @param {RegExpMatchArray} match - the current match\n     */\n    function doEndMatch(match) {\n      const lexeme = match[0];\n      const matchPlusRemainder = codeToHighlight.substr(match.index);\n\n      const endMode = endOfMode(top, match, matchPlusRemainder);\n      if (!endMode) { return NO_MATCH; }\n\n      const origin = top;\n      if (top.endScope && top.endScope._wrap) {\n        processBuffer();\n        emitter.addKeyword(lexeme, top.endScope._wrap);\n      } else if (top.endScope && top.endScope._multi) {\n        processBuffer();\n        emitMultiClass(top.endScope, match);\n      } else if (origin.skip) {\n        modeBuffer += lexeme;\n      } else {\n        if (!(origin.returnEnd || origin.excludeEnd)) {\n          modeBuffer += lexeme;\n        }\n        processBuffer();\n        if (origin.excludeEnd) {\n          modeBuffer = lexeme;\n        }\n      }\n      do {\n        if (top.scope) {\n          emitter.closeNode();\n        }\n        if (!top.skip && !top.subLanguage) {\n          relevance += top.relevance;\n        }\n        top = top.parent;\n      } while (top !== endMode.parent);\n      if (endMode.starts) {\n        startNewMode(endMode.starts, match);\n      }\n      return origin.returnEnd ? 0 : lexeme.length;\n    }\n\n    function processContinuations() {\n      const list = [];\n      for (let current = top; current !== language; current = current.parent) {\n        if (current.scope) {\n          list.unshift(current.scope);\n        }\n      }\n      list.forEach(item => emitter.openNode(item));\n    }\n\n    /** @type {{type?: MatchType, index?: number, rule?: Mode}}} */\n    let lastMatch = {};\n\n    /**\n     *  Process an individual match\n     *\n     * @param {string} textBeforeMatch - text preceding the match (since the last match)\n     * @param {EnhancedMatch} [match] - the match itself\n     */\n    function processLexeme(textBeforeMatch, match) {\n      const lexeme = match && match[0];\n\n      // add non-matched text to the current mode buffer\n      modeBuffer += textBeforeMatch;\n\n      if (lexeme == null) {\n        processBuffer();\n        return 0;\n      }\n\n      // we've found a 0 width match and we're stuck, so we need to advance\n      // this happens when we have badly behaved rules that have optional matchers to the degree that\n      // sometimes they can end up matching nothing at all\n      // Ref: https://github.com/highlightjs/highlight.js/issues/2140\n      if (lastMatch.type === \"begin\" && match.type === \"end\" && lastMatch.index === match.index && lexeme === \"\") {\n        // spit the \"skipped\" character that our regex choked on back into the output sequence\n        modeBuffer += codeToHighlight.slice(match.index, match.index + 1);\n        if (!SAFE_MODE) {\n          /** @type {AnnotatedError} */\n          const err = new Error(`0 width match regex (${languageName})`);\n          err.languageName = languageName;\n          err.badRule = lastMatch.rule;\n          throw err;\n        }\n        return 1;\n      }\n      lastMatch = match;\n\n      if (match.type === \"begin\") {\n        return doBeginMatch(match);\n      } else if (match.type === \"illegal\" && !ignoreIllegals) {\n        // illegal match, we do not continue processing\n        /** @type {AnnotatedError} */\n        const err = new Error('Illegal lexeme \"' + lexeme + '\" for mode \"' + (top.scope || '<unnamed>') + '\"');\n        err.mode = top;\n        throw err;\n      } else if (match.type === \"end\") {\n        const processed = doEndMatch(match);\n        if (processed !== NO_MATCH) {\n          return processed;\n        }\n      }\n\n      // edge case for when illegal matches $ (end of line) which is technically\n      // a 0 width match but not a begin/end match so it's not caught by the\n      // first handler (when ignoreIllegals is true)\n      if (match.type === \"illegal\" && lexeme === \"\") {\n        // advance so we aren't stuck in an infinite loop\n        return 1;\n      }\n\n      // infinite loops are BAD, this is a last ditch catch all. if we have a\n      // decent number of iterations yet our index (cursor position in our\n      // parsing) still 3x behind our index then something is very wrong\n      // so we bail\n      if (iterations > 100000 && iterations > match.index * 3) {\n        const err = new Error('potential infinite loop, way more iterations than matches');\n        throw err;\n      }\n\n      /*\n      Why might be find ourselves here?  An potential end match that was\n      triggered but could not be completed.  IE, `doEndMatch` returned NO_MATCH.\n      (this could be because a callback requests the match be ignored, etc)\n\n      This causes no real harm other than stopping a few times too many.\n      */\n\n      modeBuffer += lexeme;\n      return lexeme.length;\n    }\n\n    const language = getLanguage(languageName);\n    if (!language) {\n      error(LANGUAGE_NOT_FOUND.replace(\"{}\", languageName));\n      throw new Error('Unknown language: \"' + languageName + '\"');\n    }\n\n    const md = compileLanguage(language);\n    let result = '';\n    /** @type {CompiledMode} */\n    let top = continuation || md;\n    /** @type Record<string,CompiledMode> */\n    const continuations = {}; // keep continuations for sub-languages\n    const emitter = new options.__emitter(options);\n    processContinuations();\n    let modeBuffer = '';\n    let relevance = 0;\n    let index = 0;\n    let iterations = 0;\n    let resumeScanAtSamePosition = false;\n\n    try {\n      top.matcher.considerAll();\n\n      for (;;) {\n        iterations++;\n        if (resumeScanAtSamePosition) {\n          // only regexes not matched previously will now be\n          // considered for a potential match\n          resumeScanAtSamePosition = false;\n        } else {\n          top.matcher.considerAll();\n        }\n        top.matcher.lastIndex = index;\n\n        const match = top.matcher.exec(codeToHighlight);\n        // console.log(\"match\", match[0], match.rule && match.rule.begin)\n\n        if (!match) break;\n\n        const beforeMatch = codeToHighlight.substring(index, match.index);\n        const processedCount = processLexeme(beforeMatch, match);\n        index = match.index + processedCount;\n      }\n      processLexeme(codeToHighlight.substr(index));\n      emitter.closeAllNodes();\n      emitter.finalize();\n      result = emitter.toHTML();\n\n      return {\n        language: languageName,\n        value: result,\n        relevance: relevance,\n        illegal: false,\n        _emitter: emitter,\n        _top: top\n      };\n    } catch (err) {\n      if (err.message && err.message.includes('Illegal')) {\n        return {\n          language: languageName,\n          value: escape(codeToHighlight),\n          illegal: true,\n          relevance: 0,\n          _illegalBy: {\n            message: err.message,\n            index: index,\n            context: codeToHighlight.slice(index - 100, index + 100),\n            mode: err.mode,\n            resultSoFar: result\n          },\n          _emitter: emitter\n        };\n      } else if (SAFE_MODE) {\n        return {\n          language: languageName,\n          value: escape(codeToHighlight),\n          illegal: false,\n          relevance: 0,\n          errorRaised: err,\n          _emitter: emitter,\n          _top: top\n        };\n      } else {\n        throw err;\n      }\n    }\n  }\n\n  /**\n   * returns a valid highlight result, without actually doing any actual work,\n   * auto highlight starts with this and it's possible for small snippets that\n   * auto-detection may not find a better match\n   * @param {string} code\n   * @returns {HighlightResult}\n   */\n  function justTextHighlightResult(code) {\n    const result = {\n      value: escape(code),\n      illegal: false,\n      relevance: 0,\n      _top: PLAINTEXT_LANGUAGE,\n      _emitter: new options.__emitter(options)\n    };\n    result._emitter.addText(code);\n    return result;\n  }\n\n  /**\n  Highlighting with language detection. Accepts a string with the code to\n  highlight. Returns an object with the following properties:\n\n  - language (detected language)\n  - relevance (int)\n  - value (an HTML string with highlighting markup)\n  - secondBest (object with the same structure for second-best heuristically\n    detected language, may be absent)\n\n    @param {string} code\n    @param {Array<string>} [languageSubset]\n    @returns {AutoHighlightResult}\n  */\n  function highlightAuto(code, languageSubset) {\n    languageSubset = languageSubset || options.languages || Object.keys(languages);\n    const plaintext = justTextHighlightResult(code);\n\n    const results = languageSubset.filter(getLanguage).filter(autoDetection).map(name =>\n      _highlight(name, code, false)\n    );\n    results.unshift(plaintext); // plaintext is always an option\n\n    const sorted = results.sort((a, b) => {\n      // sort base on relevance\n      if (a.relevance !== b.relevance) return b.relevance - a.relevance;\n\n      // always award the tie to the base language\n      // ie if C++ and Arduino are tied, it's more likely to be C++\n      if (a.language && b.language) {\n        if (getLanguage(a.language).supersetOf === b.language) {\n          return 1;\n        } else if (getLanguage(b.language).supersetOf === a.language) {\n          return -1;\n        }\n      }\n\n      // otherwise say they are equal, which has the effect of sorting on\n      // relevance while preserving the original ordering - which is how ties\n      // have historically been settled, ie the language that comes first always\n      // wins in the case of a tie\n      return 0;\n    });\n\n    const [best, secondBest] = sorted;\n\n    /** @type {AutoHighlightResult} */\n    const result = best;\n    result.secondBest = secondBest;\n\n    return result;\n  }\n\n  /**\n   * Builds new class name for block given the language name\n   *\n   * @param {HTMLElement} element\n   * @param {string} [currentLang]\n   * @param {string} [resultLang]\n   */\n  function updateClassName(element, currentLang, resultLang) {\n    const language = (currentLang && aliases[currentLang]) || resultLang;\n\n    element.classList.add(\"hljs\");\n    element.classList.add(`language-${language}`);\n  }\n\n  /**\n   * Applies highlighting to a DOM node containing code.\n   *\n   * @param {HighlightedHTMLElement} element - the HTML element to highlight\n  */\n  function highlightElement(element) {\n    /** @type HTMLElement */\n    let node = null;\n    const language = blockLanguage(element);\n\n    if (shouldNotHighlight(language)) return;\n\n    fire(\"before:highlightElement\",\n      { el: element, language: language });\n\n    // we should be all text, no child nodes\n    if (!options.ignoreUnescapedHTML && element.children.length > 0) {\n      console.warn(\"One of your code blocks includes unescaped HTML. This is a potentially serious security risk.\");\n      console.warn(\"https://github.com/highlightjs/highlight.js/issues/2886\");\n      console.warn(element);\n    }\n\n    node = element;\n    const text = node.textContent;\n    const result = language ? highlight(text, { language, ignoreIllegals: true }) : highlightAuto(text);\n\n    element.innerHTML = result.value;\n    updateClassName(element, language, result.language);\n    element.result = {\n      language: result.language,\n      // TODO: remove with version 11.0\n      re: result.relevance,\n      relevance: result.relevance\n    };\n    if (result.secondBest) {\n      element.secondBest = {\n        language: result.secondBest.language,\n        relevance: result.secondBest.relevance\n      };\n    }\n\n    fire(\"after:highlightElement\", { el: element, result, text });\n  }\n\n  /**\n   * Updates highlight.js global options with the passed options\n   *\n   * @param {Partial<HLJSOptions>} userOptions\n   */\n  function configure(userOptions) {\n    options = inherit(options, userOptions);\n  }\n\n  // TODO: remove v12, deprecated\n  const initHighlighting = () => {\n    highlightAll();\n    deprecated(\"10.6.0\", \"initHighlighting() deprecated.  Use highlightAll() now.\");\n  };\n\n  // TODO: remove v12, deprecated\n  function initHighlightingOnLoad() {\n    highlightAll();\n    deprecated(\"10.6.0\", \"initHighlightingOnLoad() deprecated.  Use highlightAll() now.\");\n  }\n\n  let wantsHighlight = false;\n\n  /**\n   * auto-highlights all pre>code elements on the page\n   */\n  function highlightAll() {\n    // if we are called too early in the loading process\n    if (document.readyState === \"loading\") {\n      wantsHighlight = true;\n      return;\n    }\n\n    const blocks = document.querySelectorAll(options.cssSelector);\n    blocks.forEach(highlightElement);\n  }\n\n  function boot() {\n    // if a highlight was requested before DOM was loaded, do now\n    if (wantsHighlight) highlightAll();\n  }\n\n  // make sure we are in the browser environment\n  if (typeof window !== 'undefined' && window.addEventListener) {\n    window.addEventListener('DOMContentLoaded', boot, false);\n  }\n\n  /**\n   * Register a language grammar module\n   *\n   * @param {string} languageName\n   * @param {LanguageFn} languageDefinition\n   */\n  function registerLanguage(languageName, languageDefinition) {\n    let lang = null;\n    try {\n      lang = languageDefinition(hljs);\n    } catch (error$1) {\n      error(\"Language definition for '{}' could not be registered.\".replace(\"{}\", languageName));\n      // hard or soft error\n      if (!SAFE_MODE) { throw error$1; } else { error(error$1); }\n      // languages that have serious errors are replaced with essentially a\n      // \"plaintext\" stand-in so that the code blocks will still get normal\n      // css classes applied to them - and one bad language won't break the\n      // entire highlighter\n      lang = PLAINTEXT_LANGUAGE;\n    }\n    // give it a temporary name if it doesn't have one in the meta-data\n    if (!lang.name) lang.name = languageName;\n    languages[languageName] = lang;\n    lang.rawDefinition = languageDefinition.bind(null, hljs);\n\n    if (lang.aliases) {\n      registerAliases(lang.aliases, { languageName });\n    }\n  }\n\n  /**\n   * Remove a language grammar module\n   *\n   * @param {string} languageName\n   */\n  function unregisterLanguage(languageName) {\n    delete languages[languageName];\n    for (const alias of Object.keys(aliases)) {\n      if (aliases[alias] === languageName) {\n        delete aliases[alias];\n      }\n    }\n  }\n\n  /**\n   * @returns {string[]} List of language internal names\n   */\n  function listLanguages() {\n    return Object.keys(languages);\n  }\n\n  /**\n   * @param {string} name - name of the language to retrieve\n   * @returns {Language | undefined}\n   */\n  function getLanguage(name) {\n    name = (name || '').toLowerCase();\n    return languages[name] || languages[aliases[name]];\n  }\n\n  /**\n   *\n   * @param {string|string[]} aliasList - single alias or list of aliases\n   * @param {{languageName: string}} opts\n   */\n  function registerAliases(aliasList, { languageName }) {\n    if (typeof aliasList === 'string') {\n      aliasList = [aliasList];\n    }\n    aliasList.forEach(alias => { aliases[alias.toLowerCase()] = languageName; });\n  }\n\n  /**\n   * Determines if a given language has auto-detection enabled\n   * @param {string} name - name of the language\n   */\n  function autoDetection(name) {\n    const lang = getLanguage(name);\n    return lang && !lang.disableAutodetect;\n  }\n\n  /**\n   * Upgrades the old highlightBlock plugins to the new\n   * highlightElement API\n   * @param {HLJSPlugin} plugin\n   */\n  function upgradePluginAPI(plugin) {\n    // TODO: remove with v12\n    if (plugin[\"before:highlightBlock\"] && !plugin[\"before:highlightElement\"]) {\n      plugin[\"before:highlightElement\"] = (data) => {\n        plugin[\"before:highlightBlock\"](\n          Object.assign({ block: data.el }, data)\n        );\n      };\n    }\n    if (plugin[\"after:highlightBlock\"] && !plugin[\"after:highlightElement\"]) {\n      plugin[\"after:highlightElement\"] = (data) => {\n        plugin[\"after:highlightBlock\"](\n          Object.assign({ block: data.el }, data)\n        );\n      };\n    }\n  }\n\n  /**\n   * @param {HLJSPlugin} plugin\n   */\n  function addPlugin(plugin) {\n    upgradePluginAPI(plugin);\n    plugins.push(plugin);\n  }\n\n  /**\n   *\n   * @param {PluginEvent} event\n   * @param {any} args\n   */\n  function fire(event, args) {\n    const cb = event;\n    plugins.forEach(function(plugin) {\n      if (plugin[cb]) {\n        plugin[cb](args);\n      }\n    });\n  }\n\n  /**\n   * DEPRECATED\n   * @param {HighlightedHTMLElement} el\n   */\n  function deprecateHighlightBlock(el) {\n    deprecated(\"10.7.0\", \"highlightBlock will be removed entirely in v12.0\");\n    deprecated(\"10.7.0\", \"Please use highlightElement now.\");\n\n    return highlightElement(el);\n  }\n\n  /* Interface definition */\n  Object.assign(hljs, {\n    highlight,\n    highlightAuto,\n    highlightAll,\n    highlightElement,\n    // TODO: Remove with v12 API\n    highlightBlock: deprecateHighlightBlock,\n    configure,\n    initHighlighting,\n    initHighlightingOnLoad,\n    registerLanguage,\n    unregisterLanguage,\n    listLanguages,\n    getLanguage,\n    registerAliases,\n    autoDetection,\n    inherit,\n    addPlugin\n  });\n\n  hljs.debugMode = function() { SAFE_MODE = false; };\n  hljs.safeMode = function() { SAFE_MODE = true; };\n  hljs.versionString = version;\n\n  for (const key in MODES) {\n    // @ts-ignore\n    if (typeof MODES[key] === \"object\") {\n      // @ts-ignore\n      deepFreeze$1(MODES[key]);\n    }\n  }\n\n  // merge all the modes/regexes into our main object\n  Object.assign(hljs, MODES);\n\n  return hljs;\n};\n\n// export an \"instance\" of the highlighter\nvar highlight = HLJS({});\n\nmodule.exports = highlight;\n","/*\nLanguage: Intel x86 Assembly\nAuthor: innocenat <innocenat@gmail.com>\nDescription: x86 assembly language using Intel's mnemonic and NASM syntax\nWebsite: https://en.wikipedia.org/wiki/X86_assembly_language\nCategory: assembler\n*/\n\nfunction x86asm(hljs) {\n  return {\n    name: 'Intel x86 Assembly',\n    case_insensitive: true,\n    keywords: {\n      $pattern: '[.%]?' + hljs.IDENT_RE,\n      keyword:\n        'lock rep repe repz repne repnz xaquire xrelease bnd nobnd ' +\n        'aaa aad aam aas adc add and arpl bb0_reset bb1_reset bound bsf bsr bswap bt btc btr bts call cbw cdq cdqe clc cld cli clts cmc cmp cmpsb cmpsd cmpsq cmpsw cmpxchg cmpxchg486 cmpxchg8b cmpxchg16b cpuid cpu_read cpu_write cqo cwd cwde daa das dec div dmint emms enter equ f2xm1 fabs fadd faddp fbld fbstp fchs fclex fcmovb fcmovbe fcmove fcmovnb fcmovnbe fcmovne fcmovnu fcmovu fcom fcomi fcomip fcomp fcompp fcos fdecstp fdisi fdiv fdivp fdivr fdivrp femms feni ffree ffreep fiadd ficom ficomp fidiv fidivr fild fimul fincstp finit fist fistp fisttp fisub fisubr fld fld1 fldcw fldenv fldl2e fldl2t fldlg2 fldln2 fldpi fldz fmul fmulp fnclex fndisi fneni fninit fnop fnsave fnstcw fnstenv fnstsw fpatan fprem fprem1 fptan frndint frstor fsave fscale fsetpm fsin fsincos fsqrt fst fstcw fstenv fstp fstsw fsub fsubp fsubr fsubrp ftst fucom fucomi fucomip fucomp fucompp fxam fxch fxtract fyl2x fyl2xp1 hlt ibts icebp idiv imul in inc incbin insb insd insw int int01 int1 int03 int3 into invd invpcid invlpg invlpga iret iretd iretq iretw jcxz jecxz jrcxz jmp jmpe lahf lar lds lea leave les lfence lfs lgdt lgs lidt lldt lmsw loadall loadall286 lodsb lodsd lodsq lodsw loop loope loopne loopnz loopz lsl lss ltr mfence monitor mov movd movq movsb movsd movsq movsw movsx movsxd movzx mul mwait neg nop not or out outsb outsd outsw packssdw packsswb packuswb paddb paddd paddsb paddsiw paddsw paddusb paddusw paddw pand pandn pause paveb pavgusb pcmpeqb pcmpeqd pcmpeqw pcmpgtb pcmpgtd pcmpgtw pdistib pf2id pfacc pfadd pfcmpeq pfcmpge pfcmpgt pfmax pfmin pfmul pfrcp pfrcpit1 pfrcpit2 pfrsqit1 pfrsqrt pfsub pfsubr pi2fd pmachriw pmaddwd pmagw pmulhriw pmulhrwa pmulhrwc pmulhw pmullw pmvgezb pmvlzb pmvnzb pmvzb pop popa popad popaw popf popfd popfq popfw por prefetch prefetchw pslld psllq psllw psrad psraw psrld psrlq psrlw psubb psubd psubsb psubsiw psubsw psubusb psubusw psubw punpckhbw punpckhdq punpckhwd punpcklbw punpckldq punpcklwd push pusha pushad pushaw pushf pushfd pushfq pushfw pxor rcl rcr rdshr rdmsr rdpmc rdtsc rdtscp ret retf retn rol ror rdm rsdc rsldt rsm rsts sahf sal salc sar sbb scasb scasd scasq scasw sfence sgdt shl shld shr shrd sidt sldt skinit smi smint smintold smsw stc std sti stosb stosd stosq stosw str sub svdc svldt svts swapgs syscall sysenter sysexit sysret test ud0 ud1 ud2b ud2 ud2a umov verr verw fwait wbinvd wrshr wrmsr xadd xbts xchg xlatb xlat xor cmove cmovz cmovne cmovnz cmova cmovnbe cmovae cmovnb cmovb cmovnae cmovbe cmovna cmovg cmovnle cmovge cmovnl cmovl cmovnge cmovle cmovng cmovc cmovnc cmovo cmovno cmovs cmovns cmovp cmovpe cmovnp cmovpo je jz jne jnz ja jnbe jae jnb jb jnae jbe jna jg jnle jge jnl jl jnge jle jng jc jnc jo jno js jns jpo jnp jpe jp sete setz setne setnz seta setnbe setae setnb setnc setb setnae setcset setbe setna setg setnle setge setnl setl setnge setle setng sets setns seto setno setpe setp setpo setnp addps addss andnps andps cmpeqps cmpeqss cmpleps cmpless cmpltps cmpltss cmpneqps cmpneqss cmpnleps cmpnless cmpnltps cmpnltss cmpordps cmpordss cmpunordps cmpunordss cmpps cmpss comiss cvtpi2ps cvtps2pi cvtsi2ss cvtss2si cvttps2pi cvttss2si divps divss ldmxcsr maxps maxss minps minss movaps movhps movlhps movlps movhlps movmskps movntps movss movups mulps mulss orps rcpps rcpss rsqrtps rsqrtss shufps sqrtps sqrtss stmxcsr subps subss ucomiss unpckhps unpcklps xorps fxrstor fxrstor64 fxsave fxsave64 xgetbv xsetbv xsave xsave64 xsaveopt xsaveopt64 xrstor xrstor64 prefetchnta prefetcht0 prefetcht1 prefetcht2 maskmovq movntq pavgb pavgw pextrw pinsrw pmaxsw pmaxub pminsw pminub pmovmskb pmulhuw psadbw pshufw pf2iw pfnacc pfpnacc pi2fw pswapd maskmovdqu clflush movntdq movnti movntpd movdqa movdqu movdq2q movq2dq paddq pmuludq pshufd pshufhw pshuflw pslldq psrldq psubq punpckhqdq punpcklqdq addpd addsd andnpd andpd cmpeqpd cmpeqsd cmplepd cmplesd cmpltpd cmpltsd cmpneqpd cmpneqsd cmpnlepd cmpnlesd cmpnltpd cmpnltsd cmpordpd cmpordsd cmpunordpd cmpunordsd cmppd comisd cvtdq2pd cvtdq2ps cvtpd2dq cvtpd2pi cvtpd2ps cvtpi2pd cvtps2dq cvtps2pd cvtsd2si cvtsd2ss cvtsi2sd cvtss2sd cvttpd2pi cvttpd2dq cvttps2dq cvttsd2si divpd divsd maxpd maxsd minpd minsd movapd movhpd movlpd movmskpd movupd mulpd mulsd orpd shufpd sqrtpd sqrtsd subpd subsd ucomisd unpckhpd unpcklpd xorpd addsubpd addsubps haddpd haddps hsubpd hsubps lddqu movddup movshdup movsldup clgi stgi vmcall vmclear vmfunc vmlaunch vmload vmmcall vmptrld vmptrst vmread vmresume vmrun vmsave vmwrite vmxoff vmxon invept invvpid pabsb pabsw pabsd palignr phaddw phaddd phaddsw phsubw phsubd phsubsw pmaddubsw pmulhrsw pshufb psignb psignw psignd extrq insertq movntsd movntss lzcnt blendpd blendps blendvpd blendvps dppd dpps extractps insertps movntdqa mpsadbw packusdw pblendvb pblendw pcmpeqq pextrb pextrd pextrq phminposuw pinsrb pinsrd pinsrq pmaxsb pmaxsd pmaxud pmaxuw pminsb pminsd pminud pminuw pmovsxbw pmovsxbd pmovsxbq pmovsxwd pmovsxwq pmovsxdq pmovzxbw pmovzxbd pmovzxbq pmovzxwd pmovzxwq pmovzxdq pmuldq pmulld ptest roundpd roundps roundsd roundss crc32 pcmpestri pcmpestrm pcmpistri pcmpistrm pcmpgtq popcnt getsec pfrcpv pfrsqrtv movbe aesenc aesenclast aesdec aesdeclast aesimc aeskeygenassist vaesenc vaesenclast vaesdec vaesdeclast vaesimc vaeskeygenassist vaddpd vaddps vaddsd vaddss vaddsubpd vaddsubps vandpd vandps vandnpd vandnps vblendpd vblendps vblendvpd vblendvps vbroadcastss vbroadcastsd vbroadcastf128 vcmpeq_ospd vcmpeqpd vcmplt_ospd vcmpltpd vcmple_ospd vcmplepd vcmpunord_qpd vcmpunordpd vcmpneq_uqpd vcmpneqpd vcmpnlt_uspd vcmpnltpd vcmpnle_uspd vcmpnlepd vcmpord_qpd vcmpordpd vcmpeq_uqpd vcmpnge_uspd vcmpngepd vcmpngt_uspd vcmpngtpd vcmpfalse_oqpd vcmpfalsepd vcmpneq_oqpd vcmpge_ospd vcmpgepd vcmpgt_ospd vcmpgtpd vcmptrue_uqpd vcmptruepd vcmplt_oqpd vcmple_oqpd vcmpunord_spd vcmpneq_uspd vcmpnlt_uqpd vcmpnle_uqpd vcmpord_spd vcmpeq_uspd vcmpnge_uqpd vcmpngt_uqpd vcmpfalse_ospd vcmpneq_ospd vcmpge_oqpd vcmpgt_oqpd vcmptrue_uspd vcmppd vcmpeq_osps vcmpeqps vcmplt_osps vcmpltps vcmple_osps vcmpleps vcmpunord_qps vcmpunordps vcmpneq_uqps vcmpneqps vcmpnlt_usps vcmpnltps vcmpnle_usps vcmpnleps vcmpord_qps vcmpordps vcmpeq_uqps vcmpnge_usps vcmpngeps vcmpngt_usps vcmpngtps vcmpfalse_oqps vcmpfalseps vcmpneq_oqps vcmpge_osps vcmpgeps vcmpgt_osps vcmpgtps vcmptrue_uqps vcmptrueps vcmplt_oqps vcmple_oqps vcmpunord_sps vcmpneq_usps vcmpnlt_uqps vcmpnle_uqps vcmpord_sps vcmpeq_usps vcmpnge_uqps vcmpngt_uqps vcmpfalse_osps vcmpneq_osps vcmpge_oqps vcmpgt_oqps vcmptrue_usps vcmpps vcmpeq_ossd vcmpeqsd vcmplt_ossd vcmpltsd vcmple_ossd vcmplesd vcmpunord_qsd vcmpunordsd vcmpneq_uqsd vcmpneqsd vcmpnlt_ussd vcmpnltsd vcmpnle_ussd vcmpnlesd vcmpord_qsd vcmpordsd vcmpeq_uqsd vcmpnge_ussd vcmpngesd vcmpngt_ussd vcmpngtsd vcmpfalse_oqsd vcmpfalsesd vcmpneq_oqsd vcmpge_ossd vcmpgesd vcmpgt_ossd vcmpgtsd vcmptrue_uqsd vcmptruesd vcmplt_oqsd vcmple_oqsd vcmpunord_ssd vcmpneq_ussd vcmpnlt_uqsd vcmpnle_uqsd vcmpord_ssd vcmpeq_ussd vcmpnge_uqsd vcmpngt_uqsd vcmpfalse_ossd vcmpneq_ossd vcmpge_oqsd vcmpgt_oqsd vcmptrue_ussd vcmpsd vcmpeq_osss vcmpeqss vcmplt_osss vcmpltss vcmple_osss vcmpless vcmpunord_qss vcmpunordss vcmpneq_uqss vcmpneqss vcmpnlt_usss vcmpnltss vcmpnle_usss vcmpnless vcmpord_qss vcmpordss vcmpeq_uqss vcmpnge_usss vcmpngess vcmpngt_usss vcmpngtss vcmpfalse_oqss vcmpfalsess vcmpneq_oqss vcmpge_osss vcmpgess vcmpgt_osss vcmpgtss vcmptrue_uqss vcmptruess vcmplt_oqss vcmple_oqss vcmpunord_sss vcmpneq_usss vcmpnlt_uqss vcmpnle_uqss vcmpord_sss vcmpeq_usss vcmpnge_uqss vcmpngt_uqss vcmpfalse_osss vcmpneq_osss vcmpge_oqss vcmpgt_oqss vcmptrue_usss vcmpss vcomisd vcomiss vcvtdq2pd vcvtdq2ps vcvtpd2dq vcvtpd2ps vcvtps2dq vcvtps2pd vcvtsd2si vcvtsd2ss vcvtsi2sd vcvtsi2ss vcvtss2sd vcvtss2si vcvttpd2dq vcvttps2dq vcvttsd2si vcvttss2si vdivpd vdivps vdivsd vdivss vdppd vdpps vextractf128 vextractps vhaddpd vhaddps vhsubpd vhsubps vinsertf128 vinsertps vlddqu vldqqu vldmxcsr vmaskmovdqu vmaskmovps vmaskmovpd vmaxpd vmaxps vmaxsd vmaxss vminpd vminps vminsd vminss vmovapd vmovaps vmovd vmovq vmovddup vmovdqa vmovqqa vmovdqu vmovqqu vmovhlps vmovhpd vmovhps vmovlhps vmovlpd vmovlps vmovmskpd vmovmskps vmovntdq vmovntqq vmovntdqa vmovntpd vmovntps vmovsd vmovshdup vmovsldup vmovss vmovupd vmovups vmpsadbw vmulpd vmulps vmulsd vmulss vorpd vorps vpabsb vpabsw vpabsd vpacksswb vpackssdw vpackuswb vpackusdw vpaddb vpaddw vpaddd vpaddq vpaddsb vpaddsw vpaddusb vpaddusw vpalignr vpand vpandn vpavgb vpavgw vpblendvb vpblendw vpcmpestri vpcmpestrm vpcmpistri vpcmpistrm vpcmpeqb vpcmpeqw vpcmpeqd vpcmpeqq vpcmpgtb vpcmpgtw vpcmpgtd vpcmpgtq vpermilpd vpermilps vperm2f128 vpextrb vpextrw vpextrd vpextrq vphaddw vphaddd vphaddsw vphminposuw vphsubw vphsubd vphsubsw vpinsrb vpinsrw vpinsrd vpinsrq vpmaddwd vpmaddubsw vpmaxsb vpmaxsw vpmaxsd vpmaxub vpmaxuw vpmaxud vpminsb vpminsw vpminsd vpminub vpminuw vpminud vpmovmskb vpmovsxbw vpmovsxbd vpmovsxbq vpmovsxwd vpmovsxwq vpmovsxdq vpmovzxbw vpmovzxbd vpmovzxbq vpmovzxwd vpmovzxwq vpmovzxdq vpmulhuw vpmulhrsw vpmulhw vpmullw vpmulld vpmuludq vpmuldq vpor vpsadbw vpshufb vpshufd vpshufhw vpshuflw vpsignb vpsignw vpsignd vpslldq vpsrldq vpsllw vpslld vpsllq vpsraw vpsrad vpsrlw vpsrld vpsrlq vptest vpsubb vpsubw vpsubd vpsubq vpsubsb vpsubsw vpsubusb vpsubusw vpunpckhbw vpunpckhwd vpunpckhdq vpunpckhqdq vpunpcklbw vpunpcklwd vpunpckldq vpunpcklqdq vpxor vrcpps vrcpss vrsqrtps vrsqrtss vroundpd vroundps vroundsd vroundss vshufpd vshufps vsqrtpd vsqrtps vsqrtsd vsqrtss vstmxcsr vsubpd vsubps vsubsd vsubss vtestps vtestpd vucomisd vucomiss vunpckhpd vunpckhps vunpcklpd vunpcklps vxorpd vxorps vzeroall vzeroupper pclmullqlqdq pclmulhqlqdq pclmullqhqdq pclmulhqhqdq pclmulqdq vpclmullqlqdq vpclmulhqlqdq vpclmullqhqdq vpclmulhqhqdq vpclmulqdq vfmadd132ps vfmadd132pd vfmadd312ps vfmadd312pd vfmadd213ps vfmadd213pd vfmadd123ps vfmadd123pd vfmadd231ps vfmadd231pd vfmadd321ps vfmadd321pd vfmaddsub132ps vfmaddsub132pd vfmaddsub312ps vfmaddsub312pd vfmaddsub213ps vfmaddsub213pd vfmaddsub123ps vfmaddsub123pd vfmaddsub231ps vfmaddsub231pd vfmaddsub321ps vfmaddsub321pd vfmsub132ps vfmsub132pd vfmsub312ps vfmsub312pd vfmsub213ps vfmsub213pd vfmsub123ps vfmsub123pd vfmsub231ps vfmsub231pd vfmsub321ps vfmsub321pd vfmsubadd132ps vfmsubadd132pd vfmsubadd312ps vfmsubadd312pd vfmsubadd213ps vfmsubadd213pd vfmsubadd123ps vfmsubadd123pd vfmsubadd231ps vfmsubadd231pd vfmsubadd321ps vfmsubadd321pd vfnmadd132ps vfnmadd132pd vfnmadd312ps vfnmadd312pd vfnmadd213ps vfnmadd213pd vfnmadd123ps vfnmadd123pd vfnmadd231ps vfnmadd231pd vfnmadd321ps vfnmadd321pd vfnmsub132ps vfnmsub132pd vfnmsub312ps vfnmsub312pd vfnmsub213ps vfnmsub213pd vfnmsub123ps vfnmsub123pd vfnmsub231ps vfnmsub231pd vfnmsub321ps vfnmsub321pd vfmadd132ss vfmadd132sd vfmadd312ss vfmadd312sd vfmadd213ss vfmadd213sd vfmadd123ss vfmadd123sd vfmadd231ss vfmadd231sd vfmadd321ss vfmadd321sd vfmsub132ss vfmsub132sd vfmsub312ss vfmsub312sd vfmsub213ss vfmsub213sd vfmsub123ss vfmsub123sd vfmsub231ss vfmsub231sd vfmsub321ss vfmsub321sd vfnmadd132ss vfnmadd132sd vfnmadd312ss vfnmadd312sd vfnmadd213ss vfnmadd213sd vfnmadd123ss vfnmadd123sd vfnmadd231ss vfnmadd231sd vfnmadd321ss vfnmadd321sd vfnmsub132ss vfnmsub132sd vfnmsub312ss vfnmsub312sd vfnmsub213ss vfnmsub213sd vfnmsub123ss vfnmsub123sd vfnmsub231ss vfnmsub231sd vfnmsub321ss vfnmsub321sd rdfsbase rdgsbase rdrand wrfsbase wrgsbase vcvtph2ps vcvtps2ph adcx adox rdseed clac stac xstore xcryptecb xcryptcbc xcryptctr xcryptcfb xcryptofb montmul xsha1 xsha256 llwpcb slwpcb lwpval lwpins vfmaddpd vfmaddps vfmaddsd vfmaddss vfmaddsubpd vfmaddsubps vfmsubaddpd vfmsubaddps vfmsubpd vfmsubps vfmsubsd vfmsubss vfnmaddpd vfnmaddps vfnmaddsd vfnmaddss vfnmsubpd vfnmsubps vfnmsubsd vfnmsubss vfrczpd vfrczps vfrczsd vfrczss vpcmov vpcomb vpcomd vpcomq vpcomub vpcomud vpcomuq vpcomuw vpcomw vphaddbd vphaddbq vphaddbw vphadddq vphaddubd vphaddubq vphaddubw vphaddudq vphadduwd vphadduwq vphaddwd vphaddwq vphsubbw vphsubdq vphsubwd vpmacsdd vpmacsdqh vpmacsdql vpmacssdd vpmacssdqh vpmacssdql vpmacsswd vpmacssww vpmacswd vpmacsww vpmadcsswd vpmadcswd vpperm vprotb vprotd vprotq vprotw vpshab vpshad vpshaq vpshaw vpshlb vpshld vpshlq vpshlw vbroadcasti128 vpblendd vpbroadcastb vpbroadcastw vpbroadcastd vpbroadcastq vpermd vpermpd vpermps vpermq vperm2i128 vextracti128 vinserti128 vpmaskmovd vpmaskmovq vpsllvd vpsllvq vpsravd vpsrlvd vpsrlvq vgatherdpd vgatherqpd vgatherdps vgatherqps vpgatherdd vpgatherqd vpgatherdq vpgatherqq xabort xbegin xend xtest andn bextr blci blcic blsi blsic blcfill blsfill blcmsk blsmsk blsr blcs bzhi mulx pdep pext rorx sarx shlx shrx tzcnt tzmsk t1mskc valignd valignq vblendmpd vblendmps vbroadcastf32x4 vbroadcastf64x4 vbroadcasti32x4 vbroadcasti64x4 vcompresspd vcompressps vcvtpd2udq vcvtps2udq vcvtsd2usi vcvtss2usi vcvttpd2udq vcvttps2udq vcvttsd2usi vcvttss2usi vcvtudq2pd vcvtudq2ps vcvtusi2sd vcvtusi2ss vexpandpd vexpandps vextractf32x4 vextractf64x4 vextracti32x4 vextracti64x4 vfixupimmpd vfixupimmps vfixupimmsd vfixupimmss vgetexppd vgetexpps vgetexpsd vgetexpss vgetmantpd vgetmantps vgetmantsd vgetmantss vinsertf32x4 vinsertf64x4 vinserti32x4 vinserti64x4 vmovdqa32 vmovdqa64 vmovdqu32 vmovdqu64 vpabsq vpandd vpandnd vpandnq vpandq vpblendmd vpblendmq vpcmpltd vpcmpled vpcmpneqd vpcmpnltd vpcmpnled vpcmpd vpcmpltq vpcmpleq vpcmpneqq vpcmpnltq vpcmpnleq vpcmpq vpcmpequd vpcmpltud vpcmpleud vpcmpnequd vpcmpnltud vpcmpnleud vpcmpud vpcmpequq vpcmpltuq vpcmpleuq vpcmpnequq vpcmpnltuq vpcmpnleuq vpcmpuq vpcompressd vpcompressq vpermi2d vpermi2pd vpermi2ps vpermi2q vpermt2d vpermt2pd vpermt2ps vpermt2q vpexpandd vpexpandq vpmaxsq vpmaxuq vpminsq vpminuq vpmovdb vpmovdw vpmovqb vpmovqd vpmovqw vpmovsdb vpmovsdw vpmovsqb vpmovsqd vpmovsqw vpmovusdb vpmovusdw vpmovusqb vpmovusqd vpmovusqw vpord vporq vprold vprolq vprolvd vprolvq vprord vprorq vprorvd vprorvq vpscatterdd vpscatterdq vpscatterqd vpscatterqq vpsraq vpsravq vpternlogd vpternlogq vptestmd vptestmq vptestnmd vptestnmq vpxord vpxorq vrcp14pd vrcp14ps vrcp14sd vrcp14ss vrndscalepd vrndscaleps vrndscalesd vrndscaless vrsqrt14pd vrsqrt14ps vrsqrt14sd vrsqrt14ss vscalefpd vscalefps vscalefsd vscalefss vscatterdpd vscatterdps vscatterqpd vscatterqps vshuff32x4 vshuff64x2 vshufi32x4 vshufi64x2 kandnw kandw kmovw knotw kortestw korw kshiftlw kshiftrw kunpckbw kxnorw kxorw vpbroadcastmb2q vpbroadcastmw2d vpconflictd vpconflictq vplzcntd vplzcntq vexp2pd vexp2ps vrcp28pd vrcp28ps vrcp28sd vrcp28ss vrsqrt28pd vrsqrt28ps vrsqrt28sd vrsqrt28ss vgatherpf0dpd vgatherpf0dps vgatherpf0qpd vgatherpf0qps vgatherpf1dpd vgatherpf1dps vgatherpf1qpd vgatherpf1qps vscatterpf0dpd vscatterpf0dps vscatterpf0qpd vscatterpf0qps vscatterpf1dpd vscatterpf1dps vscatterpf1qpd vscatterpf1qps prefetchwt1 bndmk bndcl bndcu bndcn bndmov bndldx bndstx sha1rnds4 sha1nexte sha1msg1 sha1msg2 sha256rnds2 sha256msg1 sha256msg2 hint_nop0 hint_nop1 hint_nop2 hint_nop3 hint_nop4 hint_nop5 hint_nop6 hint_nop7 hint_nop8 hint_nop9 hint_nop10 hint_nop11 hint_nop12 hint_nop13 hint_nop14 hint_nop15 hint_nop16 hint_nop17 hint_nop18 hint_nop19 hint_nop20 hint_nop21 hint_nop22 hint_nop23 hint_nop24 hint_nop25 hint_nop26 hint_nop27 hint_nop28 hint_nop29 hint_nop30 hint_nop31 hint_nop32 hint_nop33 hint_nop34 hint_nop35 hint_nop36 hint_nop37 hint_nop38 hint_nop39 hint_nop40 hint_nop41 hint_nop42 hint_nop43 hint_nop44 hint_nop45 hint_nop46 hint_nop47 hint_nop48 hint_nop49 hint_nop50 hint_nop51 hint_nop52 hint_nop53 hint_nop54 hint_nop55 hint_nop56 hint_nop57 hint_nop58 hint_nop59 hint_nop60 hint_nop61 hint_nop62 hint_nop63',\n      built_in:\n        // Instruction pointer\n        'ip eip rip ' +\n        // 8-bit registers\n        'al ah bl bh cl ch dl dh sil dil bpl spl r8b r9b r10b r11b r12b r13b r14b r15b ' +\n        // 16-bit registers\n        'ax bx cx dx si di bp sp r8w r9w r10w r11w r12w r13w r14w r15w ' +\n        // 32-bit registers\n        'eax ebx ecx edx esi edi ebp esp eip r8d r9d r10d r11d r12d r13d r14d r15d ' +\n        // 64-bit registers\n        'rax rbx rcx rdx rsi rdi rbp rsp r8 r9 r10 r11 r12 r13 r14 r15 ' +\n        // Segment registers\n        'cs ds es fs gs ss ' +\n        // Floating point stack registers\n        'st st0 st1 st2 st3 st4 st5 st6 st7 ' +\n        // MMX Registers\n        'mm0 mm1 mm2 mm3 mm4 mm5 mm6 mm7 ' +\n        // SSE registers\n        'xmm0  xmm1  xmm2  xmm3  xmm4  xmm5  xmm6  xmm7  xmm8  xmm9 xmm10  xmm11 xmm12 xmm13 xmm14 xmm15 ' +\n        'xmm16 xmm17 xmm18 xmm19 xmm20 xmm21 xmm22 xmm23 xmm24 xmm25 xmm26 xmm27 xmm28 xmm29 xmm30 xmm31 ' +\n        // AVX registers\n        'ymm0  ymm1  ymm2  ymm3  ymm4  ymm5  ymm6  ymm7  ymm8  ymm9 ymm10  ymm11 ymm12 ymm13 ymm14 ymm15 ' +\n        'ymm16 ymm17 ymm18 ymm19 ymm20 ymm21 ymm22 ymm23 ymm24 ymm25 ymm26 ymm27 ymm28 ymm29 ymm30 ymm31 ' +\n        // AVX-512F registers\n        'zmm0  zmm1  zmm2  zmm3  zmm4  zmm5  zmm6  zmm7  zmm8  zmm9 zmm10  zmm11 zmm12 zmm13 zmm14 zmm15 ' +\n        'zmm16 zmm17 zmm18 zmm19 zmm20 zmm21 zmm22 zmm23 zmm24 zmm25 zmm26 zmm27 zmm28 zmm29 zmm30 zmm31 ' +\n        // AVX-512F mask registers\n        'k0 k1 k2 k3 k4 k5 k6 k7 ' +\n        // Bound (MPX) register\n        'bnd0 bnd1 bnd2 bnd3 ' +\n        // Special register\n        'cr0 cr1 cr2 cr3 cr4 cr8 dr0 dr1 dr2 dr3 dr8 tr3 tr4 tr5 tr6 tr7 ' +\n        // NASM altreg package\n        'r0 r1 r2 r3 r4 r5 r6 r7 r0b r1b r2b r3b r4b r5b r6b r7b ' +\n        'r0w r1w r2w r3w r4w r5w r6w r7w r0d r1d r2d r3d r4d r5d r6d r7d ' +\n        'r0h r1h r2h r3h ' +\n        'r0l r1l r2l r3l r4l r5l r6l r7l r8l r9l r10l r11l r12l r13l r14l r15l ' +\n\n        'db dw dd dq dt ddq do dy dz ' +\n        'resb resw resd resq rest resdq reso resy resz ' +\n        'incbin equ times ' +\n        'byte word dword qword nosplit rel abs seg wrt strict near far a32 ptr',\n\n      meta:\n        '%define %xdefine %+ %undef %defstr %deftok %assign %strcat %strlen %substr %rotate %elif %else %endif ' +\n        '%if %ifmacro %ifctx %ifidn %ifidni %ifid %ifnum %ifstr %iftoken %ifempty %ifenv %error %warning %fatal %rep ' +\n        '%endrep %include %push %pop %repl %pathsearch %depend %use %arg %stacksize %local %line %comment %endcomment ' +\n        '.nolist ' +\n        '__FILE__ __LINE__ __SECT__  __BITS__ __OUTPUT_FORMAT__ __DATE__ __TIME__ __DATE_NUM__ __TIME_NUM__ ' +\n        '__UTC_DATE__ __UTC_TIME__ __UTC_DATE_NUM__ __UTC_TIME_NUM__  __PASS__ struc endstruc istruc at iend ' +\n        'align alignb sectalign daz nodaz up down zero default option assume public ' +\n\n        'bits use16 use32 use64 default section segment absolute extern global common cpu float ' +\n        '__utf16__ __utf16le__ __utf16be__ __utf32__ __utf32le__ __utf32be__ ' +\n        '__float8__ __float16__ __float32__ __float64__ __float80m__ __float80e__ __float128l__ __float128h__ ' +\n        '__Infinity__ __QNaN__ __SNaN__ Inf NaN QNaN SNaN float8 float16 float32 float64 float80m float80e ' +\n        'float128l float128h __FLOAT_DAZ__ __FLOAT_ROUND__ __FLOAT__'\n    },\n    contains: [\n      hljs.COMMENT(\n        ';',\n        '$',\n        {\n          relevance: 0\n        }\n      ),\n      {\n        className: 'number',\n        variants: [\n          // Float number and x87 BCD\n          {\n            begin: '\\\\b(?:([0-9][0-9_]*)?\\\\.[0-9_]*(?:[eE][+-]?[0-9_]+)?|' +\n                   '(0[Xx])?[0-9][0-9_]*(\\\\.[0-9_]*)?(?:[pP](?:[+-]?[0-9_]+)?)?)\\\\b',\n            relevance: 0\n          },\n\n          // Hex number in $\n          {\n            begin: '\\\\$[0-9][0-9A-Fa-f]*',\n            relevance: 0\n          },\n\n          // Number in H,D,T,Q,O,B,Y suffix\n          {\n            begin: '\\\\b(?:[0-9A-Fa-f][0-9A-Fa-f_]*[Hh]|[0-9][0-9_]*[DdTt]?|[0-7][0-7_]*[QqOo]|[0-1][0-1_]*[BbYy])\\\\b'\n          },\n\n          // Number in X,D,T,Q,O,B,Y prefix\n          {\n            begin: '\\\\b(?:0[Xx][0-9A-Fa-f_]+|0[DdTt][0-9_]+|0[QqOo][0-7_]+|0[BbYy][0-1_]+)\\\\b'\n          }\n        ]\n      },\n      // Double quote string\n      hljs.QUOTE_STRING_MODE,\n      {\n        className: 'string',\n        variants: [\n          // Single-quoted string\n          {\n            begin: '\\'',\n            end: '[^\\\\\\\\]\\''\n          },\n          // Backquoted string\n          {\n            begin: '`',\n            end: '[^\\\\\\\\]`'\n          }\n        ],\n        relevance: 0\n      },\n      {\n        className: 'symbol',\n        variants: [\n          // Global label and local label\n          {\n            begin: '^\\\\s*[A-Za-z._?][A-Za-z0-9_$#@~.?]*(:|\\\\s+label)'\n          },\n          // Macro-local label\n          {\n            begin: '^\\\\s*%%[A-Za-z0-9_$#@~.?]*:'\n          }\n        ],\n        relevance: 0\n      },\n      // Macro parameter\n      {\n        className: 'subst',\n        begin: '%[0-9]+',\n        relevance: 0\n      },\n      // Macro parameter\n      {\n        className: 'subst',\n        begin: '%!\\S+',\n        relevance: 0\n      },\n      {\n        className: 'meta',\n        begin: /^\\s*\\.[\\w_-]+/\n      }\n    ]\n  };\n}\n\nexport default x86asm;\n","var own = {}.hasOwnProperty\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n */\n\n/**\n * Stringify one point, a position (start and end points), or a node’s\n * positional information.\n *\n * @param {Node|Position|Point} [value]\n * @returns {string}\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if (own.call(value, 'position') || own.call(value, 'type')) {\n    // @ts-ignore looks like a node.\n    return position(value.position)\n  }\n\n  // Position.\n  if (own.call(value, 'start') || own.call(value, 'end')) {\n    // @ts-ignore looks like a position.\n    return position(value)\n  }\n\n  // Point.\n  if (own.call(value, 'line') || own.call(value, 'column')) {\n    // @ts-ignore looks like a point.\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\nexport class VFileMessage extends Error {\n  /**\n   * Constructor of a message for `reason` at `place` from `origin`.\n   * When an error is passed in as `reason`, copies the `stack`.\n   *\n   * @param {string|Error} reason Reason for message (`string` or `Error`). Uses the stack and message of the error if given.\n   * @param {Node|Position|Point} [place] Place at which the message occurred in a file (`Node`, `Position`, or `Point`, optional).\n   * @param {string} [origin] Place in code the message originates from (`string`, optional).\n   */\n  constructor(reason, place, origin) {\n    /** @type {[string?, string?]} */\n    var parts = [null, null]\n    /** @type {Position} */\n    var position = {\n      start: {line: null, column: null},\n      end: {line: null, column: null}\n    }\n    /** @type {number} */\n    var index\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = null\n    }\n\n    if (typeof origin === 'string') {\n      index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        // @ts-ignore Looks like a position.\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        // @ts-ignore Looks like a point.\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`\n    this.name = stringifyPosition(place) || '1:1'\n    this.message = typeof reason === 'object' ? reason.message : reason\n    this.stack = typeof reason === 'object' ? reason.stack : ''\n\n    /**\n     * Reason for message.\n     * @type {string}\n     */\n    this.reason = this.message\n    /**\n     * Starting line of error.\n     * @type {number?}\n     */\n    this.line = position.start.line\n    /**\n     * Starting column of error.\n     * @type {number?}\n     */\n    this.column = position.start.column\n    /**\n     * Namespace of warning.\n     * @type {string?}\n     */\n    this.source = parts[0]\n    /**\n     * Category of message.\n     * @type {string?}\n     */\n    this.ruleId = parts[1]\n    /**\n     * Full range information, when available.\n     * Has start and end properties, both set to an object with line and column, set to number?.\n     * @type {Position?}\n     */\n    this.position = position\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * You may add a file property with a path of a file (used throughout the VFile ecosystem).\n     * @type {string?}\n     */\n    this.file\n    /**\n     * If true, marks associated file as no longer processable.\n     * @type {boolean?}\n     */\n    this.fatal\n    /**\n     * You may add a url property with a link to documentation for the message.\n     * @type {string?}\n     */\n    this.url\n    /**\n     * You may add a note property with a long form description of the message (supported by vfile-reporter).\n     * @type {string?}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * @param {string} path\n * @param {string} [ext]\n * @returns {string}\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.charCodeAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.charCodeAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * @param {Array.<string>} segments\n * @returns {string}\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string|undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Note: `normalize` is not exposed as `path.normalize`, so some code is\n * manually removed from it.\n *\n * @param {string} path\n * @returns {string}\n */\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.charCodeAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n * @param {boolean} allowAboveRoot\n * @returns {string}\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number|undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * @param {string} path\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * @param {unknown} fileURLOrPath\n * @returns {fileURLOrPath is URL}\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nexport function isUrl(fileURLOrPath) {\n  return (\n    fileURLOrPath !== null &&\n    typeof fileURLOrPath === 'object' &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.href &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.origin\n  )\n}\n","/// <reference lib=\"dom\" />\n\nimport {isUrl} from './minurl.shared.js'\n\nexport {isUrl}\n\n// See: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js>\n\n/**\n * @param {string|URL} path\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * @param {URL} url\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.charCodeAt(index) === 37 /* `%` */ &&\n      pathname.charCodeAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.charCodeAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {import('./minurl.shared.js').URL} URL\n *\n * @typedef {'ascii'|'utf8'|'utf-8'|'utf16le'|'ucs2'|'ucs-2'|'base64'|'latin1'|'binary'|'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *   This is a copy of the typing from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/a2bc1d8/types/node/globals.d.ts#L174>\n *\n * @typedef {string|Uint8Array} VFileValue\n *   Contents of the file.\n *   Can either be text, or a Buffer like structure.\n *   This does not directly use type `Buffer`, because it can also be used in a\n *   browser context.\n *   Instead this leverages `Uint8Array` which is the base type for `Buffer`,\n *   and a native JavaScript construct.\n *\n * @typedef {VFileValue|VFileOptions|VFile|URL} VFileCompatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n * @property {VFileValue} [value]\n * @property {string} [cwd]\n * @property {Array.<string>} [history]\n * @property {string|URL} [path]\n * @property {string} [basename]\n * @property {string} [stem]\n * @property {string} [extname]\n * @property {string} [dirname]\n * @property {Object.<string, unknown>} [data]\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} VFileOptions\n *   Configuration: a bunch of keys that will be shallow copied over to the new\n *   file.\n *\n * @typedef {Object.<string, unknown>} VFileReporterSettings\n * @typedef {<T = VFileReporterSettings>(files: VFile[], options: T) => string} VFileReporter\n */\n\nimport buffer from 'is-buffer'\nimport {VFileMessage} from 'vfile-message'\nimport {path} from './minpath.js'\nimport {proc} from './minproc.js'\nimport {urlToPath, isUrl} from './minurl.js'\n\n// Order of setting (least specific to most), we need this because otherwise\n// `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n// stem can be set.\nconst order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * If `options` is `string` or `Buffer`, treats it as `{value: options}`.\n   * If `options` is a `VFile`, shallow copies its data over to the new file.\n   * All other given fields are set on the newly created `VFile`.\n   *\n   * Path related properties are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * It’s not possible to set either `dirname` or `extname` without setting\n   * either `history`, `path`, `basename`, or `stem` as well.\n   *\n   * @param {VFileCompatible} [value]\n   */\n  constructor(value) {\n    /** @type {VFileOptions} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (typeof value === 'string' || buffer(value)) {\n      // @ts-expect-error Looks like a buffer.\n      options = {value}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else {\n      // @ts-expect-error Looks like file or options.\n      options = value\n    }\n\n    /**\n     * Place to store custom information.\n     * It’s OK to store custom data directly on the file, moving it to `data`\n     * gives a little more privacy.\n     * @type {Object.<string, unknown>}\n     */\n    this.data = {}\n\n    /**\n     * List of messages associated with the file.\n     * @type {Array.<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * List of file paths the file moved between.\n     * @type {Array.<string>}\n     */\n    this.history = []\n\n    /**\n     * Base of `path`.\n     * Defaults to `process.cwd()` (`/` in browsers).\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     * @type {VFileValue}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     * This is used by vfile reporters.\n     * @type {boolean}\n     */\n    this.stored\n\n    /**\n     * Sometimes files have a non-string representation.\n     * This can be stored in the `result` field.\n     * One example is when turning markdown into React nodes.\n     * This is used by unified to store non-string results.\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Sometimes files have a source map associated with them.\n     * This can be stored in the `map` field.\n     * This should be a `RawSourceMap` type from the `source-map` module.\n     * @type {unknown}\n     */\n    this.map\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (prop in options && options[prop] !== undefined) {\n        // @ts-expect-error: TS is confused by the different types for `history`.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) this[prop] = options[prop]\n    }\n  }\n\n  /**\n   * Access full path (`~/index.min.js`).\n   *\n   * @returns {string}\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set full path (`~/index.min.js`).\n   * Cannot be nullified.\n   *\n   * @param {string|URL} path\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Access parent path (`~`).\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set parent path (`~`).\n   * Cannot be set if there's no `path` yet.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Access basename (including extname) (`index.min.js`).\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (`index.min.js`).\n   * Cannot contain path separators.\n   * Cannot be nullified either (use `file.path = file.dirname` instead).\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Access extname (including dot) (`.js`).\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set extname (including dot) (`.js`).\n   * Cannot be set if there's no `path` yet and cannot contain path separators.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Access stem (w/o extname) (`index.min`).\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set stem (w/o extname) (`index.min`).\n   * Cannot be nullified, and cannot contain path separators.\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * @param {BufferEncoding} [encoding='utf8'] If `file.value` is a buffer, `encoding` is used to serialize buffers.\n   * @returns {string}\n   */\n  toString(encoding) {\n    // @ts-expect-error string’s don’t accept the parameter, but buffers do.\n    return (this.value || '').toString(encoding)\n  }\n\n  /**\n   * Create a message and associates it w/ the file.\n   *\n   * @param {string|Error} reason Reason for message (`string` or `Error`). Uses the stack and message of the error if given.\n   * @param {Node|Position|Point} [place] Place at which the message occurred in a file (`Node`, `Position`, or `Point`, optional).\n   * @param {string} [origin] Place in code the message originates from (`string`, optional).\n   * @returns {VFileMessage}\n   */\n  message(reason, place, origin) {\n    const message = new VFileMessage(reason, place, origin)\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Info: create a message, associate it with the file, and mark the fatality\n   * as `null`.\n   * Calls `message()` internally.\n   *\n   * @param {string|Error} reason Reason for message (`string` or `Error`). Uses the stack and message of the error if given.\n   * @param {Node|Position|Point} [place] Place at which the message occurred in a file (`Node`, `Position`, or `Point`, optional).\n   * @param {string} [origin] Place in code the message originates from (`string`, optional).\n   * @returns {VFileMessage}\n   */\n  info(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = null\n\n    return message\n  }\n\n  /**\n   * Fail: create a message, associate it with the file, mark the fatality as\n   * `true`.\n   * Note: fatal errors mean a file is no longer processable.\n   * Calls `message()` internally.\n   *\n   * @param {string|Error} reason Reason for message (`string` or `Error`). Uses the stack and message of the error if given.\n   * @param {Node|Position|Point} [place] Place at which the message occurred in a file (`Node`, `Position`, or `Point`, optional).\n   * @param {string} [origin] Place in code the message originates from (`string`, optional).\n   * @returns {never}\n   */\n  fail(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {void}\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {asserts part is string}\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string|undefined} path\n * @param {string} name\n * @returns {asserts path is string}\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n","/**\n * Throw a given error.\n *\n * @param {Error | null | undefined} [error]\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (Object.prototype.toString.call(value) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn prototype === null || prototype === Object.prototype;\n}\n","/**\n * @typedef {(error?: Error|null|undefined, ...output: any[]) => void} Callback\n * @typedef {(...input: any[]) => any} Middleware\n *\n * @typedef {(...input: any[]) => void} Run Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Middleware[]} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {any[]} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @param {any[]} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware(...parameters)\n    } catch (error) {\n      /** @type {Error} */\n      const exception = error\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\nimport {bail} from 'bail'\nimport isBuffer from 'is-buffer'\nimport extend from 'extend'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\n\n// Expose a frozen processor.\nexport const unified = base().freeze()\n\nconst own = {}.hasOwnProperty\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  const transformers = trough()\n  /** @type {Processor['attachers']} */\n  const attachers = []\n  /** @type {Record<string, unknown>} */\n  let namespace = {}\n  /** @type {boolean|undefined} */\n  let frozen\n  let freezeIndex = -1\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data\n  processor.Parser = undefined\n  processor.Compiler = undefined\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  // @ts-expect-error: overloads are handled.\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  // @ts-expect-error: overloads are handled.\n  processor.run = run\n  processor.runSync = runSync\n  // @ts-expect-error: overloads are handled.\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    const destination = base()\n    let index = -1\n\n    while (++index < attachers.length) {\n      destination.use(...attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[1] = undefined\n      }\n\n      /** @type {Transformer|void} */\n      const transformer = attacher.call(processor, ...options)\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Number.POSITIVE_INFINITY\n\n    return processor\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value, ...options) {\n    /** @type {Record<string, unknown>|undefined} */\n    let settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, ...options)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...options] = value\n          addPlugin(plugin, ...options)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      let index = -1\n      /** @type {Processor['attachers'][number]|undefined} */\n      let entry\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index]\n          break\n        }\n      }\n\n      if (entry) {\n        if (isPlainObj(entry[1]) && isPlainObj(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push([...arguments])\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node)\n    processor.freeze()\n\n    if (!callback && typeof doc === 'function') {\n      callback = doc\n      doc = undefined\n    }\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done)\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    let result\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      const file = vfile(doc)\n\n      processor.run(processor.parse(file), file, (error, tree, file) => {\n        if (error || !tree || !file) {\n          done(error)\n        } else {\n          /** @type {unknown} */\n          const result = processor.stringify(tree, file)\n\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result\n          } else {\n            file.result = result\n          }\n\n          done(error, file)\n        }\n      })\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n\n    const file = vfile(doc)\n\n    processor.process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    // Prototypes do exist.\n    // type-coverage:ignore-next-line\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    // type-coverage:ignore-next-line\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || isBuffer(value)\n}\n","/**\n * @typedef Options\n * @property {boolean} [includeImageAlt=true]\n */\n\n/**\n * Get the text content of a node.\n * Prefer the node’s plain-text fields, otherwise serialize its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} node\n * @param {Options} [options]\n * @returns {string}\n */\nexport function toString(node, options) {\n  var {includeImageAlt = true} = options || {}\n  return one(node, includeImageAlt)\n}\n\n/**\n * @param {unknown} node\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction one(node, includeImageAlt) {\n  return (\n    (node &&\n      typeof node === 'object' &&\n      // @ts-ignore looks like a literal.\n      (node.value ||\n        // @ts-ignore looks like an image.\n        (includeImageAlt ? node.alt : '') ||\n        // @ts-ignore looks like a parent.\n        ('children' in node && all(node.children, includeImageAlt)) ||\n        (Array.isArray(node) && all(node, includeImageAlt)))) ||\n    ''\n  )\n}\n\n/**\n * @param {Array.<unknown>} values\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction all(values, includeImageAlt) {\n  /** @type {Array.<string>} */\n  var result = []\n  var index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt)\n  }\n\n  return result.join('')\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {number} start\n * @param {number} remove\n * @param {T[]} items\n * @returns {void}\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {unknown[]} */\n\n  let parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove) // @ts-expect-error Hush, it’s fine.\n    ;[].splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) [].splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0) // @ts-expect-error Hush, it’s fine.\n      ;[].splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {T[]} items\n * @returns {T[]}\n */\n\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine several syntax extensions into one.\n *\n * @param {Extension[]} extensions List of syntax extensions.\n * @returns {NormalizedExtension} A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all Extension to merge into.\n * @param {Extension} extension Extension to merge.\n * @returns {void}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    for (code in right) {\n      if (!hasOwnProperty.call(left, code)) left[code] = []\n      const value = right[code]\n      constructs(\n        // @ts-expect-error Looks like a list.\n        left[code],\n        Array.isArray(value) ? value : value ? [value] : []\n      )\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {unknown[]} existing\n * @param {unknown[]} list\n * @returns {void}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {unknown[]} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine several HTML extensions into one.\n *\n * @param {HtmlExtension[]} htmlExtensions List of HTML extensions.\n * @returns {HtmlExtension} A single combined extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all Extension to merge into.\n * @param {HtmlExtension} extension Extension to merge.\n * @returns {void}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nexport const unicodePunctuationRegex =\n  /[!-/:-@[-`{-~\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n */\n\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n */\n\nexport const asciiDigit = regexCheck(/\\d/)\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n */\n\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n */\n\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n */\n\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n */\n\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n\nexport const unicodeWhitespace = regexCheck(/\\s/)\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => code is number}\n */\n\nfunction regexCheck(regex) {\n  return check\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code Character code\n   * @returns {code is number} Whether the character code matches the bound regex\n   */\n\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownSpace} from 'micromark-util-character'\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {string} type\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n/** @type {Initializer} */\n\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n\n  let previous\n  return contentStart\n  /** @type {State} */\n\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n  /** @type {State} */\n\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Point} Point\n */\n\n/**\n * @typedef {Record<string, unknown>} StackState\n * @typedef {[Construct, StackState]} StackItem\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\n\nexport const document = {\n  tokenize: initializeDocument\n}\n/** @type {Construct} */\n\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n/** @type {Initializer} */\n\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {StackItem[]} */\n\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext|undefined} */\n\n  let childFlow\n  /** @type {Token|undefined} */\n\n  let childToken\n  /** @type {number} */\n\n  let lineStartOffset\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    } // Done.\n\n    return checkNewContainers(code)\n  }\n  /** @type {State} */\n\n  function documentContinue(code) {\n    continued++ // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n\n      if (childFlow) {\n        closeFlow()\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point|undefined} */\n\n      let point // Find the flow chunk.\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      let index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n\n    return start(code)\n  }\n  /** @type {State} */\n\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      } // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      } // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n\n      self.interrupt = Boolean(childFlow.currentConstruct)\n    } // Check if there is a new container.\n\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n  /** @type {State} */\n\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n  /** @type {State} */\n\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n  /** @type {State} */\n\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState]) // Try another.\n\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n  /** @type {State} */\n\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow')) // Get ready for the next line.\n\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n  /**\n   * @param {Token} token\n   * @param {boolean} [eof]\n   * @returns {void}\n   */\n\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream) // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset &&\n          (!childFlow.events[index][1].end || // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean|undefined} */\n\n      let seen\n      /** @type {Point|undefined} */\n\n      let point // Find the previous chunk (the one before the lazy line).\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n\n          seen = true\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n    }\n  }\n  /**\n   * @param {number} size\n   * @returns {void}\n   */\n\n  function exitContainers(size) {\n    let index = stack.length // Exit open containers.\n\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContainer(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n  /** @type {State} */\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {splice} from 'micromark-util-chunked'\n\n/**\n * Tokenize subcontent.\n *\n * @param {Event[]} events\n * @returns {boolean}\n */\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n\n  let event\n  /** @type {number|undefined} */\n\n  let lineIndex\n  /** @type {number} */\n\n  let otherIndex\n  /** @type {Event} */\n\n  let otherEvent\n  /** @type {Event[]} */\n\n  let parameters\n  /** @type {Event[]} */\n\n  let subevents\n  /** @type {boolean|undefined} */\n\n  let more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index] // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    } // Enter.\n\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    } // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start) // Switch container exit w/ line endings.\n\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n/**\n * Tokenize embedded tokens.\n *\n * @param {Event[]} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\n\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {number[]} */\n\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {[number, number][]} */\n\n  const jumps = []\n  /** @type {Record<string, number>} */\n\n  const gaps = {}\n  /** @type {Chunk[]} */\n\n  let stream\n  /** @type {Token|undefined} */\n\n  let previous\n  let index = -1\n  /** @type {Token|undefined} */\n\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start] // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n\n    startPositions.push(startPosition)\n\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n\n      if (!current.next) {\n        stream.push(null)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    } // Unravel the next token.\n\n    previous = current\n    current = current.next\n  } // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n\n  current = token\n\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start) // Help GC.\n\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  } // Help GC.\n\n  tokenizer.events = [] // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  } // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n\n  index = breaks.length\n\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n\n  index = -1\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n/** @type {Construct} */\n\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\n\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token} */\n  let previous\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n  /** @type {State} */\n\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return data\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n  /** @type {State} */\n\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    const tail = self.events[self.events.length - 1]\n\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n/** @type {Initializer} */\n\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding, // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n  /** @type {State} */\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n  /** @type {State} */\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n/**\n * @param {'string'|'text'} field\n * @returns {InitialConstruct}\n */\n\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n  /** @type {Initializer} */\n\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n    /** @type {State} */\n\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n    /** @type {State} */\n\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      } // Data.\n\n      effects.consume(code)\n      return data\n    }\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n\n      const list = constructs[code]\n      let index = -1\n\n      if (list) {\n        while (++index < list.length) {\n          const item = list[index]\n\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n\n      return false\n    }\n  }\n}\n/**\n * @param {Resolver} [extraResolver]\n * @returns {Resolver}\n */\n\nfunction createResolver(extraResolver) {\n  return resolveAllText\n  /** @type {Resolver} */\n\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number|undefined} */\n\n    let enter // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\n\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = -1\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean|undefined} */\n\n      let tabs\n\n      while (index--) {\n        const chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        } // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {{resolveAll?: Resolver}[]} constructs\n * @param {Event[]} events\n * @param {TokenizeContext} context\n * @returns {Event[]}\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Resolver[]} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n */\n\n/**\n * @typedef Info\n * @property {() => void} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {void}\n */\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_index'|'_bufferIndex'>} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n\n  const columnStart = {}\n  /** @type {Construct[]} */\n\n  const resolveAllConstructs = []\n  /** @type {Chunk[]} */\n\n  let chunks = []\n  /** @type {Token[]} */\n\n  let stack = []\n  /** @type {boolean|undefined} */\n\n  let consumed = true\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n  /**\n   * The state function.\n   *\n   * @type {State|void}\n   */\n\n  let state = initialize.tokenize.call(context, effects)\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n\n  let expectedCode\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n\n  return context\n  /** @type {TokenizeContext['write']} */\n\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main() // Exit if we’re not done, resolve might change stuff.\n\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n\n    addResult(initialize, 0) // Otherwise, resolve, and exit.\n\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  } //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n  /** @type {TokenizeContext['sliceStream']} */\n\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n  /** @type {TokenizeContext['now']} */\n\n  function now() {\n    return Object.assign({}, point)\n  }\n  /** @type {TokenizeContext['defineSkip']} */\n\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  } //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {void}\n   */\n\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index] // If we’re in a buffer chunk, loop through it.\n\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {void}\n   */\n\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n  /** @type {Effects['consume']} */\n\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    } // Not in a string chunk.\n\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++ // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    } // Expose the previous character.\n\n    context.previous = code // Mark as consumed.\n\n    consumed = true\n  }\n  /** @type {Effects['enter']} */\n\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n  /** @type {Effects['exit']} */\n\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {Record<string, unknown>} [fields]\n   */\n\n  function constructFactory(onreturn, fields) {\n    return hook\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Construct|Construct[]|ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State} [bogusState]\n     * @returns {State}\n     */\n\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Construct[]} */\n      let listOfConstructs\n      /** @type {number} */\n\n      let constructIndex\n      /** @type {Construct} */\n\n      let currentConstruct\n      /** @type {Info} */\n\n      let info\n      return Array.isArray(constructs)\n        ? /* c8 ignore next 1 */\n          handleListOfConstructs(constructs)\n        : 'tokenize' in constructs // @ts-expect-error Looks like a construct.\n        ? handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n\n      function handleMapOfConstructs(map) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Construct[]} list\n       * @returns {State}\n       */\n\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n\n        if (list.length === 0) {\n          return bogusState\n        }\n\n        return handleConstruct(list[constructIndex])\n      }\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n\n      function handleConstruct(construct) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n      /** @type {State} */\n\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n      /** @type {State} */\n\n      function nok(code) {\n        consumed = true\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {void}\n   */\n\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n    /**\n     * Restore state.\n     *\n     * @returns {void}\n     */\n\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {void}\n   */\n\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Chunk[]} chunks\n * @param {Pick<Token, 'start'|'end'>} token\n * @returns {Chunk[]}\n */\n\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Chunk[]} */\n\n  let view\n\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view[0] = view[0].slice(startBufferIndex)\n    }\n\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Chunk[]} chunks\n * @param {boolean} [expandTabs=false]\n * @returns {string}\n */\n\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {string[]} */\n\n  const result = []\n  /** @type {boolean|undefined} */\n\n  let atTab\n\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n\n    let value\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n\n        case -4: {\n          value = '\\n'\n          break\n        }\n\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n\n    atTab = chunk === -2\n    result.push(value)\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('thematicBreak')\n    marker = code\n    return atBreak(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    if (size < 3 || (code !== null && !markdownLineEnding(code))) {\n      return nok(code)\n    }\n\n    effects.exit('thematicBreak')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit('thematicBreakSequence')\n    return atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @typedef {Record<string, unknown> & {marker: Code, type: string, size: number}} ListContainerState\n * @typedef {TokenizeContext & {containerState: ListContainerState}} TokenizeContextWithState\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n/** @type {Construct} */\n\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n/** @type {Construct} */\n\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n/** @type {Construct} */\n\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n\n    return nok(code)\n  }\n  /**\n   * @type {State}\n   **/\n\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine, // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n  /** @type {State} */\n\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine // We have a blank line.\n    // Still, try to consume at most the items size.\n\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n  /** @type {State} */\n\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n  /** @type {State} */\n\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true // As we’re closing flow, we’re no longer interrupting.\n\n    self.interrupt = undefined\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n/**\n * @type {Exiter}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(blockQuote, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n/** @type {Exiter} */\n\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} literalType\n * @param {string} literalMarkerType\n * @param {string} rawType\n * @param {string} stringType\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return destinationEnclosedBefore\n    }\n\n    if (code === null || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationRaw(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return destinationEnclosedBefore(code)\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed\n  }\n  /** @type {State} */\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return destinationEnclosed\n    }\n\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code)\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString')\n        effects.exit(stringType)\n        effects.exit(rawType)\n        effects.exit(type)\n        return ok(code)\n      }\n\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code)\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (asciiControl(code)) return nok(code)\n    effects.consume(code)\n    return code === 92 ? destinationRawEscape : destinationRaw\n  }\n  /** @type {State} */\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    return destinationRaw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @this {TokenizeContext}\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      (code === 93 && !data) ||\n      /* Hidden footnotes hook */\n\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs) ||\n      size > 999\n    ) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    data = data || !markdownSpace(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    marker = code === 40 ? 41 : code\n    return atFirstTitleBreak\n  }\n  /** @type {State} */\n\n  function atFirstTitleBreak(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atTitleBreak(code)\n  }\n  /** @type {State} */\n\n  function atTitleBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return atFirstTitleBreak(marker)\n    }\n\n    if (code === null) {\n      return nok(code)\n    } // Note: blank lines can’t exist in content.\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atTitleBreak, 'linePrefix')\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return title(code)\n  }\n  /** @type {State} */\n\n  function title(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atTitleBreak(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? titleEscape : title\n  }\n  /** @type {State} */\n\n  function titleEscape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return title\n    }\n\n    return title(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n","/**\n * Normalize an identifier (such as used in definitions).\n *\n * @param {string} value\n * @returns {string}\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n      .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n/** @type {Construct} */\n\nconst titleConstruct = {\n  tokenize: tokenizeTitle,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n\n  let identifier\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('definition')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Note: blank lines can’t exist in content.\n\n      return factoryWhitespace(\n        effects,\n        factoryDestination(\n          effects,\n          effects.attempt(\n            titleConstruct,\n            factorySpace(effects, after, 'whitespace'),\n            factorySpace(effects, after, 'whitespace')\n          ),\n          nok,\n          'definitionDestination',\n          'definitionDestinationLiteral',\n          'definitionDestinationLiteralMarker',\n          'definitionDestinationRaw',\n          'definitionDestinationString'\n        )\n      )\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      if (!self.parser.defined.includes(identifier)) {\n        self.parser.defined.push(identifier)\n      }\n\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTitle(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, before)(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function before(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        nok,\n        'definitionTitle',\n        'definitionTitleMarker',\n        'definitionTitleString'\n      )(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n/** @type {Construct} */\n\nconst indentedContent = {\n  tokenize: tokenizeIndentedContent,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeIndented')\n    return factorySpace(effects, afterStartPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterStartPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? afterPrefix(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(indentedContent, afterPrefix, after)(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return content(code)\n  }\n  /** @type {State} */\n\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return afterPrefix(code)\n    }\n\n    effects.consume(code)\n    return content\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeIndented')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndentedContent(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? start(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n/** @type {Resolver} */\n\nfunction resolveToSetextUnderline(events, context) {\n  let index = events.length\n  /** @type {number|undefined} */\n\n  let content\n  /** @type {number|undefined} */\n\n  let text\n  /** @type {number|undefined} */\n\n  let definition // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    } // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // Change the paragraph to setext heading text.\n\n  events[text][1].type = 'setextHeadingText' // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  } // Add the heading exit at the end.\n\n  events.push(['exit', heading, context])\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  /** @type {boolean} */\n\n  let paragraph // Find an opening.\n\n  while (index--) {\n    // Skip enter/exit of line ending, line prefix, and content.\n    // We can now either have a definition or a paragraph.\n    if (\n      self.events[index][1].type !== 'lineEnding' &&\n      self.events[index][1].type !== 'linePrefix' &&\n      self.events[index][1].type !== 'content'\n    ) {\n      paragraph = self.events[index][1].type === 'paragraph'\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      effects.enter('setextHeadingLineSequence')\n      marker = code\n      return closingSequence(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function closingSequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return closingSequence\n    }\n\n    effects.exit('setextHeadingLineSequence')\n    return factorySpace(effects, closingSequenceEnd, 'lineSuffix')(code)\n  }\n  /** @type {State} */\n\n  function closingSequenceEnd(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result\n * in more relaxed rules (condition 6): because they are known blocks, the\n * HTML-like syntax doesn’t have to be strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.29/#html-blocks>.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'source',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result in\n * HTML that can include lines w/o exiting, until a closing tag also in this\n * list is found (condition 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.29/#html-blocks>.\n *\n * Note that `textarea` is not available in `CommonMark@0.29` but has been\n * merged to the primary branch and is slated to be released in the next release\n * of CommonMark.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n/** @type {Construct} */\n\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n/** @type {Construct} */\n\nconst nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start // Remove the line prefix.\n\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n\n  let kind\n  /** @type {boolean} */\n\n  let startTag\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {Code} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationStart\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      kind = 3 // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      startTag = true\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code)\n      kind = 2\n      return commentOpenInside\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      kind = 5\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      kind = 4\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length\n        ? self.interrupt\n          ? ok\n          : continuation\n        : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      if (\n        code !== 47 &&\n        startTag &&\n        htmlRawNames.includes(buffer.toLowerCase())\n      ) {\n        kind = 1\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        kind = 6\n\n        if (code === 47) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      kind = 7 // Do not support complete HTML when interrupting\n\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : startTag\n        ? completeAttributeNameBefore(code)\n        : completeClosingTagAfter(code)\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    marker = null\n    return completeAttributeValueUnquoted(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuoted(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    if (code === marker) {\n      effects.consume(code)\n      return completeAttributeValueQuotedAfter\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return code === null || markdownLineEnding(code)\n      ? continuation(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code)\n      return continuationCharacterDataInside\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(\n        nextBlankConstruct,\n        continuationClose,\n        continuationAtLineEnding\n      )(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n  /** @type {State} */\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData')\n    return htmlContinueStart(code)\n  }\n  /** @type {State} */\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        {\n          tokenize: htmlLineEnd,\n          partial: true\n        },\n        htmlContinueStart,\n        done\n      )(code)\n    }\n\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n  /** @type {Tokenizer} */\n\n  function htmlLineEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {State} */\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.includes(buffer.toLowerCase())) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return done(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('htmlFlow')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.exit('htmlFlowData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n\n  const closingFenceConstruct = {\n    tokenize: tokenizeClosingFence,\n    partial: true\n  }\n  /** @type {Construct} */\n\n  const nonLazyLine = {\n    tokenize: tokenizeNonLazyLine,\n    partial: true\n  }\n  const tail = this.events[this.events.length - 1]\n  const initialPrefix =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    marker = code\n    return sequenceOpen(code)\n  }\n  /** @type {State} */\n\n  function sequenceOpen(code) {\n    if (code === marker) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit('codeFencedFenceSequence')\n    return sizeOpen < 3\n      ? nok(code)\n      : factorySpace(effects, infoOpen, 'whitespace')(code)\n  }\n  /** @type {State} */\n\n  function infoOpen(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n  /** @type {State} */\n\n  function info(code) {\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, infoAfter, 'whitespace')(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return info\n  }\n  /** @type {State} */\n\n  function infoAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n  /** @type {State} */\n\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return openAfter(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return meta\n  }\n  /** @type {State} */\n\n  function openAfter(code) {\n    effects.exit('codeFencedFence')\n    return self.interrupt ? ok(code) : contentStart(code)\n  }\n  /** @type {State} */\n\n  function contentStart(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        nonLazyLine,\n        effects.attempt(\n          closingFenceConstruct,\n          after,\n          initialPrefix\n            ? factorySpace(\n                effects,\n                contentStart,\n                'linePrefix',\n                initialPrefix + 1\n              )\n            : contentStart\n        ),\n        after\n      )(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return contentContinue(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return contentStart(code)\n    }\n\n    effects.consume(code)\n    return contentContinue\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeNonLazyLine(effects, ok, nok) {\n    const self = this\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeClosingFence(effects, ok, nok) {\n    let size = 0\n    return factorySpace(\n      effects,\n      closingSequenceStart,\n      'linePrefix',\n      this.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n    /** @type {State} */\n\n    function closingSequenceStart(code) {\n      effects.enter('codeFencedFence')\n      effects.enter('codeFencedFenceSequence')\n      return closingSequence(code)\n    }\n    /** @type {State} */\n\n    function closingSequence(code) {\n      if (code === marker) {\n        effects.consume(code)\n        size++\n        return closingSequence\n      }\n\n      if (size < sizeOpen) return nok(code)\n      effects.exit('codeFencedFenceSequence')\n      return factorySpace(effects, closingSequenceEnd, 'whitespace')(code)\n    }\n    /** @type {State} */\n\n    function closingSequenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n","/* eslint-env browser */\n\nvar semicolon = 59 // `;`\n/** @type {HTMLElement} */\nvar element\n\n/**\n * @param {string} characters\n * @returns {string|false}\n */\nexport function decodeEntity(characters) {\n  var entity = '&' + characters + ';'\n  /** @type {string} */\n  var char\n\n  element = element || document.createElement('i')\n  element.innerHTML = entity\n  char = element.textContent\n\n  // Some entities do not require the closing semicolon (`&not` - for instance),\n  // which leads to situations where parsing the assumed entity of `&notit;`\n  // will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing and the entity to\n  // decode was not a semicolon (`&semi;`), we can assume that the matching was\n  // incomplete\n  if (char.charCodeAt(char.length - 1) === semicolon && characters !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the entity was not valid\n  return char === entity ? false : char\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {decodeEntity} from 'parse-entities/decode-entity.js'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n\n  let max\n  /** @type {(code: Code) => code is number} */\n\n  let test\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n  /** @type {State} */\n\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n  /** @type {State} */\n\n  function value(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue')\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeEntity(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {asciiPunctuation} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n/** @type {Construct} */\n\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\n\nconst fullReferenceConstruct = {\n  tokenize: tokenizeFullReference\n}\n/** @type {Construct} */\n\nconst collapsedReferenceConstruct = {\n  tokenize: tokenizeCollapsedReference\n}\n/** @type {Resolver} */\n\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  /** @type {Token} */\n\n  let token\n\n  while (++index < events.length) {\n    token = events[index][1]\n\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n\n  return events\n}\n/** @type {Resolver} */\n\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n\n  let token\n  /** @type {number|undefined} */\n\n  let open\n  /** @type {number|undefined} */\n\n  let close\n  /** @type {Event[]} */\n\n  let media // Find an opening.\n\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      } // Mark other link openings as inactive, as we can’t have links in\n      // links.\n\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ] // Opening marker.\n\n  media = push(media, events.slice(open + 1, open + offset + 3)) // Text open.\n\n  media = push(media, [['enter', text, context]]) // Between.\n\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  ) // Text close, marker close, label close.\n\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ]) // Reference, resource, or so.\n\n  media = push(media, events.slice(close + 1)) // Media close.\n\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n\n  let labelStart\n  /** @type {boolean} */\n\n  let defined // Find an opening.\n\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code)\n    } // It’s a balanced bracket, but contains a link.\n\n    if (labelStart._inactive) return balanced(code)\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return afterLabelEnd\n  }\n  /** @type {State} */\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        ok,\n        defined ? ok : balanced\n      )(code)\n    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n\n    if (code === 91) {\n      return effects.attempt(\n        fullReferenceConstruct,\n        ok,\n        defined\n          ? effects.attempt(collapsedReferenceConstruct, ok, balanced)\n          : balanced\n      )(code)\n    } // Shortcut reference: `[asd]`?\n\n    return defined ? ok(code) : balanced(code)\n  }\n  /** @type {State} */\n\n  function balanced(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return factoryWhitespace(effects, open)\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 41) {\n      return end(code)\n    }\n\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      nok,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      3\n    )(code)\n  }\n  /** @type {State} */\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, between)(code)\n      : end(code)\n  }\n  /** @type {State} */\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factoryWhitespace(effects, end),\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      afterLabel,\n      nok,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function afterLabel(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n\n/**\n * Classify whether a character code represents whitespace, punctuation, or\n * something else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * Note that eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n * @returns {number|undefined}\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Point} Point\n */\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n\n  let open\n  /** @type {Token} */\n\n  let group\n  /** @type {Token} */\n\n  let text\n  /** @type {Token} */\n\n  let openingSequence\n  /** @type {Token} */\n\n  let closingSequence\n  /** @type {number} */\n\n  let use\n  /** @type {Event[]} */\n\n  let nextEvents\n  /** @type {number} */\n\n  let offset // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index // Now walk back to find an opener.\n\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open && // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          } // Number of markers to use from the sequence.\n\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = [] // If there are more markers in the opening, add them before.\n\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          } // Opening.\n\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ]) // Between.\n\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          ) // Closing.\n\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ]) // If there are more markers in the closing, add them after.\n\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  } // Remove remaining sequences.\n\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('attentionSequence')\n    marker = code\n    return sequence(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return sequence\n    }\n\n    const token = effects.exit('attentionSequence')\n    const after = classifyCharacter(code)\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {void}\n */\n\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n/** @type {Extension['document']} */\n\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n/** @type {Extension['contentInitial']} */\n\nexport const contentInitial = {\n  [91]: definition\n}\n/** @type {Extension['flowInitial']} */\n\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n/** @type {Extension['flow']} */\n\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n/** @type {Extension['string']} */\n\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n/** @type {Extension['text']} */\n\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n/** @type {Extension['insideSpan']} */\n\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n/** @type {Extension['attentionMarkers']} */\n\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n/** @type {Extension['disable']} */\n\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n/** @type {Resolver} */\n\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n\n  let content\n  /** @type {Token} */\n\n  let text // Prefix whitespace, part of the opening.\n\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  } // Suffix whitespace, part of the closing.\n\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      // @ts-expect-error Constants are fine to assign.\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  const self = this\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('atxHeading')\n    effects.enter('atxHeadingSequence')\n    return fenceOpenInside(code)\n  }\n  /** @type {State} */\n\n  function fenceOpenInside(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return fenceOpenInside\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return self.interrupt ? ok(code) : headingBreak(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function headingBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequence(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headingBreak, 'whitespace')(code)\n    }\n\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequence\n    }\n\n    effects.exit('atxHeadingSequence')\n    return headingBreak(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return headingBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* Hidden footnotes hook */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 1\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    return asciiAtext(code) ? emailAtext(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function schemeOrEmailAtext(code) {\n    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)\n      ? schemeInsideOrEmailAtext(code)\n      : emailAtext(code)\n  }\n  /** @type {State} */\n\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return urlInside\n    }\n\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n  /** @type {State} */\n\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      return end(code)\n    }\n\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n  /** @type {State} */\n\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === 62) {\n      // Exit, then change the type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      return end(code)\n    }\n\n    return emailValue(code)\n  }\n  /** @type {State} */\n\n  function emailValue(code) {\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      effects.consume(code)\n      return code === 45 ? emailValue : emailLabel\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.exit('autolink')\n    return ok\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>|undefined} */\n\n  let marker\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {State} */\n\n  let returnState\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpen\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpen\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentStart\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentStartDash\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n  /** @type {State} */\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return end\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length ? cdata : cdataOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n  /** @type {State} */\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n  /** @type {State} */\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n  /** @type {State} */\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n  /** @type {State} */\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    marker = undefined\n    return tagOpenAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  } // We can’t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  /** @type {State} */\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(\n      effects,\n      afterPrefix,\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* Hidden footnotes hook. */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('escapeMarker')\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n/** @type {Resolver} */\n\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n\n  let index\n  /** @type {number|undefined} */\n\n  let enter // If we start and end with an EOL or a space.\n\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex // And we have data.\n\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  } // Merge adjacent spaces and data.\n\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n/** @type {Previous} */\n\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n\n  let size\n  /** @type {Token} */\n\n  let token\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return openingSequence(code)\n  }\n  /** @type {State} */\n\n  function openingSequence(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return openingSequence\n    }\n\n    effects.exit('codeTextSequence')\n    return gap(code)\n  }\n  /** @type {State} */\n\n  function gap(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    } // Closing fence?\n    // Could also be data.\n\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return closingSequence(code)\n    } // Tabs don’t work, and virtual spaces don’t make sense.\n\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return gap\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return gap\n    } // Data.\n\n    effects.enter('codeTextData')\n    return data(code)\n  } // In code.\n\n  /** @type {State} */\n\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return gap(code)\n    }\n\n    effects.consume(code)\n    return data\n  } // Closing fence.\n\n  /** @type {State} */\n\n  function closingSequence(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return closingSequence\n    } // Done!\n\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    } // More or less accents: mark as data.\n\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Create} Create\n */\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {text, string} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n/**\n * @param {ParseOptions} [options]\n * @returns {ParseContext}\n */\n\nexport function parse(options = {}) {\n  /** @type {FullNormalizedExtension} */\n  // @ts-expect-error `defaultConstructs` is full, so the result will be too.\n  const constructs = combineExtensions(\n    // @ts-expect-error Same as above.\n    [defaultConstructs].concat(options.extensions || [])\n  )\n  /** @type {ParseContext} */\n\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n  /**\n   * @param {InitialConstruct} initial\n   */\n\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding} [encoding]\n * @param {boolean} [end=false]\n * @returns {Chunk[]}\n */\nconst search = /[\\0\\t\\n\\r]/g\n/**\n * @returns {Preprocessor}\n */\n\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean|undefined} */\n\n  let start = true\n  /** @type {boolean|undefined} */\n\n  let atCarriageReturn\n  return preprocessor\n  /** @type {Preprocessor} */\n\n  function preprocessor(value, encoding, end) {\n    /** @type {Chunk[]} */\n    const chunks = []\n    /** @type {RegExpMatchArray|null} */\n\n    let match\n    /** @type {number} */\n\n    let next\n    /** @type {number} */\n\n    let startPosition\n    /** @type {number} */\n\n    let endPosition\n    /** @type {Code} */\n\n    let code // @ts-expect-error `Buffer` does allow an encoding.\n\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n\n            while (column++ < next) chunks.push(-1)\n\n            break\n          }\n\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n\n    return chunks\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {Root|Root['children'][number]} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist').Point} Point\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n */\n\n/**\n * @typedef _CompileDataFields\n * @property {boolean|undefined} expectingFirstListItemValue\n * @property {boolean|undefined} flowCodeInside\n * @property {boolean|undefined} setextHeadingSlurpLineEnding\n * @property {boolean|undefined} atHardBreak\n * @property {'collapsed'|'full'} referenceType\n * @property {boolean|undefined} inReference\n * @property {'characterReferenceMarkerHexadecimal'|'characterReferenceMarkerNumeric'} characterReferenceType\n *\n * @typedef {Record<string, unknown> & Partial<_CompileDataFields>} CompileData\n *\n * @typedef {(tree: Root) => Root|void} Transform\n * @typedef {(this: CompileContext, token: Token) => void} Handle\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n * @typedef {Record<string, Record<string, unknown>|Array.<unknown>> & {canContainEols: Array.<string>, transforms: Array.<Transform>, enter: Handles, exit: Handles}} NormalizedExtension\n * @typedef {Partial<NormalizedExtension>} Extension\n *   An mdast extension changes how markdown tokens are turned into mdast.\n *\n * @typedef CompileContext\n *   mdast compiler context\n * @property {Array.<Node>} stack\n * @property {Array.<Token>} tokenStack\n * @property {(key: string, value?: unknown) => void} setData\n *   Set data into the key-value store.\n * @property {<K extends string>(key: K) => CompileData[K]} getData\n *   Get data from the key-value store.\n * @property {(this: CompileContext) => void} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {<N extends Node>(this: CompileContext, node: N, token: Token) => N} enter\n *   Enter a token.\n * @property {(this: CompileContext, token: Token) => Node} exit\n *   Exit a token.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {NormalizedExtension} config\n *   Configuration.\n *\n * @typedef {{mdastExtensions?: Array.<Extension|Array.<Extension>>}} FromMarkdownOptions\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n */\nimport {toString} from 'mdast-util-to-string'\nimport {parse} from 'micromark/lib/parse.js'\nimport {preprocess} from 'micromark/lib/preprocess.js'\nimport {postprocess} from 'micromark/lib/postprocess.js'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeEntity} from 'parse-entities/decode-entity.js'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n/**\n * @param value Markdown to parse (`string` or `Buffer`).\n * @param [encoding] Character encoding to understand `value` as when it’s a `Buffer` (`string`, default: `'utf8'`).\n * @param [options] Configuration\n */\n\nexport const fromMarkdown =\n  /**\n   * @type {(\n   *   ((value: Value, encoding: Encoding, options?: Options) => Root) &\n   *   ((value: Value, options?: Options) => Root)\n   * )}\n   */\n\n  /**\n   * @param {Value} value\n   * @param {Encoding} [encoding]\n   * @param {Options} [options]\n   * @returns {Root}\n   */\n  function (value, encoding, options) {\n    if (typeof encoding !== 'string') {\n      options = encoding\n      encoding = undefined\n    }\n\n    return compiler(options)(\n      postprocess(\n        parse(options).document().write(preprocess()(value, encoding, true))\n      )\n    )\n  }\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options} [options]\n */\n\nfunction compiler(options = {}) {\n  /** @type {NormalizedExtension} */\n  // @ts-expect-error: our base has all required fields, so the result will too.\n  const config = configure(\n    {\n      transforms: [],\n      canContainEols: [\n        'emphasis',\n        'fragment',\n        'heading',\n        'paragraph',\n        'strong'\n      ],\n      enter: {\n        autolink: opener(link),\n        autolinkProtocol: onenterdata,\n        autolinkEmail: onenterdata,\n        atxHeading: opener(heading),\n        blockQuote: opener(blockQuote),\n        characterEscape: onenterdata,\n        characterReference: onenterdata,\n        codeFenced: opener(codeFlow),\n        codeFencedFenceInfo: buffer,\n        codeFencedFenceMeta: buffer,\n        codeIndented: opener(codeFlow, buffer),\n        codeText: opener(codeText, buffer),\n        codeTextData: onenterdata,\n        data: onenterdata,\n        codeFlowValue: onenterdata,\n        definition: opener(definition),\n        definitionDestinationString: buffer,\n        definitionLabelString: buffer,\n        definitionTitleString: buffer,\n        emphasis: opener(emphasis),\n        hardBreakEscape: opener(hardBreak),\n        hardBreakTrailing: opener(hardBreak),\n        htmlFlow: opener(html, buffer),\n        htmlFlowData: onenterdata,\n        htmlText: opener(html, buffer),\n        htmlTextData: onenterdata,\n        image: opener(image),\n        label: buffer,\n        link: opener(link),\n        listItem: opener(listItem),\n        listItemValue: onenterlistitemvalue,\n        listOrdered: opener(list, onenterlistordered),\n        listUnordered: opener(list),\n        paragraph: opener(paragraph),\n        reference: onenterreference,\n        referenceString: buffer,\n        resourceDestinationString: buffer,\n        resourceTitleString: buffer,\n        setextHeading: opener(heading),\n        strong: opener(strong),\n        thematicBreak: opener(thematicBreak)\n      },\n      exit: {\n        atxHeading: closer(),\n        atxHeadingSequence: onexitatxheadingsequence,\n        autolink: closer(),\n        autolinkEmail: onexitautolinkemail,\n        autolinkProtocol: onexitautolinkprotocol,\n        blockQuote: closer(),\n        characterEscapeValue: onexitdata,\n        characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n        characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n        characterReferenceValue: onexitcharacterreferencevalue,\n        codeFenced: closer(onexitcodefenced),\n        codeFencedFence: onexitcodefencedfence,\n        codeFencedFenceInfo: onexitcodefencedfenceinfo,\n        codeFencedFenceMeta: onexitcodefencedfencemeta,\n        codeFlowValue: onexitdata,\n        codeIndented: closer(onexitcodeindented),\n        codeText: closer(onexitcodetext),\n        codeTextData: onexitdata,\n        data: onexitdata,\n        definition: closer(),\n        definitionDestinationString: onexitdefinitiondestinationstring,\n        definitionLabelString: onexitdefinitionlabelstring,\n        definitionTitleString: onexitdefinitiontitlestring,\n        emphasis: closer(),\n        hardBreakEscape: closer(onexithardbreak),\n        hardBreakTrailing: closer(onexithardbreak),\n        htmlFlow: closer(onexithtmlflow),\n        htmlFlowData: onexitdata,\n        htmlText: closer(onexithtmltext),\n        htmlTextData: onexitdata,\n        image: closer(onexitimage),\n        label: onexitlabel,\n        labelText: onexitlabeltext,\n        lineEnding: onexitlineending,\n        link: closer(onexitlink),\n        listItem: closer(),\n        listOrdered: closer(),\n        listUnordered: closer(),\n        paragraph: closer(),\n        referenceString: onexitreferencestring,\n        resourceDestinationString: onexitresourcedestinationstring,\n        resourceTitleString: onexitresourcetitlestring,\n        resource: onexitresource,\n        setextHeading: closer(onexitsetextheading),\n        setextHeadingLineSequence: onexitsetextheadinglinesequence,\n        setextHeadingText: onexitsetextheadingtext,\n        strong: closer(),\n        thematicBreak: closer()\n      }\n    },\n    options.mdastExtensions || []\n  )\n  /** @type {CompileData} */\n\n  const data = {}\n  return compile\n  /**\n   * @param {Array.<Event>} events\n   * @returns {Root}\n   */\n\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {CompileContext['stack']} */\n\n    const stack = [tree]\n    /** @type {CompileContext['tokenStack']} */\n\n    const tokenStack = []\n    /** @type {Array.<number>} */\n\n    const listStack = []\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n\n    const context = {\n      stack,\n      tokenStack,\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      setData,\n      getData\n    }\n    let index = -1\n\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    if (tokenStack.length > 0) {\n      throw new Error(\n        'Cannot close document, a token (`' +\n          tokenStack[tokenStack.length - 1].type +\n          '`, ' +\n          stringifyPosition({\n            start: tokenStack[tokenStack.length - 1].start,\n            end: tokenStack[tokenStack.length - 1].end\n          }) +\n          ') is still open'\n      )\n    } // Figure out `root` position.\n\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n    index = -1\n\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n\n    return tree\n  }\n  /**\n   * @param {Array.<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token|undefined} */\n\n    let listItem\n    /** @type {number|undefined} */\n\n    let lineIndex\n    /** @type {number|undefined} */\n\n    let firstBlankLineIndex\n    /** @type {boolean|undefined} */\n\n    let atMarker\n\n    while (++index <= length) {\n      const event = events[index]\n\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            // @ts-expect-error Patched.\n            listItem._spread = true\n          } // Fix position.\n\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        } // Create a new list item.\n\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            // @ts-expect-error Patched\n            _spread: false,\n            start: Object.assign({}, event[1].start)\n          } // @ts-expect-error: `listItem` is most definitely defined, TS...\n\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    } // @ts-expect-error Patched.\n\n    events[start][1]._spread = listSpread\n    return length\n  }\n  /**\n   * @type {CompileContext['setData']}\n   * @param [value]\n   */\n\n  function setData(key, value) {\n    data[key] = value\n  }\n  /**\n   * @type {CompileContext['getData']}\n   * @template {string} K\n   * @param {K} key\n   * @returns {CompileData[K]}\n   */\n\n  function getData(key) {\n    return data[key]\n  }\n  /**\n   * @param {Point} d\n   * @returns {Point}\n   */\n\n  function point(d) {\n    return {\n      line: d.line,\n      column: d.column,\n      offset: d.offset\n    }\n  }\n  /**\n   * @param {(token: Token) => Node} create\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function opener(create, and) {\n    return open\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n  /** @type {CompileContext['buffer']} */\n\n  function buffer() {\n    // @ts-expect-error: Custom node type to collect text.\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n  /**\n   * @type {CompileContext['enter']}\n   * @template {Node} N\n   * @this {CompileContext}\n   * @param {N} node\n   * @param {Token} token\n   * @returns {N}\n   */\n\n  function enter(node, token) {\n    /** @type {Parent} */\n    // @ts-expect-error: Assume parent.\n    const parent = this.stack[this.stack.length - 1]\n    parent.children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push(token) // @ts-expect-error: `end` will be patched later.\n\n    node.position = {\n      start: point(token.start)\n    }\n    return node\n  }\n  /**\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function closer(and) {\n    return close\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n  /** @type {CompileContext['exit']} */\n\n  function exit(token) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open.type !== token.type) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): a different token (`' +\n          open.type +\n          '`, ' +\n          stringifyPosition({\n            start: open.start,\n            end: open.end\n          }) +\n          ') is open'\n      )\n    }\n\n    node.position.end = point(token.end)\n    return node\n  }\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n\n  function resume() {\n    return toString(this.stack.pop())\n  } //\n  // Handlers.\n  //\n\n  /** @type {Handle} */\n\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n  /** @type {Handle} */\n\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      this.stack[this.stack.length - 2].start = Number.parseInt(\n        this.sliceSerialize(token),\n        10\n      )\n      setData('expectingFirstListItemValue')\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    this.stack[this.stack.length - 1].lang = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    this.stack[this.stack.length - 1].meta = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n  /** @type {Handle} */\n\n  function onexitcodefenced() {\n    const data = this.resume()\n    this.stack[this.stack.length - 1].value = data.replace(\n      /^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g,\n      ''\n    )\n    setData('flowCodeInside')\n  }\n  /** @type {Handle} */\n\n  function onexitcodeindented() {\n    const data = this.resume()\n    this.stack[this.stack.length - 1].value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitionlabelstring(token) {\n    // Discard label, use the source content instead.\n    const label = this.resume()\n    this.stack[this.stack.length - 1].label = label\n    this.stack[this.stack.length - 1].identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    this.stack[this.stack.length - 1].title = data\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    this.stack[this.stack.length - 1].url = data\n  }\n  /** @type {Handle} */\n\n  function onexitatxheadingsequence(token) {\n    if (!this.stack[this.stack.length - 1].depth) {\n      this.stack[this.stack.length - 1].depth =\n        this.sliceSerialize(token).length\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadinglinesequence(token) {\n    this.stack[this.stack.length - 1].depth =\n      this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n  /** @type {Handle} */\n\n  function onenterdata(token) {\n    /** @type {Parent} */\n    // @ts-expect-error: assume parent.\n    const parent = this.stack[this.stack.length - 1]\n    /** @type {Node} */\n    // @ts-expect-error: assume child.\n\n    let tail = parent.children[parent.children.length - 1]\n\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text() // @ts-expect-error: we’ll add `end` later.\n\n      tail.position = {\n        start: point(token.start)\n      }\n      parent.children.push(tail)\n    }\n\n    this.stack.push(tail)\n  }\n  /** @type {Handle} */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitlineending(token) {\n    /** @type {Parent} */\n    // @ts-expect-error: supposed to be a parent.\n    const context = this.stack[this.stack.length - 1]\n\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      setData('atHardBreak')\n      return\n    }\n\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n  /** @type {Handle} */\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n  /** @type {Handle} */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    this.stack[this.stack.length - 1].value = data\n  }\n  /** @type {Handle} */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    this.stack[this.stack.length - 1].value = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    this.stack[this.stack.length - 1].value = data\n  }\n  /** @type {Handle} */\n\n  function onexitlink() {\n    const context = this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference'\n      context.referenceType = getData('referenceType') || 'shortcut'\n      delete context.url\n      delete context.title\n    } else {\n      delete context.identifier\n      delete context.label\n      delete context.referenceType\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitimage() {\n    const context = this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference'\n      context.referenceType = getData('referenceType') || 'shortcut'\n      delete context.url\n      delete context.title\n    } else {\n      delete context.identifier\n      delete context.label\n      delete context.referenceType\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitlabeltext(token) {\n    this.stack[this.stack.length - 2].identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1]\n    const value = this.resume()\n    this.stack[this.stack.length - 1].label = value // Assume a reference.\n\n    setData('inReference', true)\n\n    if (this.stack[this.stack.length - 1].type === 'link') {\n      this.stack[this.stack.length - 1].children = fragment.children\n    } else {\n      this.stack[this.stack.length - 1].alt = value\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    this.stack[this.stack.length - 1].url = data\n  }\n  /** @type {Handle} */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    this.stack[this.stack.length - 1].title = data\n  }\n  /** @type {Handle} */\n\n  function onexitresource() {\n    setData('inReference')\n  }\n  /** @type {Handle} */\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n  /** @type {Handle} */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    this.stack[this.stack.length - 1].label = label\n    this.stack[this.stack.length - 1].identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = getData('characterReferenceType')\n    /** @type {string} */\n\n    let value\n\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      setData('characterReferenceType')\n    } else {\n      // @ts-expect-error `decodeEntity` can return false for invalid named\n      // character references, but everything we’ve tokenized is valid.\n      value = decodeEntity(data)\n    }\n\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    this.stack[this.stack.length - 1].url = this.sliceSerialize(token)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    this.stack[this.stack.length - 1].url =\n      'mailto:' + this.sliceSerialize(token)\n  } //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n  /** @returns {Code} */\n\n  function codeFlow() {\n    // @ts-expect-error: we’ve always used `null`.\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n  /** @returns {InlineCode} */\n\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n  /** @returns {Definition} */\n\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      // @ts-expect-error: we’ve always used `null`.\n      label: null,\n      // @ts-expect-error: we’ve always used `null`.\n      title: null,\n      url: ''\n    }\n  }\n  /** @returns {Emphasis} */\n\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n  /** @returns {Heading} */\n\n  function heading() {\n    // @ts-expect-error `depth` will be set later.\n    return {\n      type: 'heading',\n      depth: undefined,\n      children: []\n    }\n  }\n  /** @returns {Break} */\n\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n  /** @returns {HTML} */\n\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n  /** @returns {Image} */\n\n  function image() {\n    // @ts-expect-error: we’ve always used `null`.\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n  /** @returns {Link} */\n\n  function link() {\n    // @ts-expect-error: we’ve always used `null`.\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      // @ts-expect-error: we’ve always used `null`.\n      start: null,\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      // @ts-expect-error: we’ve always used `null`.\n      checked: null,\n      children: []\n    }\n  }\n  /** @returns {Paragraph} */\n\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n  /** @returns {Strong} */\n\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n  /** @returns {Text} */\n\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n  /** @returns {ThematicBreak} */\n\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n/**\n * @param {Extension} combined\n * @param {Array.<Extension|Array.<Extension>>} extensions\n * @returns {Extension}\n */\n\nfunction configure(combined, extensions) {\n  let index = -1\n\n  while (++index < extensions.length) {\n    const value = extensions[index]\n\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n\n  return combined\n}\n/**\n * @param {Extension} combined\n * @param {Extension} extension\n * @returns {void}\n */\n\nfunction extension(combined, extension) {\n  /** @type {string} */\n  let key\n\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      const list = key === 'canContainEols' || key === 'transforms'\n      const maybe = own.call(combined, key) ? combined[key] : undefined\n      /* c8 ignore next */\n\n      const left = maybe || (combined[key] = list ? [] : {})\n      const right = extension[key]\n\n      if (right) {\n        if (list) {\n          // @ts-expect-error: `left` is an array.\n          combined[key] = [...left, ...right]\n        } else {\n          Object.assign(left, right)\n        }\n      }\n    }\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) || // Control character (DEL) of the basic block and C1 controls.\n    (code > 126 && code < 160) || // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) || // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 || // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n\n  return String.fromCharCode(code)\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * @param {Event[]} events\n * @returns {Event[]}\n */\n\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n","import remarkParse from './lib/index.js'\n\nexport default remarkParse\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/** @type {import('unified').Plugin<[Options?] | void[], string, Root>} */\nexport default function remarkParse(options) {\n  /** @type {import('unified').ParserFunction<Root>} */\n  const parser = (doc) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return fromMarkdown(\n      doc,\n      Object.assign({}, settings, options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: this.data('micromarkExtensions') || [],\n        mdastExtensions: this.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n\n  Object.assign(this, {Parser: parser})\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist').Literal} Literal\n * @typedef {Object.<string, unknown>} Props\n * @typedef {Array.<Node>|string} ChildrenOrValue\n *\n * @typedef {(<T extends string, P extends Record<string, unknown>, C extends Node[]>(type: T, props: P, children: C) => {type: T, children: C} & P)} BuildParentWithProps\n * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P, value: string) => {type: T, value: string} & P)} BuildLiteralWithProps\n * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P) => {type: T} & P)} BuildVoidWithProps\n * @typedef {(<T extends string, C extends Node[]>(type: T, children: C) => {type: T, children: C})} BuildParent\n * @typedef {(<T extends string>(type: T, value: string) => {type: T, value: string})} BuildLiteral\n * @typedef {(<T extends string>(type: T) => {type: T})} BuildVoid\n */\n\nexport var u = /**\n * @type {BuildVoid & BuildVoidWithProps & BuildLiteral & BuildLiteralWithProps & BuildParent & BuildParentWithProps}\n */ (\n  /**\n   * @param {string} type Type of node\n   * @param {Props|ChildrenOrValue} [props] Additional properties for node (or `children` or `value`)\n   * @param {ChildrenOrValue} [value] `children` or `value` of node\n   * @returns {Node}\n   */\n  function (type, props, value) {\n    /** @type {Node} */\n    var node = {type: String(type)}\n\n    if (\n      (value === undefined || value === null) &&\n      (typeof props === 'string' || Array.isArray(props))\n    ) {\n      value = props\n    } else {\n      Object.assign(node, props)\n    }\n\n    if (Array.isArray(value)) {\n      node.children = value\n    } else if (value !== undefined && value !== null) {\n      node.value = String(value)\n    }\n\n    return node\n  }\n)\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n */\n\n/**\n * @typedef {CONTINUE|SKIP|EXIT} Action Union of the action types\n * @typedef {number} Index Move to the sibling at index next (after node itself is completely traversed). Useful if mutating the tree, such as removing the node the visitor is currently on, or any of its previous siblings (or next siblings, in case of reverse) Results less than 0 or greater than or equal to children.length stop traversing the parent\n * @typedef {[(Action|null|undefined|void)?, (Index|null|undefined)?]} ActionTuple List with one or two values, the first an action, the second an index.\n * @typedef {null|undefined|Action|Index|ActionTuple|void} VisitorResult Any value that can be returned from a visitor\n */\n\n/**\n * Invoked when a node (matching test, if given) is found.\n * Visitors are free to transform node.\n * They can also transform the parent of node (the last of ancestors).\n * Replacing node itself, if `SKIP` is not returned, still causes its descendants to be visited.\n * If adding or removing previous siblings (or next siblings, in case of reverse) of node,\n * visitor should return a new index (number) to specify the sibling to traverse after node is traversed.\n * Adding or removing next siblings of node (or previous siblings, in case of reverse)\n * is handled as expected without needing to return a new index.\n * Removing the children property of an ancestor still results in them being traversed.\n *\n * @template {Node} V\n * @callback Visitor\n * @param {V} node Found node\n * @param {Array.<Parent>} ancestors Ancestors of node\n * @returns {VisitorResult}\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal\n */\nexport const CONTINUE = true\n/**\n * Do not traverse this node’s children\n */\nexport const SKIP = 'skip'\n/**\n * Stop traversing immediately\n */\nexport const EXIT = false\n\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<T extends Node>(tree: Node, test: T['type']|Partial<T>|import('unist-util-is').TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|import('unist-util-is').TestFunctionPredicate<T>>, visitor: Visitor<T>, reverse?: boolean) => void) &\n   *   ((tree: Node, test: Test, visitor: Visitor<Node>, reverse?: boolean) => void) &\n   *   ((tree: Node, visitor: Visitor<Node>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * Visit children of tree which pass a test\n     *\n     * @param {Node} tree Abstract syntax tree to walk\n     * @param {Test} test test Test node\n     * @param {Visitor<Node>} visitor Function to run for each node\n     * @param {boolean} [reverse] Fisit the tree in reverse, defaults to false\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-ignore no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      var is = convert(test)\n      var step = reverse ? -1 : 1\n\n      factory(tree, null, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number?} index\n       * @param {Array.<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Object.<string, unknown>} */\n        var value = typeof node === 'object' && node !== null ? node : {}\n        /** @type {string} */\n        var name\n\n        if (typeof value.type === 'string') {\n          name =\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' +\n              color(value.type + (name ? '<' + name + '>' : '')) +\n              ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          var result = []\n          /** @type {ActionTuple} */\n          var subresult\n          /** @type {number} */\n          var offset\n          /** @type {Array.<Parent>} */\n          var grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          if (node.children && result[0] !== SKIP) {\n            // @ts-ignore looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-ignore looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-ignore looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * @param {VisitorResult} value\n * @returns {ActionTuple}\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n *\n * @typedef {Partial<Point>} PointLike\n *\n * @typedef {Object} PositionLike\n * @property {PointLike} [start]\n * @property {PointLike} [end]\n *\n * @typedef {Object} NodeLike\n * @property {PositionLike} [position]\n */\n\nexport var pointStart = point('start')\nexport var pointEnd = point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike} [node]\n * @returns {Position}\n */\nexport function position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start'|'end'} type\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the positional info of `node`.\n   *\n   * @param {NodeLike} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    /** @type {Point} */\n    // @ts-ignore looks like a point\n    var point = (node && node.position && node.position[type]) || {}\n\n    return {\n      line: point.line || null,\n      column: point.column || null,\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n */\n\n/**\n * @typedef {CONTINUE|SKIP|EXIT} Action Union of the action types\n * @typedef {number} Index Move to the sibling at index next (after node itself is completely traversed). Useful if mutating the tree, such as removing the node the visitor is currently on, or any of its previous siblings (or next siblings, in case of reverse) Results less than 0 or greater than or equal to children.length stop traversing the parent\n * @typedef {[(Action|null|undefined|void)?, (Index|null|undefined)?]} ActionTuple List with one or two values, the first an action, the second an index.\n * @typedef {null|undefined|Action|Index|ActionTuple|void} VisitorResult Any value that can be returned from a visitor\n */\n\n/**\n * Invoked when a node (matching test, if given) is found.\n * Visitors are free to transform node.\n * They can also transform the parent of node (the last of ancestors).\n * Replacing node itself, if `SKIP` is not returned, still causes its descendants to be visited.\n * If adding or removing previous siblings (or next siblings, in case of reverse) of node,\n * visitor should return a new index (number) to specify the sibling to traverse after node is traversed.\n * Adding or removing next siblings of node (or previous siblings, in case of reverse)\n * is handled as expected without needing to return a new index.\n * Removing the children property of an ancestor still results in them being traversed.\n *\n * @template {Node} V\n * @callback Visitor\n * @param {V} node Found node\n * @param {Array.<Parent>} ancestors Ancestors of node\n * @returns {VisitorResult}\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal\n */\nexport const CONTINUE = true\n/**\n * Do not traverse this node’s children\n */\nexport const SKIP = 'skip'\n/**\n * Stop traversing immediately\n */\nexport const EXIT = false\n\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<T extends Node>(tree: Node, test: T['type']|Partial<T>|import('unist-util-is').TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|import('unist-util-is').TestFunctionPredicate<T>>, visitor: Visitor<T>, reverse?: boolean) => void) &\n   *   ((tree: Node, test: Test, visitor: Visitor<Node>, reverse?: boolean) => void) &\n   *   ((tree: Node, visitor: Visitor<Node>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * Visit children of tree which pass a test\n     *\n     * @param {Node} tree Abstract syntax tree to walk\n     * @param {Test} test test Test node\n     * @param {Visitor<Node>} visitor Function to run for each node\n     * @param {boolean} [reverse] Fisit the tree in reverse, defaults to false\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-ignore no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      var is = convert(test)\n      var step = reverse ? -1 : 1\n\n      factory(tree, null, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number?} index\n       * @param {Array.<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Object.<string, unknown>} */\n        var value = typeof node === 'object' && node !== null ? node : {}\n        /** @type {string} */\n        var name\n\n        if (typeof value.type === 'string') {\n          name =\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' +\n              color(value.type + (name ? '<' + name + '>' : '')) +\n              ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          var result = []\n          /** @type {ActionTuple} */\n          var subresult\n          /** @type {number} */\n          var offset\n          /** @type {Array.<Parent>} */\n          var grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          if (node.children && result[0] !== SKIP) {\n            // @ts-ignore looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-ignore looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-ignore looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * @param {VisitorResult} value\n * @returns {ActionTuple}\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * Invoked when a node (matching test, if given) is found.\n * Visitors are free to transform node.\n * They can also transform the parent of node (the last of ancestors).\n * Replacing node itself, if `SKIP` is not returned, still causes its descendants to be visited.\n * If adding or removing previous siblings (or next siblings, in case of reverse) of node,\n * visitor should return a new index (number) to specify the sibling to traverse after node is traversed.\n * Adding or removing next siblings of node (or previous siblings, in case of reverse)\n * is handled as expected without needing to return a new index.\n * Removing the children property of an ancestor still results in them being traversed.\n *\n * @template {Node} V\n * @callback Visitor\n * @param {V} node Found node\n * @param {number|null} index Position of `node` in `parent`\n * @param {Parent|null} parent Parent of `node`\n * @returns {VisitorResult}\n */\n\nimport {visitParents, CONTINUE, SKIP, EXIT} from 'unist-util-visit-parents'\n\nexport {CONTINUE, SKIP, EXIT}\n\nexport const visit =\n  /**\n   * @type {(\n   *   (<T extends Node>(tree: Node, test: T['type']|Partial<T>|import('unist-util-is').TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|import('unist-util-is').TestFunctionPredicate<T>>, visitor: Visitor<T>, reverse?: boolean) => void) &\n   *   ((tree: Node, test: Test, visitor: Visitor<Node>, reverse?: boolean) => void) &\n   *   ((tree: Node, visitor: Visitor<Node>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * Visit children of tree which pass a test\n     *\n     * @param {Node} tree Abstract syntax tree to walk\n     * @param {Test} test test Test node\n     * @param {Visitor<Node>} visitor Function to run for each node\n     * @param {boolean} [reverse] Fisit the tree in reverse, defaults to false\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array.<Parent>} parents\n       */\n      function overload(node, parents) {\n        var parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('unist-util-visit').Visitor<Definition>} DefinitionVisitor\n */\n\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n *\n * @param {Node} node\n */\nexport function definitions(node) {\n  /** @type {Object.<string, Definition>} */\n  const cache = Object.create(null)\n\n  if (!node || !node.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(node, 'definition', ondefinition)\n\n  return getDefinition\n\n  /** @type {DefinitionVisitor} */\n  function ondefinition(definition) {\n    const id = clean(definition.identifier)\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition\n    }\n  }\n\n  /**\n   * Get a node from the bound definition-cache.\n   *\n   * @param {string} identifier\n   * @returns {Definition|null}\n   */\n  function getDefinition(identifier) {\n    const id = clean(identifier)\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\n/**\n * @param {string} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('./index.js').H} H\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Transform an unknown node.\n * @type {Handler}\n * @param {MdastNode} node\n */\nfunction unknown(h, node) {\n  const data = node.data || {}\n\n  if (\n    'value' in node &&\n    !(\n      own.call(data, 'hName') ||\n      own.call(data, 'hProperties') ||\n      own.call(data, 'hChildren')\n    )\n  ) {\n    return h.augment(node, u('text', node.value))\n  }\n\n  return h(node, 'div', all(h, node))\n}\n\n/**\n * @type {Handler}\n * @param {MdastNode} node\n */\nexport function one(h, node, parent) {\n  const type = node && node.type\n  /** @type {Handler} */\n  let fn\n\n  // Fail on non-nodes.\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n\n  if (own.call(h.handlers, type)) {\n    fn = h.handlers[type]\n  } else if (h.passThrough && h.passThrough.includes(type)) {\n    fn = returnNode\n  } else {\n    fn = h.unknownHandler\n  }\n\n  return (typeof fn === 'function' ? fn : unknown)(h, node, parent)\n}\n\n/**\n * @type {Handler}\n * @param {MdastNode} node\n */\nfunction returnNode(h, node) {\n  // @ts-expect-error: Pass through custom node.\n  return 'children' in node ? {...node, children: all(h, node)} : node\n}\n\n/**\n * @param {H} h\n * @param {MdastNode} parent\n */\nexport function all(h, parent) {\n  /** @type {Array.<Content>} */\n  const values = []\n\n  if ('children' in parent) {\n    const nodes = parent.children\n    let index = -1\n\n    while (++index < nodes.length) {\n      const result = one(h, nodes[index], parent)\n\n      if (result) {\n        if (index && nodes[index - 1].type === 'break') {\n          if (!Array.isArray(result) && result.type === 'text') {\n            result.value = result.value.replace(/^\\s+/, '')\n          }\n\n          if (!Array.isArray(result) && result.type === 'element') {\n            const head = result.children[0]\n\n            if (head && head.type === 'text') {\n              head.value = head.value.replace(/^\\s+/, '')\n            }\n          }\n        }\n\n        if (Array.isArray(result)) {\n          values.push(...result)\n        } else {\n          values.push(result)\n        }\n      }\n    }\n  }\n\n  return values\n}\n","/**\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n */\n\n/**\n * @type {Handler}\n * @param {ThematicBreak} [node]\n * @returns {Element}\n */\nexport function thematicBreak(h, node) {\n  return h(node, 'hr')\n}\n","/**\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Wrap `nodes` with line feeds between each entry.\n * Optionally adds line feeds at the start and end.\n *\n * @param {Array.<Content>} nodes\n * @param {boolean} [loose=false]\n * @returns {Array.<Content>}\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array.<Content>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push(u('text', '\\n'))\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push(u('text', '\\n'))\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push(u('text', '\\n'))\n  }\n\n  return result\n}\n","/**\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {List} node\n * @returns {Element}\n */\nexport function list(h, node) {\n  /** @type {Properties} */\n  const props = {}\n  const name = node.ordered ? 'ol' : 'ul'\n  const items = all(h, node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    props.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < items.length) {\n    const item = items[index]\n\n    if (\n      item.type === 'element' &&\n      item.tagName === 'li' &&\n      item.properties &&\n      Array.isArray(item.properties.className) &&\n      item.properties.className.includes('task-list-item')\n    ) {\n      props.className = ['contains-task-list']\n      break\n    }\n  }\n\n  return h(node, name, props, wrap(items, true))\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {FootnoteReference} node\n */\nexport function footnoteReference(h, node) {\n  const footnoteOrder = h.footnoteOrder\n  const identifier = String(node.identifier)\n  const index = footnoteOrder.indexOf(identifier)\n  const marker = String(\n    index === -1 ? footnoteOrder.push(identifier) : index + 1\n  )\n\n  return h(\n    node,\n    'a',\n    {\n      href: '#fn' + marker,\n      className: ['footnote-ref'],\n      id: 'fnref' + marker,\n      role: 'doc-noteref'\n    },\n    [h(node.position, 'sup', [u('text', marker)])]\n  )\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from './traverse.js'\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @type {Handler}\n * @param {ImageReference|LinkReference} node\n * @returns {Content|Array.<Content>}\n */\nexport function revert(h, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return u('text', '![' + node.alt + suffix)\n  }\n\n  const contents = all(h, node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift(u('text', '['))\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push(u('text', suffix))\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {ListItem} node\n * @param {List} parent\n */\nexport function listItem(h, node, parent) {\n  const result = all(h, node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const props = {}\n  /** @type {Array.<Content>} */\n  const wrapped = []\n\n  if (typeof node.checked === 'boolean') {\n    /** @type {Element} */\n    let paragraph\n\n    if (\n      result[0] &&\n      result[0].type === 'element' &&\n      result[0].tagName === 'p'\n    ) {\n      paragraph = result[0]\n    } else {\n      paragraph = h(null, 'p', [])\n      result.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift(u('text', ' '))\n    }\n\n    paragraph.children.unshift(\n      h(null, 'input', {\n        type: 'checkbox',\n        checked: node.checked,\n        disabled: true\n      })\n    )\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    props.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < result.length) {\n    const child = result[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      wrapped.push(u('text', '\\n'))\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      wrapped.push(...child.children)\n    } else {\n      wrapped.push(child)\n    }\n  }\n\n  const tail = result[result.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || !('tagName' in tail) || tail.tagName !== 'p')) {\n    wrapped.push(u('text', '\\n'))\n  }\n\n  return h(node, 'li', props, wrapped)\n}\n\n/**\n * @param {List} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = node.spread\n  const children = node.children\n  let index = -1\n\n  while (!loose && ++index < children.length) {\n    loose = listItemLoose(children[index])\n  }\n\n  return Boolean(loose)\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === undefined || spread === null\n    ? node.children.length > 1\n    : spread\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {footnote} from './footnote.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  footnote,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  root,\n  strong,\n  table,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return null\n}\n","/**\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Blockquote} node\n */\nexport function blockquote(h, node) {\n  return h(node, 'blockquote', wrap(all(h, node), true))\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Break} node\n * @returns {Array<Element|Text>}\n */\nexport function hardBreak(h, node) {\n  return [h(node, 'br'), u('text', '\\n')]\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Code} node\n */\nexport function code(h, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  // To do: next major, use `node.lang` w/o regex, the splitting’s been going\n  // on for years in remark now.\n  const lang = node.lang && node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/)\n  /** @type {Properties} */\n  const props = {}\n\n  if (lang) {\n    props.className = ['language-' + lang]\n  }\n\n  const code = h(node, 'code', props, [u('text', value)])\n\n  if (node.meta) {\n    code.data = {meta: node.meta}\n  }\n\n  return h(node.position, 'pre', [code])\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Delete} node\n */\nexport function strikethrough(h, node) {\n  return h(node, 'del', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Emphasis} node\n */\nexport function emphasis(h, node) {\n  return h(node, 'em', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Footnote} Footnote\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {footnoteReference} from './footnote-reference.js'\n\n/**\n * @type {Handler}\n * @param {Footnote} node\n */\nexport function footnote(h, node) {\n  const footnoteById = h.footnoteById\n  const footnoteOrder = h.footnoteOrder\n  let no = 1\n\n  while (no in footnoteById) no++\n\n  const identifier = String(no)\n\n  // No need to check if `identifier` exists in `footnoteOrder`, it’s guaranteed\n  // to not exist because we just generated it.\n  footnoteOrder.push(identifier)\n\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier,\n    children: [{type: 'paragraph', children: node.children}],\n    position: node.position\n  }\n\n  return footnoteReference(h, {\n    type: 'footnoteReference',\n    identifier,\n    position: node.position\n  })\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Heading} node\n */\nexport function heading(h, node) {\n  return h(node, 'h' + node.depth, all(h, node))\n}\n","/**\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Return either a `raw` node in dangerous mode, otherwise nothing.\n *\n * @type {Handler}\n * @param {HTML} node\n */\nexport function html(h, node) {\n  // @ts-expect-error non-standard raw nodes.\n  return h.dangerous ? h.augment(node, u('raw', node.value)) : null\n}\n","/**\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\nimport {revert} from '../revert.js'\n\n/**\n * @type {Handler}\n * @param {ImageReference} node\n */\nexport function imageReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {src: normalize(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'img', props)\n}\n","/**\n * @typedef {import('mdast').Image} Image\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\n\n/**\n * @type {Handler}\n * @param {Image} node\n */\nexport function image(h, node) {\n  /** @type {Properties} */\n  const props = {src: normalize(node.url), alt: node.alt}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'img', props)\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {InlineCode} node\n */\nexport function inlineCode(h, node) {\n  return h(node, 'code', [u('text', node.value.replace(/\\r?\\n|\\r/g, ' '))])\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\nimport {revert} from '../revert.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {LinkReference} node\n */\nexport function linkReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {href: normalize(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Link} node\n */\nexport function link(h, node) {\n  /** @type {Properties} */\n  const props = {href: normalize(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","/**\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Paragraph} node\n */\nexport function paragraph(h, node) {\n  return h(node, 'p', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\nimport {wrap} from '../wrap.js'\n\n/**\n * @type {Handler}\n * @param {Root} node\n */\nexport function root(h, node) {\n  // @ts-expect-error `root`s are also fine.\n  return h.augment(node, u('root', wrap(all(h, node))))\n}\n","/**\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Strong} node\n */\nexport function strong(h, node) {\n  return h(node, 'strong', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Table} node\n */\nexport function table(h, node) {\n  const rows = node.children\n  let index = rows.length\n  const align = node.align || []\n  /** @type {Array.<Element>} */\n  const result = []\n\n  while (index--) {\n    const row = rows[index].children\n    const name = index === 0 ? 'th' : 'td'\n    let pos = node.align ? align.length : row.length\n    /** @type {Array.<Content>} */\n    const out = []\n\n    while (pos--) {\n      const cell = row[pos]\n      out[pos] = h(cell, name, {align: align[pos]}, cell ? all(h, cell) : [])\n    }\n\n    result[index] = h(rows[index], 'tr', wrap(out, true))\n  }\n\n  return h(\n    node,\n    'table',\n    wrap(\n      [h(result[0].position, 'thead', wrap([result[0]], true))].concat(\n        result[1]\n          ? h(\n              {\n                start: pointStart(result[1]),\n                end: pointEnd(result[result.length - 1])\n              },\n              'tbody',\n              wrap(result.slice(1), true)\n            )\n          : []\n      ),\n      true\n    )\n  )\n}\n","/**\n * @typedef {import('mdast').Text} Text\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Text} node\n */\nexport function text(h, node) {\n  return h.augment(\n    node,\n    u('text', String(node.value).replace(/[ \\t]*(\\r?\\n|\\r)[ \\t]*/g, '$1'))\n  )\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('hast').Root|import('hast').Parent['children'][number]} HastNode\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Root} Root\n * @typedef {import('unist-util-position').PositionLike} PositionLike\n * @typedef {import('unist-util-visit').Visitor<FootnoteDefinition>} FootnoteDefinitionVisitor\n *\n * @typedef {Element|Text|Comment} Content\n *\n * @typedef EmbeddedHastFields\n * @property {string} [hName] Defines the tag name of an element\n * @property {Properties} [hProperties] Defines the properties of an element\n * @property {Array.<Content>} [hChildren] Defines the (hast) children of an element\n *\n * @typedef {Object.<string, unknown> & EmbeddedHastFields} Data unist data with embedded hast fields\n *\n * @typedef {MdastNode & {data?: Data}} NodeWithData unist node with embedded hast data\n *\n * @callback Handler\n * @param {H} h Handle context\n * @param {any} node mdast node to handle\n * @param {Parent|null} parent Parent of `node`\n * @returns {Content|Array.<Content>|null|undefined} hast node\n *\n * @callback HFunctionProps\n * @param {MdastNode|PositionLike|null|undefined} node mdast node or unist position\n * @param {string} tagName HTML tag name\n * @param {Properties} props Properties\n * @param {Array.<Content>?} [children] hast content\n * @returns {Element}\n *\n * @callback HFunctionNoProps\n * @param {MdastNode|PositionLike|null|undefined} node mdast node or unist position\n * @param {string} tagName HTML tag name\n * @param {Array.<Content>?} [children] hast content\n * @returns {Element}\n *\n * @typedef HFields\n * @property {boolean} dangerous Whether HTML is allowed\n * @property {(identifier: string) => Definition|null} definition Definition cache\n * @property {Object.<string, FootnoteDefinition>} footnoteById Footnote cache\n * @property {Array.<string>} footnoteOrder Order in which footnotes occur\n * @property {Handlers} handlers Applied handlers\n * @property {Handler} unknownHandler Handler for any none not in `passThrough` or otherwise handled\n * @property {(left: NodeWithData|PositionLike|null|undefined, right: Content) => Content} augment Like `h` but lower-level and usable on non-elements.\n * @property {Array.<string>} passThrough List of node types to pass through untouched (except for their children).\n *\n * @typedef Options\n * @property {boolean} [allowDangerousHtml=false] Whether to allow `html` nodes and inject them as `raw` HTML\n * @property {Handlers} [handlers] Object mapping mdast nodes to functions handling them\n * @property {Array.<string>} [passThrough] List of custom mdast node types to pass through (keep) in hast\n * @property {Handler} [unknownHandler] Handler for all unknown nodes.\n *\n * @typedef {Record.<string, Handler>} Handlers Map of node types to handlers\n * @typedef {HFunctionProps & HFunctionNoProps & HFields} H Handle context\n */\n\nimport {u} from 'unist-builder'\nimport {visit} from 'unist-util-visit'\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {generated} from 'unist-util-generated'\nimport {definitions} from 'mdast-util-definitions'\nimport {one} from './traverse.js'\nimport {footer} from './footer.js'\nimport {handlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Factory to transform.\n * @param {MdastNode} tree mdast node\n * @param {Options} [options] Configuration\n * @returns {H} `h` function\n */\nfunction factory(tree, options) {\n  const settings = options || {}\n  const dangerous = settings.allowDangerousHtml || false\n  /** @type {Object.<string, FootnoteDefinition>} */\n  const footnoteById = {}\n\n  h.dangerous = dangerous\n  h.definition = definitions(tree)\n  h.footnoteById = footnoteById\n  /** @type {Array.<string>} */\n  h.footnoteOrder = []\n  h.augment = augment\n  h.handlers = {...handlers, ...settings.handlers}\n  h.unknownHandler = settings.unknownHandler\n  h.passThrough = settings.passThrough\n\n  visit(tree, 'footnoteDefinition', onfootnotedefinition)\n\n  // @ts-expect-error Hush, it’s fine!\n  return h\n\n  /**\n   * Finalise the created `right`, a hast node, from `left`, an mdast node.\n   * @param {(NodeWithData|PositionLike)?} left\n   * @param {Content} right\n   * @returns {Content}\n   */\n  function augment(left, right) {\n    // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n    if (left && 'data' in left && left.data) {\n      /** @type {Data} */\n      const data = left.data\n\n      if (data.hName) {\n        if (right.type !== 'element') {\n          right = {\n            type: 'element',\n            tagName: '',\n            properties: {},\n            children: []\n          }\n        }\n\n        right.tagName = data.hName\n      }\n\n      if (right.type === 'element' && data.hProperties) {\n        right.properties = {...right.properties, ...data.hProperties}\n      }\n\n      if ('children' in right && right.children && data.hChildren) {\n        right.children = data.hChildren\n      }\n    }\n\n    if (left) {\n      const ctx = 'type' in left ? left : {position: left}\n\n      if (!generated(ctx)) {\n        right.position = {start: pointStart(ctx), end: pointEnd(ctx)}\n      }\n    }\n\n    return right\n  }\n\n  /**\n   * Create an element for `node`.\n   *\n   * @type {HFunctionProps}\n   */\n  function h(node, tagName, props, children) {\n    if (Array.isArray(props)) {\n      children = props\n      props = {}\n    }\n\n    // @ts-expect-error augmenting an element yields an element.\n    return augment(node, {\n      type: 'element',\n      tagName,\n      properties: props || {},\n      children: children || []\n    })\n  }\n\n  /**\n   * @type {FootnoteDefinitionVisitor}\n   */\n  function onfootnotedefinition(definition) {\n    const id = String(definition.identifier).toUpperCase()\n\n    // Mimick CM behavior of link definitions.\n    // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8290999/index.js#L26>.\n    if (!own.call(footnoteById, id)) {\n      footnoteById[id] = definition\n    }\n  }\n}\n\n/**\n * Transform `tree` (an mdast node) to a hast node.\n *\n * @param {MdastNode} tree mdast node\n * @param {Options} [options] Configuration\n * @returns {HastNode|null|undefined} hast node\n */\nexport function toHast(tree, options) {\n  const h = factory(tree, options)\n  const node = one(h, tree, null)\n  const foot = footer(h)\n\n  if (foot) {\n    // @ts-expect-error If there’s a footer, there were definitions, meaning block\n    // content.\n    // So assume `node` is a parent node.\n    node.children.push(u('text', '\\n'), foot)\n  }\n\n  return Array.isArray(node) ? {type: 'root', children: node} : node\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * Invoked when a node (matching test, if given) is found.\n * Visitors are free to transform node.\n * They can also transform the parent of node (the last of ancestors).\n * Replacing node itself, if `SKIP` is not returned, still causes its descendants to be visited.\n * If adding or removing previous siblings (or next siblings, in case of reverse) of node,\n * visitor should return a new index (number) to specify the sibling to traverse after node is traversed.\n * Adding or removing next siblings of node (or previous siblings, in case of reverse)\n * is handled as expected without needing to return a new index.\n * Removing the children property of an ancestor still results in them being traversed.\n *\n * @template {Node} V\n * @callback Visitor\n * @param {V} node Found node\n * @param {number|null} index Position of `node` in `parent`\n * @param {Parent|null} parent Parent of `node`\n * @returns {VisitorResult}\n */\n\nimport {visitParents, CONTINUE, SKIP, EXIT} from 'unist-util-visit-parents'\n\nexport {CONTINUE, SKIP, EXIT}\n\nexport const visit =\n  /**\n   * @type {(\n   *   (<T extends Node>(tree: Node, test: T['type']|Partial<T>|import('unist-util-is').TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|import('unist-util-is').TestFunctionPredicate<T>>, visitor: Visitor<T>, reverse?: boolean) => void) &\n   *   ((tree: Node, test: Test, visitor: Visitor<Node>, reverse?: boolean) => void) &\n   *   ((tree: Node, visitor: Visitor<Node>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * Visit children of tree which pass a test\n     *\n     * @param {Node} tree Abstract syntax tree to walk\n     * @param {Test} test test Test node\n     * @param {Visitor<Node>} visitor Function to run for each node\n     * @param {boolean} [reverse] Fisit the tree in reverse, defaults to false\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array.<Parent>} parents\n       */\n      function overload(node, parents) {\n        var parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n","/**\n * @typedef {Object} PointLike\n * @property {number} [line]\n * @property {number} [column]\n * @property {number} [offset]\n *\n * @typedef {Object} PositionLike\n * @property {PointLike} [start]\n * @property {PointLike} [end]\n *\n * @typedef {Object} NodeLike\n * @property {PositionLike} [position]\n */\n\n/**\n * Check if `node` is *generated*.\n *\n * @param {NodeLike} [node]\n * @returns {boolean}\n */\nexport function generated(node) {\n  return (\n    !node ||\n    !node.position ||\n    !node.position.start ||\n    !node.position.start.line ||\n    !node.position.start.column ||\n    !node.position.end ||\n    !node.position.end.line ||\n    !node.position.end.column\n  )\n}\n","/**\n * @typedef {import('mdast').BlockContent} BlockContent\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('./index.js').H} H\n */\n\nimport {thematicBreak} from './handlers/thematic-break.js'\nimport {list} from './handlers/list.js'\nimport {wrap} from './wrap.js'\n\n/**\n * @param {H} h\n */\nexport function footer(h) {\n  const footnoteById = h.footnoteById\n  const footnoteOrder = h.footnoteOrder\n  let index = -1\n  /** @type {Array.<ListItem>} */\n  const listItems = []\n\n  while (++index < footnoteOrder.length) {\n    const def = footnoteById[footnoteOrder[index].toUpperCase()]\n\n    if (!def) {\n      continue\n    }\n\n    const marker = String(index + 1)\n    const content = [...def.children]\n    /** @type {Link} */\n    const backReference = {\n      type: 'link',\n      url: '#fnref' + marker,\n      data: {hProperties: {className: ['footnote-back'], role: 'doc-backlink'}},\n      children: [{type: 'text', value: '↩'}]\n    }\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'paragraph') {\n      tail.children.push(backReference)\n    } else {\n      // @ts-expect-error Indeed, link directly added in block content.\n      // Which we do because that way at least the handlers will be called\n      // for the other HTML we’re generating (as markdown).\n      content.push(backReference)\n    }\n\n    listItems.push({\n      type: 'listItem',\n      data: {hProperties: {id: 'fn' + marker, role: 'doc-endnote'}},\n      children: content,\n      position: def.position\n    })\n  }\n\n  if (listItems.length === 0) {\n    return null\n  }\n\n  return h(\n    null,\n    'section',\n    {className: ['footnotes'], role: 'doc-endnotes'},\n    wrap(\n      [\n        thematicBreak(h),\n        list(h, {type: 'list', ordered: true, children: listItems})\n      ],\n      true\n    )\n  )\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n// Note: the `<MdastRoot, HastRoot>` overload doesn’t seem to work :'(\n\n/**\n * Plugin to bridge or mutate to rehype.\n *\n * If a destination is given, runs the destination with the new hast tree\n * (bridge-mode).\n * Without destination, returns the hast tree: further plugins run on that tree\n * (mutate-mode).\n *\n * @param destination\n *   Optional unified processor.\n * @param options\n *   Options passed to `mdast-util-to-hast`.\n */\nconst remarkRehype =\n  /** @type {(import('unified').Plugin<[Processor, Options?]|[Options]|[], MdastRoot>)} */\n  (\n    function (destination, options) {\n      return destination && 'run' in destination\n        ? bridge(destination, options)\n        : mutate(destination)\n    }\n  )\n\nexport default remarkRehype\n\n/**\n * Bridge-mode.\n * Runs the destination with the new hast tree.\n *\n * @type {import('unified').Plugin<[Processor, Options?], MdastRoot>}\n */\nfunction bridge(destination, options) {\n  return (node, file, next) => {\n    destination.run(toHast(node, options), file, (error) => {\n      next(error)\n    })\n  }\n}\n\n/**\n * Mutate-mode.\n * Further transformers run on the nlcst tree.\n *\n * @type {import('unified').Plugin<[Options?]|void[], MdastRoot, HastRoot>}\n */\nfunction mutate(options) {\n  // @ts-expect-error: assume a corresponding node is returned for `toHast`.\n  return (node) => toHast(node, options)\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Object.<string, Info>} Properties\n * @typedef {Object.<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","import {Schema} from './schema.js'\n\n/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\n/**\n * @param {import('./schema.js').Schema[]} definitions\n * @param {string} space\n * @returns {import('./schema.js').Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  var property = {}\n  /** @type {Normal} */\n  var normal = {}\n  var index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    this.property = property\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.attribute = null\nInfo.prototype.property = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","var powers = 0\n\nexport var boolean = increment()\nexport var booleanish = increment()\nexport var overloadedBoolean = increment()\nexport var number = increment()\nexport var spaceSeparated = increment()\nexport var commaSeparated = increment()\nexport var commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\nvar checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    var index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    while (++index < checks.length) {\n      mark(\n        this,\n        checks[index],\n        (mask & types[checks[index]]) === types[checks[index]]\n      )\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {InstanceType<typeof DefinedInfo>} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    values[key] = value\n  }\n}\n","import {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\n/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n * @typedef {import('./info.js').Info} Info\n */\n\n/**\n * @typedef {Object.<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Object.<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array.<string>} [mustUseProperty]\n */\n\nvar own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {import('./schema.js').Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  var property = {}\n  /** @type {Normal} */\n  var normal = {}\n  /** @type {string} */\n  var prop\n  /** @type {Info} */\n  var info\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes, prop),\n        definition.properties[prop],\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport var xlink = create({\n  space: 'xlink',\n  transform: xlinkTransform,\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n\n/**\n * @param {unknown} _\n * @param {string} prop\n * @returns {string}\n */\nfunction xlinkTransform(_, prop) {\n  return 'xlink:' + prop.slice(5).toLowerCase()\n}\n","import {create} from './util/create.js'\n\nexport var xml = create({\n  space: 'xml',\n  transform: xmlTransform,\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n\n/**\n * @param {unknown} _\n * @param {string} prop\n * @returns {string}\n */\nfunction xmlTransform(_, prop) {\n  return 'xml:' + prop.slice(3).toLowerCase()\n}\n","/**\n * @param {Object.<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Object.<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport var xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport var aria = create({\n  transform: ariaTransform,\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n\n/**\n * @param {unknown} _\n * @param {string} prop\n * @returns {string}\n */\nfunction ariaTransform(_, prop) {\n  return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n}\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport var html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: commaSeparated,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextMenu: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: commaSeparated,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport var svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport var html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport var svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","import {visit} from 'unist-util-visit'\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n *\n * @callback AllowElement\n * @param {Element} element\n * @param {number} index\n * @param {Element|Root} parent\n * @returns {boolean|undefined}\n *\n * @typedef Options\n * @property {Array.<string>} [allowedElements]\n * @property {Array.<string>} [disallowedElements=[]]\n * @property {AllowElement} [allowElement]\n * @property {boolean} [unwrapDisallowed=false]\n */\n\n/**\n * @type {import('unified').Plugin<[Options], Root>}\n */\nexport default function rehypeFilter(options) {\n  if (options.allowedElements && options.disallowedElements) {\n    throw new TypeError(\n      'Only one of `allowedElements` and `disallowedElements` should be defined'\n    )\n  }\n\n  if (\n    options.allowedElements ||\n    options.disallowedElements ||\n    options.allowElement\n  ) {\n    return (tree) => {\n      visit(tree, 'element', (node, index, parent_) => {\n        const parent = /** @type {Element|Root} */ (parent_)\n        /** @type {boolean|undefined} */\n        let remove\n\n        if (options.allowedElements) {\n          remove = !options.allowedElements.includes(node.tagName)\n        } else if (options.disallowedElements) {\n          remove = options.disallowedElements.includes(node.tagName)\n        }\n\n        if (!remove && options.allowElement && typeof index === 'number') {\n          remove = !options.allowElement(node, index, parent)\n        }\n\n        if (remove && typeof index === 'number') {\n          if (options.unwrapDisallowed && node.children) {\n            parent.children.splice(index, 1, ...node.children)\n          } else {\n            parent.children.splice(index, 1)\n          }\n\n          return index\n        }\n\n        return undefined\n      })\n    }\n  }\n}\n","const protocols = ['http', 'https', 'mailto', 'tel']\n\n/**\n * @param {string} uri\n * @returns {string}\n */\nexport function uriTransformer(uri) {\n  const url = (uri || '').trim()\n  const first = url.charAt(0)\n\n  if (first === '#' || first === '/') {\n    return url\n  }\n\n  const colon = url.indexOf(':')\n  if (colon === -1) {\n    return url\n  }\n\n  let index = -1\n\n  while (++index < protocols.length) {\n    const protocol = protocols[index]\n\n    if (\n      colon === protocol.length &&\n      url.slice(0, protocol.length).toLowerCase() === protocol\n    ) {\n      return url\n    }\n  }\n\n  index = url.indexOf('?')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  index = url.indexOf('#')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  // eslint-disable-next-line no-script-url\n  return 'javascript:void(0)'\n}\n","import {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nvar valid = /^data[-\\w.:]+$/i\nvar dash = /-[a-z]/g\nvar cap = /[A-Z]/g\n\n/**\n * @param {import('./util/schema.js').Schema} schema\n * @param {string} value\n * @returns {import('./util/info.js').Info}\n */\nexport function find(schema, value) {\n  var normal = normalize(value)\n  var prop = value\n  var Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      prop = datasetToProperty(value)\n    } else {\n      value = datasetToAttribute(value)\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} attribute\n * @returns {string}\n */\nfunction datasetToProperty(attribute) {\n  var value = attribute.slice(5).replace(dash, camelcase)\n  return 'data' + value.charAt(0).toUpperCase() + value.slice(1)\n}\n\n/**\n * @param {string} property\n * @returns {string}\n */\nfunction datasetToAttribute(property) {\n  var value = property.slice(4)\n\n  if (dash.test(value)) {\n    return property\n  }\n\n  value = value.replace(cap, kebab)\n\n  if (value.charAt(0) !== '-') {\n    value = '-' + value\n  }\n\n  return 'data' + value\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","export var hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('unist').Position} Position\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('./complex-types').ReactMarkdownProps} ReactMarkdownProps\n *\n * @typedef Raw\n * @property {'raw'} type\n * @property {string} value\n *\n * @typedef Context\n * @property {Options} options\n * @property {Schema} schema\n * @property {number} listDepth\n *\n * @callback TransformLink\n * @param {string} href\n * @param {Array.<ElementContent>} children\n * @param {string?} title\n * @returns {string}\n *\n * @callback TransformImage\n * @param {string} src\n * @param {string} alt\n * @param {string?} title\n * @returns {string}\n *\n * @typedef {import(\"react\").HTMLAttributeAnchorTarget} TransformLinkTargetType\n *\n * @callback TransformLinkTarget\n * @param {string} href\n * @param {Array.<ElementContent>} children\n * @param {string?} title\n * @returns {TransformLinkTargetType|undefined}\n *\n * @typedef {keyof JSX.IntrinsicElements} ReactMarkdownNames\n *\n * To do: is `data-sourcepos` typeable?\n *\n * @callback CodeComponent\n * @param {JSX.IntrinsicElements['code'] & ReactMarkdownProps & {inline?: boolean}} props\n * @returns {ReactNode}\n *\n * @callback HeadingComponent\n * @param {JSX.IntrinsicElements['h1'] & ReactMarkdownProps & {level: number}} props\n * @returns {ReactNode}\n *\n * @callback LiComponent\n * @param {JSX.IntrinsicElements['li'] & ReactMarkdownProps & {checked: boolean|null, index: number, ordered: boolean}} props\n * @returns {ReactNode}\n *\n * @callback OrderedListComponent\n * @param {JSX.IntrinsicElements['ol'] & ReactMarkdownProps & {depth: number, ordered: true}} props\n * @returns {ReactNode}\n *\n * @callback TableCellComponent\n * @param {JSX.IntrinsicElements['table'] & ReactMarkdownProps & {style?: Object.<string, unknown>, isHeader: boolean}} props\n * @returns {ReactNode}\n *\n * @callback TableRowComponent\n * @param {JSX.IntrinsicElements['tr'] & ReactMarkdownProps & {isHeader: boolean}} props\n * @returns {ReactNode}\n *\n * @callback UnorderedListComponent\n * @param {JSX.IntrinsicElements['ul'] & ReactMarkdownProps & {depth: number, ordered: false}} props\n * @returns {ReactNode}\n *\n * @typedef SpecialComponents\n * @property {CodeComponent|ReactMarkdownNames} code\n * @property {HeadingComponent|ReactMarkdownNames} h1\n * @property {HeadingComponent|ReactMarkdownNames} h2\n * @property {HeadingComponent|ReactMarkdownNames} h3\n * @property {HeadingComponent|ReactMarkdownNames} h4\n * @property {HeadingComponent|ReactMarkdownNames} h5\n * @property {HeadingComponent|ReactMarkdownNames} h6\n * @property {LiComponent|ReactMarkdownNames} li\n * @property {OrderedListComponent|ReactMarkdownNames} ol\n * @property {TableCellComponent|ReactMarkdownNames} td\n * @property {TableCellComponent|ReactMarkdownNames} th\n * @property {TableRowComponent|ReactMarkdownNames} tr\n * @property {UnorderedListComponent|ReactMarkdownNames} ul\n *\n * @typedef {Partial<Omit<import(\"./complex-types\").NormalComponents, keyof SpecialComponents> & SpecialComponents>} Components\n *\n * @typedef Options\n * @property {boolean} [sourcePos=false]\n * @property {boolean} [rawSourcePos=false]\n * @property {boolean} [skipHtml=false]\n * @property {boolean} [includeElementIndex=false]\n * @property {null|false|TransformLink} [transformLinkUri]\n * @property {TransformImage} [transformImageUri]\n * @property {TransformLinkTargetType|TransformLinkTarget} [linkTarget]\n * @property {Components} [components]\n */\n\nimport React from 'react'\nimport ReactIs from 'react-is'\nimport {svg, find, hastToReact} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport style from 'style-to-object'\n\nconst own = {}.hasOwnProperty\n\n// The table-related elements that must not contain whitespace text according\n// to React.\nconst tableElements = new Set(['table', 'thead', 'tbody', 'tfoot', 'tr'])\n\n/**\n * @param {Context} context\n * @param {Element|Root} node\n */\nexport function childrenToReact(context, node) {\n  /** @type {Array.<ReactNode>} */\n  const children = []\n  let childIndex = -1\n  /** @type {Comment|Doctype|Element|Raw|Text} */\n  let child\n\n  while (++childIndex < node.children.length) {\n    child = node.children[childIndex]\n\n    if (child.type === 'element') {\n      children.push(toReact(context, child, childIndex, node))\n    } else if (child.type === 'text') {\n      // React does not permit whitespace text elements as children of table:\n      // cf. https://github.com/remarkjs/react-markdown/issues/576\n      if (\n        node.type !== 'element' ||\n        !tableElements.has(node.tagName) ||\n        child.value !== '\\n'\n      ) {\n        children.push(child.value)\n      }\n    } else if (child.type === 'raw' && !context.options.skipHtml) {\n      // Default behavior is to show (encoded) HTML.\n      children.push(child.value)\n    }\n  }\n\n  return children\n}\n\n/**\n * @param {Context} context\n * @param {Element} node\n * @param {number} index\n * @param {Element|Root} parent\n */\nfunction toReact(context, node, index, parent) {\n  const options = context.options\n  const parentSchema = context.schema\n  /** @type {ReactMarkdownNames} */\n  // @ts-expect-error assume a known HTML/SVG element.\n  const name = node.tagName\n  /** @type {Object.<string, unknown>} */\n  const properties = {}\n  let schema = parentSchema\n  /** @type {string} */\n  let property\n\n  if (parentSchema.space === 'html' && name === 'svg') {\n    schema = svg\n    context.schema = schema\n  }\n\n  if (node.properties) {\n    for (property in node.properties) {\n      if (own.call(node.properties, property)) {\n        addProperty(properties, property, node.properties[property], context)\n      }\n    }\n  }\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth++\n  }\n\n  const children = childrenToReact(context, node)\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth--\n  }\n\n  // Restore parent schema.\n  context.schema = parentSchema\n\n  // Nodes created by plugins do not have positional info, in which case we use\n  // an object that matches the position interface.\n  const position = node.position || {\n    start: {line: null, column: null, offset: null},\n    end: {line: null, column: null, offset: null}\n  }\n  const component =\n    options.components && own.call(options.components, name)\n      ? options.components[name]\n      : name\n  const basic = typeof component === 'string' || component === React.Fragment\n\n  if (!ReactIs.isValidElementType(component)) {\n    throw new TypeError(\n      `Component for name \\`${name}\\` not defined or is not renderable`\n    )\n  }\n\n  properties.key = [\n    name,\n    position.start.line,\n    position.start.column,\n    index\n  ].join('-')\n\n  if (name === 'a' && options.linkTarget) {\n    properties.target =\n      typeof options.linkTarget === 'function'\n        ? options.linkTarget(\n            String(properties.href || ''),\n            node.children,\n            typeof properties.title === 'string' ? properties.title : null\n          )\n        : options.linkTarget\n  }\n\n  if (name === 'a' && options.transformLinkUri) {\n    properties.href = options.transformLinkUri(\n      String(properties.href || ''),\n      node.children,\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (\n    !basic &&\n    name === 'code' &&\n    parent.type === 'element' &&\n    parent.tagName !== 'pre'\n  ) {\n    properties.inline = true\n  }\n\n  if (\n    !basic &&\n    (name === 'h1' ||\n      name === 'h2' ||\n      name === 'h3' ||\n      name === 'h4' ||\n      name === 'h5' ||\n      name === 'h6')\n  ) {\n    properties.level = Number.parseInt(name.charAt(1), 10)\n  }\n\n  if (name === 'img' && options.transformImageUri) {\n    properties.src = options.transformImageUri(\n      String(properties.src || ''),\n      String(properties.alt || ''),\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (!basic && name === 'li' && parent.type === 'element') {\n    const input = getInputElement(node)\n    properties.checked =\n      input && input.properties ? Boolean(input.properties.checked) : null\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.ordered = parent.tagName === 'ol'\n  }\n\n  if (!basic && (name === 'ol' || name === 'ul')) {\n    properties.ordered = name === 'ol'\n    properties.depth = context.listDepth\n  }\n\n  if (name === 'td' || name === 'th') {\n    if (properties.align) {\n      if (!properties.style) properties.style = {}\n      // @ts-expect-error assume `style` is an object\n      properties.style.textAlign = properties.align\n      delete properties.align\n    }\n\n    if (!basic) {\n      properties.isHeader = name === 'th'\n    }\n  }\n\n  if (!basic && name === 'tr' && parent.type === 'element') {\n    properties.isHeader = Boolean(parent.tagName === 'thead')\n  }\n\n  // If `sourcePos` is given, pass source information (line/column info from markdown source).\n  if (options.sourcePos) {\n    properties['data-sourcepos'] = flattenPosition(position)\n  }\n\n  if (!basic && options.rawSourcePos) {\n    properties.sourcePosition = node.position\n  }\n\n  // If `includeElementIndex` is given, pass node index info to components.\n  if (!basic && options.includeElementIndex) {\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.siblingCount = getElementsBeforeCount(parent)\n  }\n\n  if (!basic) {\n    properties.node = node\n  }\n\n  // Ensure no React warnings are emitted for void elements w/ children.\n  return children.length > 0\n    ? React.createElement(component, properties, children)\n    : React.createElement(component, properties)\n}\n\n/**\n * @param {Element|Root} node\n * @returns {Element?}\n */\nfunction getInputElement(node) {\n  let index = -1\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n\n    if (child.type === 'element' && child.tagName === 'input') {\n      return child\n    }\n  }\n\n  return null\n}\n\n/**\n * @param {Element|Root} parent\n * @param {Element} [node]\n * @returns {number}\n */\nfunction getElementsBeforeCount(parent, node) {\n  let index = -1\n  let count = 0\n\n  while (++index < parent.children.length) {\n    if (parent.children[index] === node) break\n    if (parent.children[index].type === 'element') count++\n  }\n\n  return count\n}\n\n/**\n * @param {Object.<string, unknown>} props\n * @param {string} prop\n * @param {unknown} value\n * @param {Context} ctx\n */\nfunction addProperty(props, prop, value, ctx) {\n  const info = find(ctx.schema, prop)\n  let result = value\n\n  // Ignore nullish and `NaN` values.\n  // eslint-disable-next-line no-self-compare\n  if (result === null || result === undefined || result !== result) {\n    return\n  }\n\n  // Accept `array`.\n  // Most props are space-separated.\n  if (Array.isArray(result)) {\n    result = info.commaSeparated ? commas(result) : spaces(result)\n  }\n\n  if (info.property === 'style' && typeof result === 'string') {\n    result = parseStyle(result)\n  }\n\n  if (info.space && info.property) {\n    props[\n      own.call(hastToReact, info.property)\n        ? hastToReact[info.property]\n        : info.property\n    ] = result\n  } else if (info.attribute) {\n    props[info.attribute] = result\n  }\n}\n\n/**\n * @param {string} value\n * @returns {Object.<string, string>}\n */\nfunction parseStyle(value) {\n  /** @type {Object.<string, string>} */\n  const result = {}\n\n  try {\n    style(value, iterator)\n  } catch {\n    // Silent.\n  }\n\n  return result\n\n  /**\n   * @param {string} name\n   * @param {string} v\n   */\n  function iterator(name, v) {\n    const k = name.slice(0, 4) === '-ms-' ? `ms-${name.slice(4)}` : name\n    result[k.replace(/-([a-z])/g, styleReplacer)] = v\n  }\n}\n\n/**\n * @param {unknown} _\n * @param {string} $1\n */\nfunction styleReplacer(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * @param {Position|{start: {line: null, column: null, offset: null}, end: {line: null, column: null, offset: null}}} pos\n * @returns {string}\n */\nfunction flattenPosition(pos) {\n  return [\n    pos.start.line,\n    ':',\n    pos.start.column,\n    '-',\n    pos.end.line,\n    ':',\n    pos.end.column\n  ]\n    .map((d) => String(d))\n    .join('')\n}\n","/**\n * @typedef {Object} StringifyOptions\n * @property {boolean} [padLeft=true] Whether to pad a space before a token (`boolean`, default: `true`).\n * @property {boolean} [padRight=false] Whether to pad a space after a token (`boolean`, default: `false`).\n */\n\n/**\n * Parse comma separated tokens to an array.\n *\n * @param {string} value\n * @returns {Array.<string>}\n */\nexport function parse(value) {\n  /** @type {Array.<string>} */\n  var tokens = []\n  var input = String(value || '')\n  var index = input.indexOf(',')\n  var start = 0\n  /** @type {boolean} */\n  var end\n  /** @type {string} */\n  var token\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings to comma separated tokens.\n *\n * @param {Array.<string|number>} values\n * @param {StringifyOptions} [options]\n * @returns {string}\n */\nexport function stringify(values, options) {\n  var settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  if (values[values.length - 1] === '') {\n    values = values.concat('')\n  }\n\n  return values\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * Parse space separated tokens to an array of strings.\n *\n * @param {string} value Space separated tokens\n * @returns {Array.<string>} Tokens\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated tokens.\n *\n * @param {Array.<string|number>} values Tokens\n * @returns {string} Space separated tokens\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('react').ReactElement<{}>} ReactElement\n * @typedef {import('unified').PluggableList} PluggableList\n * @typedef {import('hast').Root} Root\n * @typedef {import('./rehype-filter.js').Options} FilterOptions\n * @typedef {import('./ast-to-react.js').Options} TransformOptions\n *\n * @typedef CoreOptions\n * @property {string} children\n *\n * @typedef PluginOptions\n * @property {PluggableList} [plugins=[]] **deprecated**: use `remarkPlugins` instead\n * @property {PluggableList} [remarkPlugins=[]]\n * @property {PluggableList} [rehypePlugins=[]]\n *\n * @typedef LayoutOptions\n * @property {string} [className]\n *\n * @typedef {CoreOptions & PluginOptions & LayoutOptions & FilterOptions & TransformOptions} ReactMarkdownOptions\n *\n * @typedef Deprecation\n * @property {string} id\n * @property {string} [to]\n */\n\nimport React from 'react'\nimport {VFile} from 'vfile'\nimport {unified} from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport PropTypes from 'prop-types'\nimport {html} from 'property-information'\nimport rehypeFilter from './rehype-filter.js'\nimport {uriTransformer} from './uri-transformer.js'\nimport {childrenToReact} from './ast-to-react.js'\n\nconst own = {}.hasOwnProperty\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {Object.<string, Deprecation>} */\nconst deprecated = {\n  renderers: {to: 'components', id: 'change-renderers-to-components'},\n  astPlugins: {id: 'remove-buggy-html-in-markdown-parser'},\n  allowDangerousHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  escapeHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  source: {to: 'children', id: 'change-source-to-children'},\n  allowNode: {\n    to: 'allowElement',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  allowedTypes: {\n    to: 'allowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  disallowedTypes: {\n    to: 'disallowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  includeNodeIndex: {\n    to: 'includeElementIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  }\n}\n\n/**\n * @param {ReactMarkdownOptions} options\n * @returns {ReactElement}\n */\nexport function ReactMarkdown(options) {\n  for (const key in deprecated) {\n    if (own.call(deprecated, key) && own.call(options, key)) {\n      const deprecation = deprecated[key]\n      console.warn(\n        `[react-markdown] Warning: please ${\n          deprecation.to ? `use \\`${deprecation.to}\\` instead of` : 'remove'\n        } \\`${key}\\` (see <${changelog}#${deprecation.id}> for more info)`\n      )\n      delete deprecated[key]\n    }\n  }\n\n  const processor = unified()\n    .use(remarkParse)\n    // TODO: deprecate `plugins` in v8.0.0.\n    .use(options.remarkPlugins || options.plugins || [])\n    .use(remarkRehype, {allowDangerousHtml: true})\n    .use(options.rehypePlugins || [])\n    .use(rehypeFilter, options)\n\n  const file = new VFile()\n\n  if (typeof options.children === 'string') {\n    file.value = options.children\n  } else if (options.children !== undefined && options.children !== null) {\n    console.warn(\n      `[react-markdown] Warning: please pass a string as \\`children\\` (not: \\`${options.children}\\`)`\n    )\n  }\n\n  const hastNode = processor.runSync(processor.parse(file), file)\n\n  if (hastNode.type !== 'root') {\n    throw new TypeError('Expected a `root` node')\n  }\n\n  /** @type {ReactElement} */\n  let result = React.createElement(\n    React.Fragment,\n    {},\n    childrenToReact({options, schema: html, listDepth: 0}, hastNode)\n  )\n\n  if (options.className) {\n    result = React.createElement('div', {className: options.className}, result)\n  }\n\n  return result\n}\n\nReactMarkdown.defaultProps = {transformLinkUri: uriTransformer}\n\nReactMarkdown.propTypes = {\n  // Core options:\n  children: PropTypes.string,\n  // Layout options:\n  className: PropTypes.string,\n  // Filter options:\n  allowElement: PropTypes.func,\n  allowedElements: PropTypes.arrayOf(PropTypes.string),\n  disallowedElements: PropTypes.arrayOf(PropTypes.string),\n  unwrapDisallowed: PropTypes.bool,\n  // Plugin options:\n  remarkPlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.object, PropTypes.func]))\n    ])\n  ),\n  rehypePlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.object, PropTypes.func]))\n    ])\n  ),\n  // Transform options:\n  sourcePos: PropTypes.bool,\n  rawSourcePos: PropTypes.bool,\n  skipHtml: PropTypes.bool,\n  includeElementIndex: PropTypes.bool,\n  transformLinkUri: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  linkTarget: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  transformImageUri: PropTypes.func,\n  components: PropTypes.object\n}\n","/**\n * @typedef {import('./lib/react-markdown.js').ReactMarkdownOptions} Options\n * @typedef {import('./lib/ast-to-react.js').Components} Components\n */\n\nimport {ReactMarkdown} from './lib/react-markdown.js'\n\nexport {uriTransformer} from './lib/uri-transformer.js'\n\nexport default ReactMarkdown\n","/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction lookahead(re) {\n  return concat('(?=', re, ')');\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction optional(re) {\n  return concat('(?:', re, ')?');\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/*\nLanguage: C++\nCategory: common, system\nWebsite: https://isocpp.org\n*/\n\n/** @type LanguageFn */\nfunction cPlusPlus(hljs) {\n  // added for historic reasons because `hljs.C_LINE_COMMENT_MODE` does\n  // not include such support nor can we be sure all the grammars depending\n  // on it would desire this behavior\n  const C_LINE_COMMENT_MODE = hljs.COMMENT('//', '$', {\n    contains: [\n      {\n        begin: /\\\\\\n/\n      }\n    ]\n  });\n  const DECLTYPE_AUTO_RE = 'decltype\\\\(auto\\\\)';\n  const NAMESPACE_RE = '[a-zA-Z_]\\\\w*::';\n  const TEMPLATE_ARGUMENT_RE = '<[^<>]+>';\n  const FUNCTION_TYPE_RE = '(?!struct)(' +\n    DECLTYPE_AUTO_RE + '|' +\n    optional(NAMESPACE_RE) +\n    '[a-zA-Z_]\\\\w*' + optional(TEMPLATE_ARGUMENT_RE) +\n  ')';\n\n  const CPP_PRIMITIVE_TYPES = {\n    className: 'type',\n    begin: '\\\\b[a-z\\\\d_]*_t\\\\b'\n  };\n\n  // https://en.cppreference.com/w/cpp/language/escape\n  // \\\\ \\x \\xFF \\u2837 \\u00323747 \\374\n  const CHARACTER_ESCAPES = '\\\\\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4,8}|[0-7]{3}|\\\\S)';\n  const STRINGS = {\n    className: 'string',\n    variants: [\n      {\n        begin: '(u8?|U|L)?\"',\n        end: '\"',\n        illegal: '\\\\n',\n        contains: [ hljs.BACKSLASH_ESCAPE ]\n      },\n      {\n        begin: '(u8?|U|L)?\\'(' + CHARACTER_ESCAPES + '|.)',\n        end: '\\'',\n        illegal: '.'\n      },\n      hljs.END_SAME_AS_BEGIN({\n        begin: /(?:u8?|U|L)?R\"([^()\\\\ ]{0,16})\\(/,\n        end: /\\)([^()\\\\ ]{0,16})\"/\n      })\n    ]\n  };\n\n  const NUMBERS = {\n    className: 'number',\n    variants: [\n      {\n        begin: '\\\\b(0b[01\\']+)'\n      },\n      {\n        begin: '(-?)\\\\b([\\\\d\\']+(\\\\.[\\\\d\\']*)?|\\\\.[\\\\d\\']+)((ll|LL|l|L)(u|U)?|(u|U)(ll|LL|l|L)?|f|F|b|B)'\n      },\n      {\n        begin: '(-?)(\\\\b0[xX][a-fA-F0-9\\']+|(\\\\b[\\\\d\\']+(\\\\.[\\\\d\\']*)?|\\\\.[\\\\d\\']+)([eE][-+]?[\\\\d\\']+)?)'\n      }\n    ],\n    relevance: 0\n  };\n\n  const PREPROCESSOR = {\n    className: 'meta',\n    begin: /#\\s*[a-z]+\\b/,\n    end: /$/,\n    keywords: {\n      keyword:\n        'if else elif endif define undef warning error line ' +\n        'pragma _Pragma ifdef ifndef include'\n    },\n    contains: [\n      {\n        begin: /\\\\\\n/,\n        relevance: 0\n      },\n      hljs.inherit(STRINGS, {\n        className: 'string'\n      }),\n      {\n        className: 'string',\n        begin: /<.*?>/\n      },\n      C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE\n    ]\n  };\n\n  const TITLE_MODE = {\n    className: 'title',\n    begin: optional(NAMESPACE_RE) + hljs.IDENT_RE,\n    relevance: 0\n  };\n\n  const FUNCTION_TITLE = optional(NAMESPACE_RE) + hljs.IDENT_RE + '\\\\s*\\\\(';\n\n  // https://en.cppreference.com/w/cpp/keyword\n  const RESERVED_KEYWORDS = [\n    'alignas',\n    'alignof',\n    'and',\n    'and_eq',\n    'asm',\n    'atomic_cancel',\n    'atomic_commit',\n    'atomic_noexcept',\n    'auto',\n    'bitand',\n    'bitor',\n    'break',\n    'case',\n    'catch',\n    'class',\n    'co_await',\n    'co_return',\n    'co_yield',\n    'compl',\n    'concept',\n    'const',\n    'const_cast|10',\n    'consteval',\n    'constexpr',\n    'constinit',\n    'continue',\n    'decltype',\n    'default',\n    'delete',\n    'do',\n    'dynamic_cast|10',\n    'else',\n    'enum',\n    'explicit',\n    'export',\n    'extern',\n    'false',\n    'final',\n    'for',\n    'friend',\n    'goto',\n    'if',\n    'import',\n    'inline',\n    'module',\n    'mutable',\n    'namespace',\n    'new',\n    'noexcept',\n    'not',\n    'not_eq',\n    'nullptr',\n    'operator',\n    'or',\n    'or_eq',\n    'override',\n    'private',\n    'protected',\n    'public',\n    'reflexpr',\n    'register',\n    'reinterpret_cast|10',\n    'requires',\n    'return',\n    'signed',\n    'sizeof',\n    'static',\n    'static_assert',\n    'static_cast|10',\n    'struct',\n    'switch',\n    'synchronized',\n    'template',\n    'this',\n    'thread_local',\n    'throw',\n    'transaction_safe',\n    'transaction_safe_dynamic',\n    'true',\n    'try',\n    'typedef',\n    'typeid',\n    'typename',\n    'union',\n    'unsigned',\n    'using',\n    'virtual',\n    'volatile',\n    'while',\n    'xor',\n    'xor_eq,'\n  ];\n\n  // https://en.cppreference.com/w/cpp/keyword\n  const RESERVED_TYPES = [\n    'bool',\n    'char',\n    'char16_t',\n    'char32_t',\n    'char8_t',\n    'double',\n    'float',\n    'int',\n    'long',\n    'short',\n    'void',\n    'wchar_t'\n  ];\n\n  const TYPE_HINTS = [\n    'any',\n    'auto_ptr',\n    'barrier',\n    'binary_semaphore',\n    'bitset',\n    'complex',\n    'condition_variable',\n    'condition_variable_any',\n    'counting_semaphore',\n    'deque',\n    'false_type',\n    'future',\n    'imaginary',\n    'initializer_list',\n    'istringstream',\n    'jthread',\n    'latch',\n    'lock_guard',\n    'multimap',\n    'multiset',\n    'mutex',\n    'optional',\n    'ostringstream',\n    'packaged_task',\n    'pair',\n    'promise',\n    'priority_queue',\n    'queue',\n    'recursive_mutex',\n    'recursive_timed_mutex',\n    'scoped_lock',\n    'set',\n    'shared_future',\n    'shared_lock',\n    'shared_mutex',\n    'shared_timed_mutex',\n    'shared_ptr',\n    'stack',\n    'string_view',\n    'stringstream',\n    'timed_mutex',\n    'thread',\n    'true_type',\n    'tuple',\n    'unique_lock',\n    'unique_ptr',\n    'unordered_map',\n    'unordered_multimap',\n    'unordered_multiset',\n    'unordered_set',\n    'variant',\n    'vector',\n    'weak_ptr',\n    'wstring',\n    'wstring_view'\n  ];\n\n  const FUNCTION_HINTS = [\n    'abort',\n    'abs',\n    'acos',\n    'apply',\n    'as_const',\n    'asin',\n    'atan',\n    'atan2',\n    'calloc',\n    'ceil',\n    'cerr',\n    'cin',\n    'clog',\n    'cos',\n    'cosh',\n    'cout',\n    'declval',\n    'endl',\n    'exchange',\n    'exit',\n    'exp',\n    'fabs',\n    'floor',\n    'fmod',\n    'forward',\n    'fprintf',\n    'fputs',\n    'free',\n    'frexp',\n    'fscanf',\n    'future',\n    'invoke',\n    'isalnum',\n    'isalpha',\n    'iscntrl',\n    'isdigit',\n    'isgraph',\n    'islower',\n    'isprint',\n    'ispunct',\n    'isspace',\n    'isupper',\n    'isxdigit',\n    'labs',\n    'launder',\n    'ldexp',\n    'log',\n    'log10',\n    'make_pair',\n    'make_shared',\n    'make_shared_for_overwrite',\n    'make_tuple',\n    'make_unique',\n    'malloc',\n    'memchr',\n    'memcmp',\n    'memcpy',\n    'memset',\n    'modf',\n    'move',\n    'pow',\n    'printf',\n    'putchar',\n    'puts',\n    'realloc',\n    'scanf',\n    'sin',\n    'sinh',\n    'snprintf',\n    'sprintf',\n    'sqrt',\n    'sscanf',\n    'std',\n    'stderr',\n    'stdin',\n    'stdout',\n    'strcat',\n    'strchr',\n    'strcmp',\n    'strcpy',\n    'strcspn',\n    'strlen',\n    'strncat',\n    'strncmp',\n    'strncpy',\n    'strpbrk',\n    'strrchr',\n    'strspn',\n    'strstr',\n    'swap',\n    'tan',\n    'tanh',\n    'terminate',\n    'to_underlying',\n    'tolower',\n    'toupper',\n    'vfprintf',\n    'visit',\n    'vprintf',\n    'vsprintf'\n  ];\n\n  const LITERALS = [\n    'NULL',\n    'false',\n    'nullopt',\n    'nullptr',\n    'true'\n  ];\n\n  // https://en.cppreference.com/w/cpp/keyword\n  const BUILT_IN = [\n    '_Pragma'\n  ];\n\n  const CPP_KEYWORDS = {\n    type: RESERVED_TYPES,\n    keyword: RESERVED_KEYWORDS,\n    literal: LITERALS,\n    built_in: BUILT_IN,\n    _type_hints: TYPE_HINTS\n  };\n\n  const FUNCTION_DISPATCH = {\n    className: 'function.dispatch',\n    relevance: 0,\n    keywords: {\n      // Only for relevance, not highlighting.\n      _hint: FUNCTION_HINTS\n    },\n    begin: concat(\n      /\\b/,\n      /(?!decltype)/,\n      /(?!if)/,\n      /(?!for)/,\n      /(?!while)/,\n      hljs.IDENT_RE,\n      lookahead(/(<[^<>]+>|)\\s*\\(/))\n  };\n\n  const EXPRESSION_CONTAINS = [\n    FUNCTION_DISPATCH,\n    PREPROCESSOR,\n    CPP_PRIMITIVE_TYPES,\n    C_LINE_COMMENT_MODE,\n    hljs.C_BLOCK_COMMENT_MODE,\n    NUMBERS,\n    STRINGS\n  ];\n\n  const EXPRESSION_CONTEXT = {\n    // This mode covers expression context where we can't expect a function\n    // definition and shouldn't highlight anything that looks like one:\n    // `return some()`, `else if()`, `(x*sum(1, 2))`\n    variants: [\n      {\n        begin: /=/,\n        end: /;/\n      },\n      {\n        begin: /\\(/,\n        end: /\\)/\n      },\n      {\n        beginKeywords: 'new throw return else',\n        end: /;/\n      }\n    ],\n    keywords: CPP_KEYWORDS,\n    contains: EXPRESSION_CONTAINS.concat([\n      {\n        begin: /\\(/,\n        end: /\\)/,\n        keywords: CPP_KEYWORDS,\n        contains: EXPRESSION_CONTAINS.concat([ 'self' ]),\n        relevance: 0\n      }\n    ]),\n    relevance: 0\n  };\n\n  const FUNCTION_DECLARATION = {\n    className: 'function',\n    begin: '(' + FUNCTION_TYPE_RE + '[\\\\*&\\\\s]+)+' + FUNCTION_TITLE,\n    returnBegin: true,\n    end: /[{;=]/,\n    excludeEnd: true,\n    keywords: CPP_KEYWORDS,\n    illegal: /[^\\w\\s\\*&:<>.]/,\n    contains: [\n      { // to prevent it from being confused as the function title\n        begin: DECLTYPE_AUTO_RE,\n        keywords: CPP_KEYWORDS,\n        relevance: 0\n      },\n      {\n        begin: FUNCTION_TITLE,\n        returnBegin: true,\n        contains: [ TITLE_MODE ],\n        relevance: 0\n      },\n      // needed because we do not have look-behind on the below rule\n      // to prevent it from grabbing the final : in a :: pair\n      {\n        begin: /::/,\n        relevance: 0\n      },\n      // initializers\n      {\n        begin: /:/,\n        endsWithParent: true,\n        contains: [\n          STRINGS,\n          NUMBERS\n        ]\n      },\n      // allow for multiple declarations, e.g.:\n      // extern void f(int), g(char);\n      {\n        relevance: 0,\n        match: /,/\n      },\n      {\n        className: 'params',\n        begin: /\\(/,\n        end: /\\)/,\n        keywords: CPP_KEYWORDS,\n        relevance: 0,\n        contains: [\n          C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE,\n          STRINGS,\n          NUMBERS,\n          CPP_PRIMITIVE_TYPES,\n          // Count matching parentheses.\n          {\n            begin: /\\(/,\n            end: /\\)/,\n            keywords: CPP_KEYWORDS,\n            relevance: 0,\n            contains: [\n              'self',\n              C_LINE_COMMENT_MODE,\n              hljs.C_BLOCK_COMMENT_MODE,\n              STRINGS,\n              NUMBERS,\n              CPP_PRIMITIVE_TYPES\n            ]\n          }\n        ]\n      },\n      CPP_PRIMITIVE_TYPES,\n      C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      PREPROCESSOR\n    ]\n  };\n\n  return {\n    name: 'C++',\n    aliases: [\n      'cc',\n      'c++',\n      'h++',\n      'hpp',\n      'hh',\n      'hxx',\n      'cxx'\n    ],\n    keywords: CPP_KEYWORDS,\n    illegal: '</',\n    classNameAliases: {\n      'function.dispatch': 'built_in'\n    },\n    contains: [].concat(\n      EXPRESSION_CONTEXT,\n      FUNCTION_DECLARATION,\n      FUNCTION_DISPATCH,\n      EXPRESSION_CONTAINS,\n      [\n        PREPROCESSOR,\n        { // containers: ie, `vector <int> rooms (9);`\n          begin: '\\\\b(deque|list|queue|priority_queue|pair|stack|vector|map|set|bitset|multiset|multimap|unordered_map|unordered_set|unordered_multiset|unordered_multimap|array|tuple|optional|variant|function)\\\\s*<',\n          end: '>',\n          keywords: CPP_KEYWORDS,\n          contains: [\n            'self',\n            CPP_PRIMITIVE_TYPES\n          ]\n        },\n        {\n          begin: hljs.IDENT_RE + '::',\n          keywords: CPP_KEYWORDS\n        },\n        {\n          match: [\n            // extra complexity to deal with `enum class` and `enum struct`\n            /\\b(?:enum(?:\\s+(?:class|struct))?|class|struct|union)/,\n            /\\s+/,\n            /\\w+/\n          ],\n          className: {\n            1: 'keyword',\n            3: 'title.class'\n          }\n        }\n      ])\n  };\n}\n\n/*\nLanguage: Arduino\nAuthor: Stefania Mellai <s.mellai@arduino.cc>\nDescription: The Arduino® Language is a superset of C++. This rules are designed to highlight the Arduino® source code. For info about language see http://www.arduino.cc.\nWebsite: https://www.arduino.cc\n*/\n\n/** @type LanguageFn */\nfunction arduino(hljs) {\n  const ARDUINO_KW = {\n    type: [\n      \"boolean\",\n      \"byte\",\n      \"word\",\n      \"String\"\n    ],\n    built_in: [\n      \"KeyboardController\",\n      \"MouseController\",\n      \"SoftwareSerial\",\n      \"EthernetServer\",\n      \"EthernetClient\",\n      \"LiquidCrystal\",\n      \"RobotControl\",\n      \"GSMVoiceCall\",\n      \"EthernetUDP\",\n      \"EsploraTFT\",\n      \"HttpClient\",\n      \"RobotMotor\",\n      \"WiFiClient\",\n      \"GSMScanner\",\n      \"FileSystem\",\n      \"Scheduler\",\n      \"GSMServer\",\n      \"YunClient\",\n      \"YunServer\",\n      \"IPAddress\",\n      \"GSMClient\",\n      \"GSMModem\",\n      \"Keyboard\",\n      \"Ethernet\",\n      \"Console\",\n      \"GSMBand\",\n      \"Esplora\",\n      \"Stepper\",\n      \"Process\",\n      \"WiFiUDP\",\n      \"GSM_SMS\",\n      \"Mailbox\",\n      \"USBHost\",\n      \"Firmata\",\n      \"PImage\",\n      \"Client\",\n      \"Server\",\n      \"GSMPIN\",\n      \"FileIO\",\n      \"Bridge\",\n      \"Serial\",\n      \"EEPROM\",\n      \"Stream\",\n      \"Mouse\",\n      \"Audio\",\n      \"Servo\",\n      \"File\",\n      \"Task\",\n      \"GPRS\",\n      \"WiFi\",\n      \"Wire\",\n      \"TFT\",\n      \"GSM\",\n      \"SPI\",\n      \"SD\"\n    ],\n    _hints: [\n      \"setup\",\n      \"loop\",\n      \"runShellCommandAsynchronously\",\n      \"analogWriteResolution\",\n      \"retrieveCallingNumber\",\n      \"printFirmwareVersion\",\n      \"analogReadResolution\",\n      \"sendDigitalPortPair\",\n      \"noListenOnLocalhost\",\n      \"readJoystickButton\",\n      \"setFirmwareVersion\",\n      \"readJoystickSwitch\",\n      \"scrollDisplayRight\",\n      \"getVoiceCallStatus\",\n      \"scrollDisplayLeft\",\n      \"writeMicroseconds\",\n      \"delayMicroseconds\",\n      \"beginTransmission\",\n      \"getSignalStrength\",\n      \"runAsynchronously\",\n      \"getAsynchronously\",\n      \"listenOnLocalhost\",\n      \"getCurrentCarrier\",\n      \"readAccelerometer\",\n      \"messageAvailable\",\n      \"sendDigitalPorts\",\n      \"lineFollowConfig\",\n      \"countryNameWrite\",\n      \"runShellCommand\",\n      \"readStringUntil\",\n      \"rewindDirectory\",\n      \"readTemperature\",\n      \"setClockDivider\",\n      \"readLightSensor\",\n      \"endTransmission\",\n      \"analogReference\",\n      \"detachInterrupt\",\n      \"countryNameRead\",\n      \"attachInterrupt\",\n      \"encryptionType\",\n      \"readBytesUntil\",\n      \"robotNameWrite\",\n      \"readMicrophone\",\n      \"robotNameRead\",\n      \"cityNameWrite\",\n      \"userNameWrite\",\n      \"readJoystickY\",\n      \"readJoystickX\",\n      \"mouseReleased\",\n      \"openNextFile\",\n      \"scanNetworks\",\n      \"noInterrupts\",\n      \"digitalWrite\",\n      \"beginSpeaker\",\n      \"mousePressed\",\n      \"isActionDone\",\n      \"mouseDragged\",\n      \"displayLogos\",\n      \"noAutoscroll\",\n      \"addParameter\",\n      \"remoteNumber\",\n      \"getModifiers\",\n      \"keyboardRead\",\n      \"userNameRead\",\n      \"waitContinue\",\n      \"processInput\",\n      \"parseCommand\",\n      \"printVersion\",\n      \"readNetworks\",\n      \"writeMessage\",\n      \"blinkVersion\",\n      \"cityNameRead\",\n      \"readMessage\",\n      \"setDataMode\",\n      \"parsePacket\",\n      \"isListening\",\n      \"setBitOrder\",\n      \"beginPacket\",\n      \"isDirectory\",\n      \"motorsWrite\",\n      \"drawCompass\",\n      \"digitalRead\",\n      \"clearScreen\",\n      \"serialEvent\",\n      \"rightToLeft\",\n      \"setTextSize\",\n      \"leftToRight\",\n      \"requestFrom\",\n      \"keyReleased\",\n      \"compassRead\",\n      \"analogWrite\",\n      \"interrupts\",\n      \"WiFiServer\",\n      \"disconnect\",\n      \"playMelody\",\n      \"parseFloat\",\n      \"autoscroll\",\n      \"getPINUsed\",\n      \"setPINUsed\",\n      \"setTimeout\",\n      \"sendAnalog\",\n      \"readSlider\",\n      \"analogRead\",\n      \"beginWrite\",\n      \"createChar\",\n      \"motorsStop\",\n      \"keyPressed\",\n      \"tempoWrite\",\n      \"readButton\",\n      \"subnetMask\",\n      \"debugPrint\",\n      \"macAddress\",\n      \"writeGreen\",\n      \"randomSeed\",\n      \"attachGPRS\",\n      \"readString\",\n      \"sendString\",\n      \"remotePort\",\n      \"releaseAll\",\n      \"mouseMoved\",\n      \"background\",\n      \"getXChange\",\n      \"getYChange\",\n      \"answerCall\",\n      \"getResult\",\n      \"voiceCall\",\n      \"endPacket\",\n      \"constrain\",\n      \"getSocket\",\n      \"writeJSON\",\n      \"getButton\",\n      \"available\",\n      \"connected\",\n      \"findUntil\",\n      \"readBytes\",\n      \"exitValue\",\n      \"readGreen\",\n      \"writeBlue\",\n      \"startLoop\",\n      \"IPAddress\",\n      \"isPressed\",\n      \"sendSysex\",\n      \"pauseMode\",\n      \"gatewayIP\",\n      \"setCursor\",\n      \"getOemKey\",\n      \"tuneWrite\",\n      \"noDisplay\",\n      \"loadImage\",\n      \"switchPIN\",\n      \"onRequest\",\n      \"onReceive\",\n      \"changePIN\",\n      \"playFile\",\n      \"noBuffer\",\n      \"parseInt\",\n      \"overflow\",\n      \"checkPIN\",\n      \"knobRead\",\n      \"beginTFT\",\n      \"bitClear\",\n      \"updateIR\",\n      \"bitWrite\",\n      \"position\",\n      \"writeRGB\",\n      \"highByte\",\n      \"writeRed\",\n      \"setSpeed\",\n      \"readBlue\",\n      \"noStroke\",\n      \"remoteIP\",\n      \"transfer\",\n      \"shutdown\",\n      \"hangCall\",\n      \"beginSMS\",\n      \"endWrite\",\n      \"attached\",\n      \"maintain\",\n      \"noCursor\",\n      \"checkReg\",\n      \"checkPUK\",\n      \"shiftOut\",\n      \"isValid\",\n      \"shiftIn\",\n      \"pulseIn\",\n      \"connect\",\n      \"println\",\n      \"localIP\",\n      \"pinMode\",\n      \"getIMEI\",\n      \"display\",\n      \"noBlink\",\n      \"process\",\n      \"getBand\",\n      \"running\",\n      \"beginSD\",\n      \"drawBMP\",\n      \"lowByte\",\n      \"setBand\",\n      \"release\",\n      \"bitRead\",\n      \"prepare\",\n      \"pointTo\",\n      \"readRed\",\n      \"setMode\",\n      \"noFill\",\n      \"remove\",\n      \"listen\",\n      \"stroke\",\n      \"detach\",\n      \"attach\",\n      \"noTone\",\n      \"exists\",\n      \"buffer\",\n      \"height\",\n      \"bitSet\",\n      \"circle\",\n      \"config\",\n      \"cursor\",\n      \"random\",\n      \"IRread\",\n      \"setDNS\",\n      \"endSMS\",\n      \"getKey\",\n      \"micros\",\n      \"millis\",\n      \"begin\",\n      \"print\",\n      \"write\",\n      \"ready\",\n      \"flush\",\n      \"width\",\n      \"isPIN\",\n      \"blink\",\n      \"clear\",\n      \"press\",\n      \"mkdir\",\n      \"rmdir\",\n      \"close\",\n      \"point\",\n      \"yield\",\n      \"image\",\n      \"BSSID\",\n      \"click\",\n      \"delay\",\n      \"read\",\n      \"text\",\n      \"move\",\n      \"peek\",\n      \"beep\",\n      \"rect\",\n      \"line\",\n      \"open\",\n      \"seek\",\n      \"fill\",\n      \"size\",\n      \"turn\",\n      \"stop\",\n      \"home\",\n      \"find\",\n      \"step\",\n      \"tone\",\n      \"sqrt\",\n      \"RSSI\",\n      \"SSID\",\n      \"end\",\n      \"bit\",\n      \"tan\",\n      \"cos\",\n      \"sin\",\n      \"pow\",\n      \"map\",\n      \"abs\",\n      \"max\",\n      \"min\",\n      \"get\",\n      \"run\",\n      \"put\"\n    ],\n    literal: [\n      \"DIGITAL_MESSAGE\",\n      \"FIRMATA_STRING\",\n      \"ANALOG_MESSAGE\",\n      \"REPORT_DIGITAL\",\n      \"REPORT_ANALOG\",\n      \"INPUT_PULLUP\",\n      \"SET_PIN_MODE\",\n      \"INTERNAL2V56\",\n      \"SYSTEM_RESET\",\n      \"LED_BUILTIN\",\n      \"INTERNAL1V1\",\n      \"SYSEX_START\",\n      \"INTERNAL\",\n      \"EXTERNAL\",\n      \"DEFAULT\",\n      \"OUTPUT\",\n      \"INPUT\",\n      \"HIGH\",\n      \"LOW\"\n    ]\n  };\n\n  const ARDUINO = cPlusPlus(hljs);\n\n  const kws = /** @type {Record<string,any>} */ (ARDUINO.keywords);\n\n  kws.type = [ ...kws.type, ...ARDUINO_KW.type ];\n  kws.literal = [ ...kws.literal, ...ARDUINO_KW.literal ];\n  kws.built_in = [ ...kws.built_in, ...ARDUINO_KW.built_in ];\n  kws._hints = ARDUINO_KW._hints;\n\n  ARDUINO.name = 'Arduino';\n  ARDUINO.aliases = ['ino'];\n  ARDUINO.supersetOf = \"cpp\";\n\n  return ARDUINO;\n}\n\nexport default arduino;\n","/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/*\nLanguage: Bash\nAuthor: vah <vahtenberg@gmail.com>\nContributrors: Benjamin Pannell <contact@sierrasoftworks.com>\nWebsite: https://www.gnu.org/software/bash/\nCategory: common\n*/\n\n/** @type LanguageFn */\nfunction bash(hljs) {\n  const VAR = {};\n  const BRACED_VAR = {\n    begin: /\\$\\{/,\n    end:/\\}/,\n    contains: [\n      \"self\",\n      {\n        begin: /:-/,\n        contains: [ VAR ]\n      } // default values\n    ]\n  };\n  Object.assign(VAR,{\n    className: 'variable',\n    variants: [\n      {begin: concat(/\\$[\\w\\d#@][\\w\\d_]*/,\n        // negative look-ahead tries to avoid matching patterns that are not\n        // Perl at all like $ident$, @ident@, etc.\n        `(?![\\\\w\\\\d])(?![$])`) },\n      BRACED_VAR\n    ]\n  });\n\n  const SUBST = {\n    className: 'subst',\n    begin: /\\$\\(/, end: /\\)/,\n    contains: [hljs.BACKSLASH_ESCAPE]\n  };\n  const HERE_DOC = {\n    begin: /<<-?\\s*(?=\\w+)/,\n    starts: {\n      contains: [\n        hljs.END_SAME_AS_BEGIN({\n          begin: /(\\w+)/,\n          end: /(\\w+)/,\n          className: 'string'\n        })\n      ]\n    }\n  };\n  const QUOTE_STRING = {\n    className: 'string',\n    begin: /\"/, end: /\"/,\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      VAR,\n      SUBST\n    ]\n  };\n  SUBST.contains.push(QUOTE_STRING);\n  const ESCAPED_QUOTE = {\n    className: '',\n    begin: /\\\\\"/\n\n  };\n  const APOS_STRING = {\n    className: 'string',\n    begin: /'/, end: /'/\n  };\n  const ARITHMETIC = {\n    begin: /\\$\\(\\(/,\n    end: /\\)\\)/,\n    contains: [\n      { begin: /\\d+#[0-9a-f]+/, className: \"number\" },\n      hljs.NUMBER_MODE,\n      VAR\n    ]\n  };\n  const SH_LIKE_SHELLS = [\n    \"fish\",\n    \"bash\",\n    \"zsh\",\n    \"sh\",\n    \"csh\",\n    \"ksh\",\n    \"tcsh\",\n    \"dash\",\n    \"scsh\",\n  ];\n  const KNOWN_SHEBANG = hljs.SHEBANG({\n    binary: `(${SH_LIKE_SHELLS.join(\"|\")})`,\n    relevance: 10\n  });\n  const FUNCTION = {\n    className: 'function',\n    begin: /\\w[\\w\\d_]*\\s*\\(\\s*\\)\\s*\\{/,\n    returnBegin: true,\n    contains: [hljs.inherit(hljs.TITLE_MODE, {begin: /\\w[\\w\\d_]*/})],\n    relevance: 0\n  };\n\n  const KEYWORDS = [\n    \"if\",\n    \"then\",\n    \"else\",\n    \"elif\",\n    \"fi\",\n    \"for\",\n    \"while\",\n    \"in\",\n    \"do\",\n    \"done\",\n    \"case\",\n    \"esac\",\n    \"function\"\n  ];\n\n  const LITERALS = [\n    \"true\",\n    \"false\"\n  ];\n\n  return {\n    name: 'Bash',\n    aliases: ['sh'],\n    keywords: {\n      $pattern: /\\b[a-z._-]+\\b/,\n      keyword: KEYWORDS,\n      literal: LITERALS,\n      built_in:\n        // Shell built-ins\n        // http://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html\n        'break cd continue eval exec exit export getopts hash pwd readonly return shift test times ' +\n        'trap umask unset ' +\n        // Bash built-ins\n        'alias bind builtin caller command declare echo enable help let local logout mapfile printf ' +\n        'read readarray source type typeset ulimit unalias ' +\n        // Shell modifiers\n        'set shopt ' +\n        // Zsh built-ins\n        'autoload bg bindkey bye cap chdir clone comparguments compcall compctl compdescribe compfiles ' +\n        'compgroups compquote comptags comptry compvalues dirs disable disown echotc echoti emulate ' +\n        'fc fg float functions getcap getln history integer jobs kill limit log noglob popd print ' +\n        'pushd pushln rehash sched setcap setopt stat suspend ttyctl unfunction unhash unlimit ' +\n        'unsetopt vared wait whence where which zcompile zformat zftp zle zmodload zparseopts zprof ' +\n        'zpty zregexparse zsocket zstyle ztcp'\n    },\n    contains: [\n      KNOWN_SHEBANG, // to catch known shells and boost relevancy\n      hljs.SHEBANG(), // to catch unknown shells but still highlight the shebang\n      FUNCTION,\n      ARITHMETIC,\n      hljs.HASH_COMMENT_MODE,\n      HERE_DOC,\n      QUOTE_STRING,\n      ESCAPED_QUOTE,\n      APOS_STRING,\n      VAR\n    ]\n  };\n}\n\nexport default bash;\n","/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction optional(re) {\n  return concat('(?:', re, ')?');\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/*\nLanguage: C\nCategory: common, system\nWebsite: https://en.wikipedia.org/wiki/C_(programming_language)\n*/\n\n/** @type LanguageFn */\nfunction c(hljs) {\n  // added for historic reasons because `hljs.C_LINE_COMMENT_MODE` does\n  // not include such support nor can we be sure all the grammars depending\n  // on it would desire this behavior\n  const C_LINE_COMMENT_MODE = hljs.COMMENT('//', '$', {\n    contains: [\n      {\n        begin: /\\\\\\n/\n      }\n    ]\n  });\n  const DECLTYPE_AUTO_RE = 'decltype\\\\(auto\\\\)';\n  const NAMESPACE_RE = '[a-zA-Z_]\\\\w*::';\n  const TEMPLATE_ARGUMENT_RE = '<[^<>]+>';\n  const FUNCTION_TYPE_RE = '(' +\n    DECLTYPE_AUTO_RE + '|' +\n    optional(NAMESPACE_RE) +\n    '[a-zA-Z_]\\\\w*' + optional(TEMPLATE_ARGUMENT_RE) +\n  ')';\n\n\n  const TYPES = {\n    className: 'type',\n    variants: [\n      { begin: '\\\\b[a-z\\\\d_]*_t\\\\b' },\n      { match: /\\batomic_[a-z]{3,6}\\b/}\n    ]\n\n  };\n\n  // https://en.cppreference.com/w/cpp/language/escape\n  // \\\\ \\x \\xFF \\u2837 \\u00323747 \\374\n  const CHARACTER_ESCAPES = '\\\\\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4,8}|[0-7]{3}|\\\\S)';\n  const STRINGS = {\n    className: 'string',\n    variants: [\n      {\n        begin: '(u8?|U|L)?\"',\n        end: '\"',\n        illegal: '\\\\n',\n        contains: [ hljs.BACKSLASH_ESCAPE ]\n      },\n      {\n        begin: '(u8?|U|L)?\\'(' + CHARACTER_ESCAPES + \"|.)\",\n        end: '\\'',\n        illegal: '.'\n      },\n      hljs.END_SAME_AS_BEGIN({\n        begin: /(?:u8?|U|L)?R\"([^()\\\\ ]{0,16})\\(/,\n        end: /\\)([^()\\\\ ]{0,16})\"/\n      })\n    ]\n  };\n\n  const NUMBERS = {\n    className: 'number',\n    variants: [\n      {\n        begin: '\\\\b(0b[01\\']+)'\n      },\n      {\n        begin: '(-?)\\\\b([\\\\d\\']+(\\\\.[\\\\d\\']*)?|\\\\.[\\\\d\\']+)((ll|LL|l|L)(u|U)?|(u|U)(ll|LL|l|L)?|f|F|b|B)'\n      },\n      {\n        begin: '(-?)(\\\\b0[xX][a-fA-F0-9\\']+|(\\\\b[\\\\d\\']+(\\\\.[\\\\d\\']*)?|\\\\.[\\\\d\\']+)([eE][-+]?[\\\\d\\']+)?)'\n      }\n    ],\n    relevance: 0\n  };\n\n  const PREPROCESSOR = {\n    className: 'meta',\n    begin: /#\\s*[a-z]+\\b/,\n    end: /$/,\n    keywords: {\n      keyword:\n        'if else elif endif define undef warning error line ' +\n        'pragma _Pragma ifdef ifndef include'\n    },\n    contains: [\n      {\n        begin: /\\\\\\n/,\n        relevance: 0\n      },\n      hljs.inherit(STRINGS, {\n        className: 'string'\n      }),\n      {\n        className: 'string',\n        begin: /<.*?>/\n      },\n      C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE\n    ]\n  };\n\n  const TITLE_MODE = {\n    className: 'title',\n    begin: optional(NAMESPACE_RE) + hljs.IDENT_RE,\n    relevance: 0\n  };\n\n  const FUNCTION_TITLE = optional(NAMESPACE_RE) + hljs.IDENT_RE + '\\\\s*\\\\(';\n\n  const C_KEYWORDS = [\n    \"asm\",\n    \"auto\",\n    \"break\",\n    \"case\",\n    \"const\",\n    \"continue\",\n    \"default\",\n    \"do\",\n    \"else\",\n    \"enum\",\n    \"extern\",\n    \"for\",\n    \"fortran\",\n    \"goto\",\n    \"if\",\n    \"inline\",\n    \"register\",\n    \"restrict\",\n    \"return\",\n    \"sizeof\",\n    \"static\",\n    \"struct\",\n    \"switch\",\n    \"typedef\",\n    \"union\",\n    \"volatile\",\n    \"while\",\n    \"_Alignas\",\n    \"_Alignof\",\n    \"_Atomic\",\n    \"_Generic\",\n    \"_Noreturn\",\n    \"_Static_assert\",\n    \"_Thread_local\",\n    // aliases\n    \"alignas\",\n    \"alignof\",\n    \"noreturn\",\n    \"static_assert\",\n    \"thread_local\",\n    // not a C keyword but is, for all intents and purposes, treated exactly like one.\n    \"_Pragma\"\n  ];\n\n  const C_TYPES = [\n    \"float\",\n    \"double\",\n    \"signed\",\n    \"unsigned\",\n    \"int\",\n    \"short\",\n    \"long\",\n    \"char\",\n    \"void\",\n    \"_Bool\",\n    \"_Complex\",\n    \"_Imaginary\",\n    \"_Decimal32\",\n    \"_Decimal64\",\n    \"_Decimal128\",\n    // aliases\n    \"complex\",\n    \"bool\",\n    \"imaginary\"\n  ];\n\n  const KEYWORDS = {\n    keyword: C_KEYWORDS,\n    type: C_TYPES,\n    literal: 'true false NULL',\n    // TODO: apply hinting work similar to what was done in cpp.js\n    built_in: 'std string wstring cin cout cerr clog stdin stdout stderr stringstream istringstream ostringstream ' +\n      'auto_ptr deque list queue stack vector map set pair bitset multiset multimap unordered_set ' +\n      'unordered_map unordered_multiset unordered_multimap priority_queue make_pair array shared_ptr abort terminate abs acos ' +\n      'asin atan2 atan calloc ceil cosh cos exit exp fabs floor fmod fprintf fputs free frexp ' +\n      'fscanf future isalnum isalpha iscntrl isdigit isgraph islower isprint ispunct isspace isupper ' +\n      'isxdigit tolower toupper labs ldexp log10 log malloc realloc memchr memcmp memcpy memset modf pow ' +\n      'printf putchar puts scanf sinh sin snprintf sprintf sqrt sscanf strcat strchr strcmp ' +\n      'strcpy strcspn strlen strncat strncmp strncpy strpbrk strrchr strspn strstr tanh tan ' +\n      'vfprintf vprintf vsprintf endl initializer_list unique_ptr',\n  };\n\n  const EXPRESSION_CONTAINS = [\n    PREPROCESSOR,\n    TYPES,\n    C_LINE_COMMENT_MODE,\n    hljs.C_BLOCK_COMMENT_MODE,\n    NUMBERS,\n    STRINGS\n  ];\n\n  const EXPRESSION_CONTEXT = {\n    // This mode covers expression context where we can't expect a function\n    // definition and shouldn't highlight anything that looks like one:\n    // `return some()`, `else if()`, `(x*sum(1, 2))`\n    variants: [\n      {\n        begin: /=/,\n        end: /;/\n      },\n      {\n        begin: /\\(/,\n        end: /\\)/\n      },\n      {\n        beginKeywords: 'new throw return else',\n        end: /;/\n      }\n    ],\n    keywords: KEYWORDS,\n    contains: EXPRESSION_CONTAINS.concat([\n      {\n        begin: /\\(/,\n        end: /\\)/,\n        keywords: KEYWORDS,\n        contains: EXPRESSION_CONTAINS.concat([ 'self' ]),\n        relevance: 0\n      }\n    ]),\n    relevance: 0\n  };\n\n  const FUNCTION_DECLARATION = {\n    begin: '(' + FUNCTION_TYPE_RE + '[\\\\*&\\\\s]+)+' + FUNCTION_TITLE,\n    returnBegin: true,\n    end: /[{;=]/,\n    excludeEnd: true,\n    keywords: KEYWORDS,\n    illegal: /[^\\w\\s\\*&:<>.]/,\n    contains: [\n      { // to prevent it from being confused as the function title\n        begin: DECLTYPE_AUTO_RE,\n        keywords: KEYWORDS,\n        relevance: 0\n      },\n      {\n        begin: FUNCTION_TITLE,\n        returnBegin: true,\n        contains: [\n          hljs.inherit(TITLE_MODE, { className: \"title.function\" })\n        ],\n        relevance: 0\n      },\n      // allow for multiple declarations, e.g.:\n      // extern void f(int), g(char);\n      {\n        relevance: 0,\n        match: /,/\n      },\n      {\n        className: 'params',\n        begin: /\\(/,\n        end: /\\)/,\n        keywords: KEYWORDS,\n        relevance: 0,\n        contains: [\n          C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE,\n          STRINGS,\n          NUMBERS,\n          TYPES,\n          // Count matching parentheses.\n          {\n            begin: /\\(/,\n            end: /\\)/,\n            keywords: KEYWORDS,\n            relevance: 0,\n            contains: [\n              'self',\n              C_LINE_COMMENT_MODE,\n              hljs.C_BLOCK_COMMENT_MODE,\n              STRINGS,\n              NUMBERS,\n              TYPES\n            ]\n          }\n        ]\n      },\n      TYPES,\n      C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      PREPROCESSOR\n    ]\n  };\n\n  return {\n    name: \"C\",\n    aliases: [\n      'h'\n    ],\n    keywords: KEYWORDS,\n    // Until differentiations are added between `c` and `cpp`, `c` will\n    // not be auto-detected to avoid auto-detect conflicts between C and C++\n    disableAutodetect: true,\n    illegal: '</',\n    contains: [].concat(\n      EXPRESSION_CONTEXT,\n      FUNCTION_DECLARATION,\n      EXPRESSION_CONTAINS,\n      [\n        PREPROCESSOR,\n        {\n          begin: hljs.IDENT_RE + '::',\n          keywords: KEYWORDS\n        },\n        {\n          className: 'class',\n          beginKeywords: 'enum class struct union',\n          end: /[{;:<>=]/,\n          contains: [\n            {\n              beginKeywords: \"final class struct\"\n            },\n            hljs.TITLE_MODE\n          ]\n        }\n      ]),\n    exports: {\n      preprocessor: PREPROCESSOR,\n      strings: STRINGS,\n      keywords: KEYWORDS\n    }\n  };\n}\n\nexport default c;\n","/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction lookahead(re) {\n  return concat('(?=', re, ')');\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction optional(re) {\n  return concat('(?:', re, ')?');\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/*\nLanguage: C++\nCategory: common, system\nWebsite: https://isocpp.org\n*/\n\n/** @type LanguageFn */\nfunction cpp(hljs) {\n  // added for historic reasons because `hljs.C_LINE_COMMENT_MODE` does\n  // not include such support nor can we be sure all the grammars depending\n  // on it would desire this behavior\n  const C_LINE_COMMENT_MODE = hljs.COMMENT('//', '$', {\n    contains: [\n      {\n        begin: /\\\\\\n/\n      }\n    ]\n  });\n  const DECLTYPE_AUTO_RE = 'decltype\\\\(auto\\\\)';\n  const NAMESPACE_RE = '[a-zA-Z_]\\\\w*::';\n  const TEMPLATE_ARGUMENT_RE = '<[^<>]+>';\n  const FUNCTION_TYPE_RE = '(?!struct)(' +\n    DECLTYPE_AUTO_RE + '|' +\n    optional(NAMESPACE_RE) +\n    '[a-zA-Z_]\\\\w*' + optional(TEMPLATE_ARGUMENT_RE) +\n  ')';\n\n  const CPP_PRIMITIVE_TYPES = {\n    className: 'type',\n    begin: '\\\\b[a-z\\\\d_]*_t\\\\b'\n  };\n\n  // https://en.cppreference.com/w/cpp/language/escape\n  // \\\\ \\x \\xFF \\u2837 \\u00323747 \\374\n  const CHARACTER_ESCAPES = '\\\\\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4,8}|[0-7]{3}|\\\\S)';\n  const STRINGS = {\n    className: 'string',\n    variants: [\n      {\n        begin: '(u8?|U|L)?\"',\n        end: '\"',\n        illegal: '\\\\n',\n        contains: [ hljs.BACKSLASH_ESCAPE ]\n      },\n      {\n        begin: '(u8?|U|L)?\\'(' + CHARACTER_ESCAPES + '|.)',\n        end: '\\'',\n        illegal: '.'\n      },\n      hljs.END_SAME_AS_BEGIN({\n        begin: /(?:u8?|U|L)?R\"([^()\\\\ ]{0,16})\\(/,\n        end: /\\)([^()\\\\ ]{0,16})\"/\n      })\n    ]\n  };\n\n  const NUMBERS = {\n    className: 'number',\n    variants: [\n      {\n        begin: '\\\\b(0b[01\\']+)'\n      },\n      {\n        begin: '(-?)\\\\b([\\\\d\\']+(\\\\.[\\\\d\\']*)?|\\\\.[\\\\d\\']+)((ll|LL|l|L)(u|U)?|(u|U)(ll|LL|l|L)?|f|F|b|B)'\n      },\n      {\n        begin: '(-?)(\\\\b0[xX][a-fA-F0-9\\']+|(\\\\b[\\\\d\\']+(\\\\.[\\\\d\\']*)?|\\\\.[\\\\d\\']+)([eE][-+]?[\\\\d\\']+)?)'\n      }\n    ],\n    relevance: 0\n  };\n\n  const PREPROCESSOR = {\n    className: 'meta',\n    begin: /#\\s*[a-z]+\\b/,\n    end: /$/,\n    keywords: {\n      keyword:\n        'if else elif endif define undef warning error line ' +\n        'pragma _Pragma ifdef ifndef include'\n    },\n    contains: [\n      {\n        begin: /\\\\\\n/,\n        relevance: 0\n      },\n      hljs.inherit(STRINGS, {\n        className: 'string'\n      }),\n      {\n        className: 'string',\n        begin: /<.*?>/\n      },\n      C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE\n    ]\n  };\n\n  const TITLE_MODE = {\n    className: 'title',\n    begin: optional(NAMESPACE_RE) + hljs.IDENT_RE,\n    relevance: 0\n  };\n\n  const FUNCTION_TITLE = optional(NAMESPACE_RE) + hljs.IDENT_RE + '\\\\s*\\\\(';\n\n  // https://en.cppreference.com/w/cpp/keyword\n  const RESERVED_KEYWORDS = [\n    'alignas',\n    'alignof',\n    'and',\n    'and_eq',\n    'asm',\n    'atomic_cancel',\n    'atomic_commit',\n    'atomic_noexcept',\n    'auto',\n    'bitand',\n    'bitor',\n    'break',\n    'case',\n    'catch',\n    'class',\n    'co_await',\n    'co_return',\n    'co_yield',\n    'compl',\n    'concept',\n    'const',\n    'const_cast|10',\n    'consteval',\n    'constexpr',\n    'constinit',\n    'continue',\n    'decltype',\n    'default',\n    'delete',\n    'do',\n    'dynamic_cast|10',\n    'else',\n    'enum',\n    'explicit',\n    'export',\n    'extern',\n    'false',\n    'final',\n    'for',\n    'friend',\n    'goto',\n    'if',\n    'import',\n    'inline',\n    'module',\n    'mutable',\n    'namespace',\n    'new',\n    'noexcept',\n    'not',\n    'not_eq',\n    'nullptr',\n    'operator',\n    'or',\n    'or_eq',\n    'override',\n    'private',\n    'protected',\n    'public',\n    'reflexpr',\n    'register',\n    'reinterpret_cast|10',\n    'requires',\n    'return',\n    'signed',\n    'sizeof',\n    'static',\n    'static_assert',\n    'static_cast|10',\n    'struct',\n    'switch',\n    'synchronized',\n    'template',\n    'this',\n    'thread_local',\n    'throw',\n    'transaction_safe',\n    'transaction_safe_dynamic',\n    'true',\n    'try',\n    'typedef',\n    'typeid',\n    'typename',\n    'union',\n    'unsigned',\n    'using',\n    'virtual',\n    'volatile',\n    'while',\n    'xor',\n    'xor_eq,'\n  ];\n\n  // https://en.cppreference.com/w/cpp/keyword\n  const RESERVED_TYPES = [\n    'bool',\n    'char',\n    'char16_t',\n    'char32_t',\n    'char8_t',\n    'double',\n    'float',\n    'int',\n    'long',\n    'short',\n    'void',\n    'wchar_t'\n  ];\n\n  const TYPE_HINTS = [\n    'any',\n    'auto_ptr',\n    'barrier',\n    'binary_semaphore',\n    'bitset',\n    'complex',\n    'condition_variable',\n    'condition_variable_any',\n    'counting_semaphore',\n    'deque',\n    'false_type',\n    'future',\n    'imaginary',\n    'initializer_list',\n    'istringstream',\n    'jthread',\n    'latch',\n    'lock_guard',\n    'multimap',\n    'multiset',\n    'mutex',\n    'optional',\n    'ostringstream',\n    'packaged_task',\n    'pair',\n    'promise',\n    'priority_queue',\n    'queue',\n    'recursive_mutex',\n    'recursive_timed_mutex',\n    'scoped_lock',\n    'set',\n    'shared_future',\n    'shared_lock',\n    'shared_mutex',\n    'shared_timed_mutex',\n    'shared_ptr',\n    'stack',\n    'string_view',\n    'stringstream',\n    'timed_mutex',\n    'thread',\n    'true_type',\n    'tuple',\n    'unique_lock',\n    'unique_ptr',\n    'unordered_map',\n    'unordered_multimap',\n    'unordered_multiset',\n    'unordered_set',\n    'variant',\n    'vector',\n    'weak_ptr',\n    'wstring',\n    'wstring_view'\n  ];\n\n  const FUNCTION_HINTS = [\n    'abort',\n    'abs',\n    'acos',\n    'apply',\n    'as_const',\n    'asin',\n    'atan',\n    'atan2',\n    'calloc',\n    'ceil',\n    'cerr',\n    'cin',\n    'clog',\n    'cos',\n    'cosh',\n    'cout',\n    'declval',\n    'endl',\n    'exchange',\n    'exit',\n    'exp',\n    'fabs',\n    'floor',\n    'fmod',\n    'forward',\n    'fprintf',\n    'fputs',\n    'free',\n    'frexp',\n    'fscanf',\n    'future',\n    'invoke',\n    'isalnum',\n    'isalpha',\n    'iscntrl',\n    'isdigit',\n    'isgraph',\n    'islower',\n    'isprint',\n    'ispunct',\n    'isspace',\n    'isupper',\n    'isxdigit',\n    'labs',\n    'launder',\n    'ldexp',\n    'log',\n    'log10',\n    'make_pair',\n    'make_shared',\n    'make_shared_for_overwrite',\n    'make_tuple',\n    'make_unique',\n    'malloc',\n    'memchr',\n    'memcmp',\n    'memcpy',\n    'memset',\n    'modf',\n    'move',\n    'pow',\n    'printf',\n    'putchar',\n    'puts',\n    'realloc',\n    'scanf',\n    'sin',\n    'sinh',\n    'snprintf',\n    'sprintf',\n    'sqrt',\n    'sscanf',\n    'std',\n    'stderr',\n    'stdin',\n    'stdout',\n    'strcat',\n    'strchr',\n    'strcmp',\n    'strcpy',\n    'strcspn',\n    'strlen',\n    'strncat',\n    'strncmp',\n    'strncpy',\n    'strpbrk',\n    'strrchr',\n    'strspn',\n    'strstr',\n    'swap',\n    'tan',\n    'tanh',\n    'terminate',\n    'to_underlying',\n    'tolower',\n    'toupper',\n    'vfprintf',\n    'visit',\n    'vprintf',\n    'vsprintf'\n  ];\n\n  const LITERALS = [\n    'NULL',\n    'false',\n    'nullopt',\n    'nullptr',\n    'true'\n  ];\n\n  // https://en.cppreference.com/w/cpp/keyword\n  const BUILT_IN = [\n    '_Pragma'\n  ];\n\n  const CPP_KEYWORDS = {\n    type: RESERVED_TYPES,\n    keyword: RESERVED_KEYWORDS,\n    literal: LITERALS,\n    built_in: BUILT_IN,\n    _type_hints: TYPE_HINTS\n  };\n\n  const FUNCTION_DISPATCH = {\n    className: 'function.dispatch',\n    relevance: 0,\n    keywords: {\n      // Only for relevance, not highlighting.\n      _hint: FUNCTION_HINTS\n    },\n    begin: concat(\n      /\\b/,\n      /(?!decltype)/,\n      /(?!if)/,\n      /(?!for)/,\n      /(?!while)/,\n      hljs.IDENT_RE,\n      lookahead(/(<[^<>]+>|)\\s*\\(/))\n  };\n\n  const EXPRESSION_CONTAINS = [\n    FUNCTION_DISPATCH,\n    PREPROCESSOR,\n    CPP_PRIMITIVE_TYPES,\n    C_LINE_COMMENT_MODE,\n    hljs.C_BLOCK_COMMENT_MODE,\n    NUMBERS,\n    STRINGS\n  ];\n\n  const EXPRESSION_CONTEXT = {\n    // This mode covers expression context where we can't expect a function\n    // definition and shouldn't highlight anything that looks like one:\n    // `return some()`, `else if()`, `(x*sum(1, 2))`\n    variants: [\n      {\n        begin: /=/,\n        end: /;/\n      },\n      {\n        begin: /\\(/,\n        end: /\\)/\n      },\n      {\n        beginKeywords: 'new throw return else',\n        end: /;/\n      }\n    ],\n    keywords: CPP_KEYWORDS,\n    contains: EXPRESSION_CONTAINS.concat([\n      {\n        begin: /\\(/,\n        end: /\\)/,\n        keywords: CPP_KEYWORDS,\n        contains: EXPRESSION_CONTAINS.concat([ 'self' ]),\n        relevance: 0\n      }\n    ]),\n    relevance: 0\n  };\n\n  const FUNCTION_DECLARATION = {\n    className: 'function',\n    begin: '(' + FUNCTION_TYPE_RE + '[\\\\*&\\\\s]+)+' + FUNCTION_TITLE,\n    returnBegin: true,\n    end: /[{;=]/,\n    excludeEnd: true,\n    keywords: CPP_KEYWORDS,\n    illegal: /[^\\w\\s\\*&:<>.]/,\n    contains: [\n      { // to prevent it from being confused as the function title\n        begin: DECLTYPE_AUTO_RE,\n        keywords: CPP_KEYWORDS,\n        relevance: 0\n      },\n      {\n        begin: FUNCTION_TITLE,\n        returnBegin: true,\n        contains: [ TITLE_MODE ],\n        relevance: 0\n      },\n      // needed because we do not have look-behind on the below rule\n      // to prevent it from grabbing the final : in a :: pair\n      {\n        begin: /::/,\n        relevance: 0\n      },\n      // initializers\n      {\n        begin: /:/,\n        endsWithParent: true,\n        contains: [\n          STRINGS,\n          NUMBERS\n        ]\n      },\n      // allow for multiple declarations, e.g.:\n      // extern void f(int), g(char);\n      {\n        relevance: 0,\n        match: /,/\n      },\n      {\n        className: 'params',\n        begin: /\\(/,\n        end: /\\)/,\n        keywords: CPP_KEYWORDS,\n        relevance: 0,\n        contains: [\n          C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE,\n          STRINGS,\n          NUMBERS,\n          CPP_PRIMITIVE_TYPES,\n          // Count matching parentheses.\n          {\n            begin: /\\(/,\n            end: /\\)/,\n            keywords: CPP_KEYWORDS,\n            relevance: 0,\n            contains: [\n              'self',\n              C_LINE_COMMENT_MODE,\n              hljs.C_BLOCK_COMMENT_MODE,\n              STRINGS,\n              NUMBERS,\n              CPP_PRIMITIVE_TYPES\n            ]\n          }\n        ]\n      },\n      CPP_PRIMITIVE_TYPES,\n      C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      PREPROCESSOR\n    ]\n  };\n\n  return {\n    name: 'C++',\n    aliases: [\n      'cc',\n      'c++',\n      'h++',\n      'hpp',\n      'hh',\n      'hxx',\n      'cxx'\n    ],\n    keywords: CPP_KEYWORDS,\n    illegal: '</',\n    classNameAliases: {\n      'function.dispatch': 'built_in'\n    },\n    contains: [].concat(\n      EXPRESSION_CONTEXT,\n      FUNCTION_DECLARATION,\n      FUNCTION_DISPATCH,\n      EXPRESSION_CONTAINS,\n      [\n        PREPROCESSOR,\n        { // containers: ie, `vector <int> rooms (9);`\n          begin: '\\\\b(deque|list|queue|priority_queue|pair|stack|vector|map|set|bitset|multiset|multimap|unordered_map|unordered_set|unordered_multiset|unordered_multimap|array|tuple|optional|variant|function)\\\\s*<',\n          end: '>',\n          keywords: CPP_KEYWORDS,\n          contains: [\n            'self',\n            CPP_PRIMITIVE_TYPES\n          ]\n        },\n        {\n          begin: hljs.IDENT_RE + '::',\n          keywords: CPP_KEYWORDS\n        },\n        {\n          match: [\n            // extra complexity to deal with `enum class` and `enum struct`\n            /\\b(?:enum(?:\\s+(?:class|struct))?|class|struct|union)/,\n            /\\s+/,\n            /\\w+/\n          ],\n          className: {\n            1: 'keyword',\n            3: 'title.class'\n          }\n        }\n      ])\n  };\n}\n\nexport default cpp;\n","/*\nLanguage: C#\nAuthor: Jason Diamond <jason@diamond.name>\nContributor: Nicolas LLOBERA <nllobera@gmail.com>, Pieter Vantorre <pietervantorre@gmail.com>, David Pine <david.pine@microsoft.com>\nWebsite: https://docs.microsoft.com/en-us/dotnet/csharp/\nCategory: common\n*/\n\n/** @type LanguageFn */\nfunction csharp(hljs) {\n  const BUILT_IN_KEYWORDS = [\n    'bool',\n    'byte',\n    'char',\n    'decimal',\n    'delegate',\n    'double',\n    'dynamic',\n    'enum',\n    'float',\n    'int',\n    'long',\n    'nint',\n    'nuint',\n    'object',\n    'sbyte',\n    'short',\n    'string',\n    'ulong',\n    'uint',\n    'ushort'\n  ];\n  const FUNCTION_MODIFIERS = [\n    'public',\n    'private',\n    'protected',\n    'static',\n    'internal',\n    'protected',\n    'abstract',\n    'async',\n    'extern',\n    'override',\n    'unsafe',\n    'virtual',\n    'new',\n    'sealed',\n    'partial'\n  ];\n  const LITERAL_KEYWORDS = [\n    'default',\n    'false',\n    'null',\n    'true'\n  ];\n  const NORMAL_KEYWORDS = [\n    'abstract',\n    'as',\n    'base',\n    'break',\n    'case',\n    'catch',\n    'class',\n    'const',\n    'continue',\n    'do',\n    'else',\n    'event',\n    'explicit',\n    'extern',\n    'finally',\n    'fixed',\n    'for',\n    'foreach',\n    'goto',\n    'if',\n    'implicit',\n    'in',\n    'interface',\n    'internal',\n    'is',\n    'lock',\n    'namespace',\n    'new',\n    'operator',\n    'out',\n    'override',\n    'params',\n    'private',\n    'protected',\n    'public',\n    'readonly',\n    'record',\n    'ref',\n    'return',\n    'sealed',\n    'sizeof',\n    'stackalloc',\n    'static',\n    'struct',\n    'switch',\n    'this',\n    'throw',\n    'try',\n    'typeof',\n    'unchecked',\n    'unsafe',\n    'using',\n    'virtual',\n    'void',\n    'volatile',\n    'while'\n  ];\n  const CONTEXTUAL_KEYWORDS = [\n    'add',\n    'alias',\n    'and',\n    'ascending',\n    'async',\n    'await',\n    'by',\n    'descending',\n    'equals',\n    'from',\n    'get',\n    'global',\n    'group',\n    'init',\n    'into',\n    'join',\n    'let',\n    'nameof',\n    'not',\n    'notnull',\n    'on',\n    'or',\n    'orderby',\n    'partial',\n    'remove',\n    'select',\n    'set',\n    'unmanaged',\n    'value|0',\n    'var',\n    'when',\n    'where',\n    'with',\n    'yield'\n  ];\n\n  const KEYWORDS = {\n    keyword: NORMAL_KEYWORDS.concat(CONTEXTUAL_KEYWORDS),\n    built_in: BUILT_IN_KEYWORDS,\n    literal: LITERAL_KEYWORDS\n  };\n  const TITLE_MODE = hljs.inherit(hljs.TITLE_MODE, {\n    begin: '[a-zA-Z](\\\\.?\\\\w)*'\n  });\n  const NUMBERS = {\n    className: 'number',\n    variants: [\n      {\n        begin: '\\\\b(0b[01\\']+)'\n      },\n      {\n        begin: '(-?)\\\\b([\\\\d\\']+(\\\\.[\\\\d\\']*)?|\\\\.[\\\\d\\']+)(u|U|l|L|ul|UL|f|F|b|B)'\n      },\n      {\n        begin: '(-?)(\\\\b0[xX][a-fA-F0-9\\']+|(\\\\b[\\\\d\\']+(\\\\.[\\\\d\\']*)?|\\\\.[\\\\d\\']+)([eE][-+]?[\\\\d\\']+)?)'\n      }\n    ],\n    relevance: 0\n  };\n  const VERBATIM_STRING = {\n    className: 'string',\n    begin: '@\"',\n    end: '\"',\n    contains: [\n      {\n        begin: '\"\"'\n      }\n    ]\n  };\n  const VERBATIM_STRING_NO_LF = hljs.inherit(VERBATIM_STRING, {\n    illegal: /\\n/\n  });\n  const SUBST = {\n    className: 'subst',\n    begin: /\\{/,\n    end: /\\}/,\n    keywords: KEYWORDS\n  };\n  const SUBST_NO_LF = hljs.inherit(SUBST, {\n    illegal: /\\n/\n  });\n  const INTERPOLATED_STRING = {\n    className: 'string',\n    begin: /\\$\"/,\n    end: '\"',\n    illegal: /\\n/,\n    contains: [\n      {\n        begin: /\\{\\{/\n      },\n      {\n        begin: /\\}\\}/\n      },\n      hljs.BACKSLASH_ESCAPE,\n      SUBST_NO_LF\n    ]\n  };\n  const INTERPOLATED_VERBATIM_STRING = {\n    className: 'string',\n    begin: /\\$@\"/,\n    end: '\"',\n    contains: [\n      {\n        begin: /\\{\\{/\n      },\n      {\n        begin: /\\}\\}/\n      },\n      {\n        begin: '\"\"'\n      },\n      SUBST\n    ]\n  };\n  const INTERPOLATED_VERBATIM_STRING_NO_LF = hljs.inherit(INTERPOLATED_VERBATIM_STRING, {\n    illegal: /\\n/,\n    contains: [\n      {\n        begin: /\\{\\{/\n      },\n      {\n        begin: /\\}\\}/\n      },\n      {\n        begin: '\"\"'\n      },\n      SUBST_NO_LF\n    ]\n  });\n  SUBST.contains = [\n    INTERPOLATED_VERBATIM_STRING,\n    INTERPOLATED_STRING,\n    VERBATIM_STRING,\n    hljs.APOS_STRING_MODE,\n    hljs.QUOTE_STRING_MODE,\n    NUMBERS,\n    hljs.C_BLOCK_COMMENT_MODE\n  ];\n  SUBST_NO_LF.contains = [\n    INTERPOLATED_VERBATIM_STRING_NO_LF,\n    INTERPOLATED_STRING,\n    VERBATIM_STRING_NO_LF,\n    hljs.APOS_STRING_MODE,\n    hljs.QUOTE_STRING_MODE,\n    NUMBERS,\n    hljs.inherit(hljs.C_BLOCK_COMMENT_MODE, {\n      illegal: /\\n/\n    })\n  ];\n  const STRING = {\n    variants: [\n      INTERPOLATED_VERBATIM_STRING,\n      INTERPOLATED_STRING,\n      VERBATIM_STRING,\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE\n    ]\n  };\n\n  const GENERIC_MODIFIER = {\n    begin: \"<\",\n    end: \">\",\n    contains: [\n      {\n        beginKeywords: \"in out\"\n      },\n      TITLE_MODE\n    ]\n  };\n  const TYPE_IDENT_RE = hljs.IDENT_RE + '(<' + hljs.IDENT_RE + '(\\\\s*,\\\\s*' + hljs.IDENT_RE + ')*>)?(\\\\[\\\\])?';\n  const AT_IDENTIFIER = {\n    // prevents expressions like `@class` from incorrect flagging\n    // `class` as a keyword\n    begin: \"@\" + hljs.IDENT_RE,\n    relevance: 0\n  };\n\n  return {\n    name: 'C#',\n    aliases: [\n      'cs',\n      'c#'\n    ],\n    keywords: KEYWORDS,\n    illegal: /::/,\n    contains: [\n      hljs.COMMENT(\n        '///',\n        '$',\n        {\n          returnBegin: true,\n          contains: [\n            {\n              className: 'doctag',\n              variants: [\n                {\n                  begin: '///',\n                  relevance: 0\n                },\n                {\n                  begin: '<!--|-->'\n                },\n                {\n                  begin: '</?',\n                  end: '>'\n                }\n              ]\n            }\n          ]\n        }\n      ),\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      {\n        className: 'meta',\n        begin: '#',\n        end: '$',\n        keywords: {\n          keyword: 'if else elif endif define undef warning error line region endregion pragma checksum'\n        }\n      },\n      STRING,\n      NUMBERS,\n      {\n        beginKeywords: 'class interface',\n        relevance: 0,\n        end: /[{;=]/,\n        illegal: /[^\\s:,]/,\n        contains: [\n          {\n            beginKeywords: \"where class\"\n          },\n          TITLE_MODE,\n          GENERIC_MODIFIER,\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE\n        ]\n      },\n      {\n        beginKeywords: 'namespace',\n        relevance: 0,\n        end: /[{;=]/,\n        illegal: /[^\\s:]/,\n        contains: [\n          TITLE_MODE,\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE\n        ]\n      },\n      {\n        beginKeywords: 'record',\n        relevance: 0,\n        end: /[{;=]/,\n        illegal: /[^\\s:]/,\n        contains: [\n          TITLE_MODE,\n          GENERIC_MODIFIER,\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE\n        ]\n      },\n      {\n        // [Attributes(\"\")]\n        className: 'meta',\n        begin: '^\\\\s*\\\\[(?=[\\\\w])',\n        excludeBegin: true,\n        end: '\\\\]',\n        excludeEnd: true,\n        contains: [\n          {\n            className: 'string',\n            begin: /\"/,\n            end: /\"/\n          }\n        ]\n      },\n      {\n        // Expression keywords prevent 'keyword Name(...)' from being\n        // recognized as a function definition\n        beginKeywords: 'new return throw await else',\n        relevance: 0\n      },\n      {\n        className: 'function',\n        begin: '(' + TYPE_IDENT_RE + '\\\\s+)+' + hljs.IDENT_RE + '\\\\s*(<.+>\\\\s*)?\\\\(',\n        returnBegin: true,\n        end: /\\s*[{;=]/,\n        excludeEnd: true,\n        keywords: KEYWORDS,\n        contains: [\n          // prevents these from being highlighted `title`\n          {\n            beginKeywords: FUNCTION_MODIFIERS.join(\" \"),\n            relevance: 0\n          },\n          {\n            begin: hljs.IDENT_RE + '\\\\s*(<.+>\\\\s*)?\\\\(',\n            returnBegin: true,\n            contains: [\n              hljs.TITLE_MODE,\n              GENERIC_MODIFIER\n            ],\n            relevance: 0\n          },\n          {\n            className: 'params',\n            begin: /\\(/,\n            end: /\\)/,\n            excludeBegin: true,\n            excludeEnd: true,\n            keywords: KEYWORDS,\n            relevance: 0,\n            contains: [\n              STRING,\n              NUMBERS,\n              hljs.C_BLOCK_COMMENT_MODE\n            ]\n          },\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE\n        ]\n      },\n      AT_IDENTIFIER\n    ]\n  };\n}\n\nexport default csharp;\n","const MODES = (hljs) => {\n  return {\n    IMPORTANT: {\n      scope: 'meta',\n      begin: '!important'\n    },\n    HEXCOLOR: {\n      scope: 'number',\n      begin: '#([a-fA-F0-9]{6}|[a-fA-F0-9]{3})'\n    },\n    ATTRIBUTE_SELECTOR_MODE: {\n      scope: 'selector-attr',\n      begin: /\\[/,\n      end: /\\]/,\n      illegal: '$',\n      contains: [\n        hljs.APOS_STRING_MODE,\n        hljs.QUOTE_STRING_MODE\n      ]\n    },\n    CSS_NUMBER_MODE: {\n      scope: 'number',\n      begin: hljs.NUMBER_RE + '(' +\n        '%|em|ex|ch|rem' +\n        '|vw|vh|vmin|vmax' +\n        '|cm|mm|in|pt|pc|px' +\n        '|deg|grad|rad|turn' +\n        '|s|ms' +\n        '|Hz|kHz' +\n        '|dpi|dpcm|dppx' +\n        ')?',\n      relevance: 0\n    },\n    CSS_VARIABLE: {\n      className: \"attr\",\n      begin: /--[A-Za-z][A-Za-z0-9_-]*/\n    }\n  };\n};\n\nconst TAGS = [\n  'a',\n  'abbr',\n  'address',\n  'article',\n  'aside',\n  'audio',\n  'b',\n  'blockquote',\n  'body',\n  'button',\n  'canvas',\n  'caption',\n  'cite',\n  'code',\n  'dd',\n  'del',\n  'details',\n  'dfn',\n  'div',\n  'dl',\n  'dt',\n  'em',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'header',\n  'hgroup',\n  'html',\n  'i',\n  'iframe',\n  'img',\n  'input',\n  'ins',\n  'kbd',\n  'label',\n  'legend',\n  'li',\n  'main',\n  'mark',\n  'menu',\n  'nav',\n  'object',\n  'ol',\n  'p',\n  'q',\n  'quote',\n  'samp',\n  'section',\n  'span',\n  'strong',\n  'summary',\n  'sup',\n  'table',\n  'tbody',\n  'td',\n  'textarea',\n  'tfoot',\n  'th',\n  'thead',\n  'time',\n  'tr',\n  'ul',\n  'var',\n  'video'\n];\n\nconst MEDIA_FEATURES = [\n  'any-hover',\n  'any-pointer',\n  'aspect-ratio',\n  'color',\n  'color-gamut',\n  'color-index',\n  'device-aspect-ratio',\n  'device-height',\n  'device-width',\n  'display-mode',\n  'forced-colors',\n  'grid',\n  'height',\n  'hover',\n  'inverted-colors',\n  'monochrome',\n  'orientation',\n  'overflow-block',\n  'overflow-inline',\n  'pointer',\n  'prefers-color-scheme',\n  'prefers-contrast',\n  'prefers-reduced-motion',\n  'prefers-reduced-transparency',\n  'resolution',\n  'scan',\n  'scripting',\n  'update',\n  'width',\n  // TODO: find a better solution?\n  'min-width',\n  'max-width',\n  'min-height',\n  'max-height'\n];\n\n// https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes\nconst PSEUDO_CLASSES = [\n  'active',\n  'any-link',\n  'blank',\n  'checked',\n  'current',\n  'default',\n  'defined',\n  'dir', // dir()\n  'disabled',\n  'drop',\n  'empty',\n  'enabled',\n  'first',\n  'first-child',\n  'first-of-type',\n  'fullscreen',\n  'future',\n  'focus',\n  'focus-visible',\n  'focus-within',\n  'has', // has()\n  'host', // host or host()\n  'host-context', // host-context()\n  'hover',\n  'indeterminate',\n  'in-range',\n  'invalid',\n  'is', // is()\n  'lang', // lang()\n  'last-child',\n  'last-of-type',\n  'left',\n  'link',\n  'local-link',\n  'not', // not()\n  'nth-child', // nth-child()\n  'nth-col', // nth-col()\n  'nth-last-child', // nth-last-child()\n  'nth-last-col', // nth-last-col()\n  'nth-last-of-type', //nth-last-of-type()\n  'nth-of-type', //nth-of-type()\n  'only-child',\n  'only-of-type',\n  'optional',\n  'out-of-range',\n  'past',\n  'placeholder-shown',\n  'read-only',\n  'read-write',\n  'required',\n  'right',\n  'root',\n  'scope',\n  'target',\n  'target-within',\n  'user-invalid',\n  'valid',\n  'visited',\n  'where' // where()\n];\n\n// https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements\nconst PSEUDO_ELEMENTS = [\n  'after',\n  'backdrop',\n  'before',\n  'cue',\n  'cue-region',\n  'first-letter',\n  'first-line',\n  'grammar-error',\n  'marker',\n  'part',\n  'placeholder',\n  'selection',\n  'slotted',\n  'spelling-error'\n];\n\nconst ATTRIBUTES = [\n  'align-content',\n  'align-items',\n  'align-self',\n  'animation',\n  'animation-delay',\n  'animation-direction',\n  'animation-duration',\n  'animation-fill-mode',\n  'animation-iteration-count',\n  'animation-name',\n  'animation-play-state',\n  'animation-timing-function',\n  'auto',\n  'backface-visibility',\n  'background',\n  'background-attachment',\n  'background-clip',\n  'background-color',\n  'background-image',\n  'background-origin',\n  'background-position',\n  'background-repeat',\n  'background-size',\n  'border',\n  'border-bottom',\n  'border-bottom-color',\n  'border-bottom-left-radius',\n  'border-bottom-right-radius',\n  'border-bottom-style',\n  'border-bottom-width',\n  'border-collapse',\n  'border-color',\n  'border-image',\n  'border-image-outset',\n  'border-image-repeat',\n  'border-image-slice',\n  'border-image-source',\n  'border-image-width',\n  'border-left',\n  'border-left-color',\n  'border-left-style',\n  'border-left-width',\n  'border-radius',\n  'border-right',\n  'border-right-color',\n  'border-right-style',\n  'border-right-width',\n  'border-spacing',\n  'border-style',\n  'border-top',\n  'border-top-color',\n  'border-top-left-radius',\n  'border-top-right-radius',\n  'border-top-style',\n  'border-top-width',\n  'border-width',\n  'bottom',\n  'box-decoration-break',\n  'box-shadow',\n  'box-sizing',\n  'break-after',\n  'break-before',\n  'break-inside',\n  'caption-side',\n  'clear',\n  'clip',\n  'clip-path',\n  'color',\n  'column-count',\n  'column-fill',\n  'column-gap',\n  'column-rule',\n  'column-rule-color',\n  'column-rule-style',\n  'column-rule-width',\n  'column-span',\n  'column-width',\n  'columns',\n  'content',\n  'counter-increment',\n  'counter-reset',\n  'cursor',\n  'direction',\n  'display',\n  'empty-cells',\n  'filter',\n  'flex',\n  'flex-basis',\n  'flex-direction',\n  'flex-flow',\n  'flex-grow',\n  'flex-shrink',\n  'flex-wrap',\n  'float',\n  'font',\n  'font-display',\n  'font-family',\n  'font-feature-settings',\n  'font-kerning',\n  'font-language-override',\n  'font-size',\n  'font-size-adjust',\n  'font-smoothing',\n  'font-stretch',\n  'font-style',\n  'font-variant',\n  'font-variant-ligatures',\n  'font-variation-settings',\n  'font-weight',\n  'height',\n  'hyphens',\n  'icon',\n  'image-orientation',\n  'image-rendering',\n  'image-resolution',\n  'ime-mode',\n  'inherit',\n  'initial',\n  'justify-content',\n  'left',\n  'letter-spacing',\n  'line-height',\n  'list-style',\n  'list-style-image',\n  'list-style-position',\n  'list-style-type',\n  'margin',\n  'margin-bottom',\n  'margin-left',\n  'margin-right',\n  'margin-top',\n  'marks',\n  'mask',\n  'max-height',\n  'max-width',\n  'min-height',\n  'min-width',\n  'nav-down',\n  'nav-index',\n  'nav-left',\n  'nav-right',\n  'nav-up',\n  'none',\n  'normal',\n  'object-fit',\n  'object-position',\n  'opacity',\n  'order',\n  'orphans',\n  'outline',\n  'outline-color',\n  'outline-offset',\n  'outline-style',\n  'outline-width',\n  'overflow',\n  'overflow-wrap',\n  'overflow-x',\n  'overflow-y',\n  'padding',\n  'padding-bottom',\n  'padding-left',\n  'padding-right',\n  'padding-top',\n  'page-break-after',\n  'page-break-before',\n  'page-break-inside',\n  'perspective',\n  'perspective-origin',\n  'pointer-events',\n  'position',\n  'quotes',\n  'resize',\n  'right',\n  'src', // @font-face\n  'tab-size',\n  'table-layout',\n  'text-align',\n  'text-align-last',\n  'text-decoration',\n  'text-decoration-color',\n  'text-decoration-line',\n  'text-decoration-style',\n  'text-indent',\n  'text-overflow',\n  'text-rendering',\n  'text-shadow',\n  'text-transform',\n  'text-underline-position',\n  'top',\n  'transform',\n  'transform-origin',\n  'transform-style',\n  'transition',\n  'transition-delay',\n  'transition-duration',\n  'transition-property',\n  'transition-timing-function',\n  'unicode-bidi',\n  'vertical-align',\n  'visibility',\n  'white-space',\n  'widows',\n  'width',\n  'word-break',\n  'word-spacing',\n  'word-wrap',\n  'z-index'\n  // reverse makes sure longer attributes `font-weight` are matched fully\n  // instead of getting false positives on say `font`\n].reverse();\n\n/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction lookahead(re) {\n  return concat('(?=', re, ')');\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/*\nLanguage: CSS\nCategory: common, css, web\nWebsite: https://developer.mozilla.org/en-US/docs/Web/CSS\n*/\n\n/** @type LanguageFn */\nfunction css(hljs) {\n  const modes = MODES(hljs);\n  const FUNCTION_DISPATCH = {\n    className: \"built_in\",\n    begin: /[\\w-]+(?=\\()/\n  };\n  const VENDOR_PREFIX = {\n    begin: /-(webkit|moz|ms|o)-(?=[a-z])/\n  };\n  const AT_MODIFIERS = \"and or not only\";\n  const AT_PROPERTY_RE = /@-?\\w[\\w]*(-\\w+)*/; // @-webkit-keyframes\n  const IDENT_RE = '[a-zA-Z-][a-zA-Z0-9_-]*';\n  const STRINGS = [\n    hljs.APOS_STRING_MODE,\n    hljs.QUOTE_STRING_MODE\n  ];\n\n  return {\n    name: 'CSS',\n    case_insensitive: true,\n    illegal: /[=|'\\$]/,\n    keywords: {\n      keyframePosition: \"from to\"\n    },\n    classNameAliases: {\n      // for visual continuity with `tag {}` and because we\n      // don't have a great class for this?\n      keyframePosition: \"selector-tag\"\n    },\n    contains: [\n      hljs.C_BLOCK_COMMENT_MODE,\n      VENDOR_PREFIX,\n      // to recognize keyframe 40% etc which are outside the scope of our\n      // attribute value mode\n      modes.CSS_NUMBER_MODE,\n      {\n        className: 'selector-id',\n        begin: /#[A-Za-z0-9_-]+/,\n        relevance: 0\n      },\n      {\n        className: 'selector-class',\n        begin: '\\\\.' + IDENT_RE,\n        relevance: 0\n      },\n      modes.ATTRIBUTE_SELECTOR_MODE,\n      {\n        className: 'selector-pseudo',\n        variants: [\n          {\n            begin: ':(' + PSEUDO_CLASSES.join('|') + ')'\n          },\n          {\n            begin: '::(' + PSEUDO_ELEMENTS.join('|') + ')'\n          }\n        ]\n      },\n      // we may actually need this (12/2020)\n      // { // pseudo-selector params\n      //   begin: /\\(/,\n      //   end: /\\)/,\n      //   contains: [ hljs.CSS_NUMBER_MODE ]\n      // },\n      modes.CSS_VARIABLE,\n      {\n        className: 'attribute',\n        begin: '\\\\b(' + ATTRIBUTES.join('|') + ')\\\\b'\n      },\n      // attribute values\n      {\n        begin: ':',\n        end: '[;}]',\n        contains: [\n          modes.HEXCOLOR,\n          modes.IMPORTANT,\n          modes.CSS_NUMBER_MODE,\n          ...STRINGS,\n          // needed to highlight these as strings and to avoid issues with\n          // illegal characters that might be inside urls that would tigger the\n          // languages illegal stack\n          {\n            begin: /(url|data-uri)\\(/,\n            end: /\\)/,\n            relevance: 0, // from keywords\n            keywords: {\n              built_in: \"url data-uri\"\n            },\n            contains: [\n              {\n                className: \"string\",\n                // any character other than `)` as in `url()` will be the start\n                // of a string, which ends with `)` (from the parent mode)\n                begin: /[^)]/,\n                endsWithParent: true,\n                excludeEnd: true\n              }\n            ]\n          },\n          FUNCTION_DISPATCH\n        ]\n      },\n      {\n        begin: lookahead(/@/),\n        end: '[{;]',\n        relevance: 0,\n        illegal: /:/, // break on Less variables @var: ...\n        contains: [\n          {\n            className: 'keyword',\n            begin: AT_PROPERTY_RE\n          },\n          {\n            begin: /\\s/,\n            endsWithParent: true,\n            excludeEnd: true,\n            relevance: 0,\n            keywords: {\n              $pattern: /[a-z-]+/,\n              keyword: AT_MODIFIERS,\n              attribute: MEDIA_FEATURES.join(\" \")\n            },\n            contains: [\n              {\n                begin: /[a-z-]+(?=:)/,\n                className: \"attribute\"\n              },\n              ...STRINGS,\n              modes.CSS_NUMBER_MODE\n            ]\n          }\n        ]\n      },\n      {\n        className: 'selector-tag',\n        begin: '\\\\b(' + TAGS.join('|') + ')\\\\b'\n      }\n    ]\n  };\n}\n\nexport default css;\n","/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\nfunction stripOptionsFromArgs(args) {\n  const opts = args[args.length - 1];\n\n  if (typeof opts === 'object' && opts.constructor === Object) {\n    args.splice(args.length - 1, 1);\n    return opts;\n  } else {\n    return {};\n  }\n}\n\n/**\n * Any of the passed expresssions may match\n *\n * Creates a huge this | this | that | that match\n * @param {(RegExp | string)[] } args\n * @returns {string}\n */\nfunction either(...args) {\n  const opts = stripOptionsFromArgs(args);\n  const joined = '(' +\n    (opts.capture ? \"\" : \"?:\") +\n    args.map((x) => source(x)).join(\"|\") + \")\";\n  return joined;\n}\n\n/*\nLanguage: Diff\nDescription: Unified and context diff\nAuthor: Vasily Polovnyov <vast@whiteants.net>\nWebsite: https://www.gnu.org/software/diffutils/\nCategory: common\n*/\n\n/** @type LanguageFn */\nfunction diff(hljs) {\n  return {\n    name: 'Diff',\n    aliases: ['patch'],\n    contains: [\n      {\n        className: 'meta',\n        relevance: 10,\n        match: either(\n          /^@@ +-\\d+,\\d+ +\\+\\d+,\\d+ +@@/,\n          /^\\*\\*\\* +\\d+,\\d+ +\\*\\*\\*\\*$/,\n          /^--- +\\d+,\\d+ +----$/\n        )\n      },\n      {\n        className: 'comment',\n        variants: [\n          {\n            begin: either(\n              /Index: /,\n              /^index/,\n              /={3,}/,\n              /^-{3}/,\n              /^\\*{3} /,\n              /^\\+{3}/,\n              /^diff --git/\n            ),\n            end: /$/\n          },\n          {\n            match: /^\\*{15}$/\n          }\n        ]\n      },\n      {\n        className: 'addition',\n        begin: /^\\+/,\n        end: /$/\n      },\n      {\n        className: 'deletion',\n        begin: /^-/,\n        end: /$/\n      },\n      {\n        className: 'addition',\n        begin: /^!/,\n        end: /$/\n      }\n    ]\n  };\n}\n\nexport default diff;\n","/*\nLanguage: Go\nAuthor: Stephan Kountso aka StepLg <steplg@gmail.com>\nContributors: Evgeny Stepanischev <imbolk@gmail.com>\nDescription: Google go language (golang). For info about language\nWebsite: http://golang.org/\nCategory: common, system\n*/\n\nfunction go(hljs) {\n  const LITERALS = [\n    \"true\",\n    \"false\",\n    \"iota\",\n    \"nil\"\n  ];\n  const BUILT_INS = [\n    \"append\",\n    \"cap\",\n    \"close\",\n    \"complex\",\n    \"copy\",\n    \"imag\",\n    \"len\",\n    \"make\",\n    \"new\",\n    \"panic\",\n    \"print\",\n    \"println\",\n    \"real\",\n    \"recover\",\n    \"delete\"\n  ];\n  const KWS = [\n    \"break\",\n    \"default\",\n    \"func\",\n    \"interface\",\n    \"select\",\n    \"case\",\n    \"map\",\n    \"struct\",\n    \"chan\",\n    \"else\",\n    \"goto\",\n    \"package\",\n    \"switch\",\n    \"const\",\n    \"fallthrough\",\n    \"if\",\n    \"range\",\n    \"type\",\n    \"continue\",\n    \"for\",\n    \"import\",\n    \"return\",\n    \"var\",\n    \"go\",\n    \"defer\",\n    \"bool\",\n    \"byte\",\n    \"complex64\",\n    \"complex128\",\n    \"float32\",\n    \"float64\",\n    \"int8\",\n    \"int16\",\n    \"int32\",\n    \"int64\",\n    \"string\",\n    \"uint8\",\n    \"uint16\",\n    \"uint32\",\n    \"uint64\",\n    \"int\",\n    \"uint\",\n    \"uintptr\",\n    \"rune\"\n  ];\n  const KEYWORDS = {\n    keyword: KWS,\n    literal: LITERALS,\n    built_in: BUILT_INS\n  };\n  return {\n    name: 'Go',\n    aliases: ['golang'],\n    keywords: KEYWORDS,\n    illegal: '</',\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      {\n        className: 'string',\n        variants: [\n          hljs.QUOTE_STRING_MODE,\n          hljs.APOS_STRING_MODE,\n          {\n            begin: '`',\n            end: '`'\n          }\n        ]\n      },\n      {\n        className: 'number',\n        variants: [\n          {\n            begin: hljs.C_NUMBER_RE + '[i]',\n            relevance: 1\n          },\n          hljs.C_NUMBER_MODE\n        ]\n      },\n      {\n        begin: /:=/ // relevance booster\n      },\n      {\n        className: 'function',\n        beginKeywords: 'func',\n        end: '\\\\s*(\\\\{|$)',\n        excludeEnd: true,\n        contains: [\n          hljs.TITLE_MODE,\n          {\n            className: 'params',\n            begin: /\\(/,\n            end: /\\)/,\n            keywords: KEYWORDS,\n            illegal: /[\"']/\n          }\n        ]\n      }\n    ]\n  };\n}\n\nexport default go;\n","/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction lookahead(re) {\n  return concat('(?=', re, ')');\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\nfunction stripOptionsFromArgs(args) {\n  const opts = args[args.length - 1];\n\n  if (typeof opts === 'object' && opts.constructor === Object) {\n    args.splice(args.length - 1, 1);\n    return opts;\n  } else {\n    return {};\n  }\n}\n\n/**\n * Any of the passed expresssions may match\n *\n * Creates a huge this | this | that | that match\n * @param {(RegExp | string)[] } args\n * @returns {string}\n */\nfunction either(...args) {\n  const opts = stripOptionsFromArgs(args);\n  const joined = '(' +\n    (opts.capture ? \"\" : \"?:\") +\n    args.map((x) => source(x)).join(\"|\") + \")\";\n  return joined;\n}\n\n/*\nLanguage: TOML, also INI\nDescription: TOML aims to be a minimal configuration file format that's easy to read due to obvious semantics.\nContributors: Guillaume Gomez <guillaume1.gomez@gmail.com>\nCategory: common, config\nWebsite: https://github.com/toml-lang/toml\n*/\n\nfunction ini(hljs) {\n  const NUMBERS = {\n    className: 'number',\n    relevance: 0,\n    variants: [\n      {\n        begin: /([+-]+)?[\\d]+_[\\d_]+/\n      },\n      {\n        begin: hljs.NUMBER_RE\n      }\n    ]\n  };\n  const COMMENTS = hljs.COMMENT();\n  COMMENTS.variants = [\n    {\n      begin: /;/,\n      end: /$/\n    },\n    {\n      begin: /#/,\n      end: /$/\n    }\n  ];\n  const VARIABLES = {\n    className: 'variable',\n    variants: [\n      {\n        begin: /\\$[\\w\\d\"][\\w\\d_]*/\n      },\n      {\n        begin: /\\$\\{(.*?)\\}/\n      }\n    ]\n  };\n  const LITERALS = {\n    className: 'literal',\n    begin: /\\bon|off|true|false|yes|no\\b/\n  };\n  const STRINGS = {\n    className: \"string\",\n    contains: [hljs.BACKSLASH_ESCAPE],\n    variants: [\n      {\n        begin: \"'''\",\n        end: \"'''\",\n        relevance: 10\n      },\n      {\n        begin: '\"\"\"',\n        end: '\"\"\"',\n        relevance: 10\n      },\n      {\n        begin: '\"',\n        end: '\"'\n      },\n      {\n        begin: \"'\",\n        end: \"'\"\n      }\n    ]\n  };\n  const ARRAY = {\n    begin: /\\[/,\n    end: /\\]/,\n    contains: [\n      COMMENTS,\n      LITERALS,\n      VARIABLES,\n      STRINGS,\n      NUMBERS,\n      'self'\n    ],\n    relevance: 0\n  };\n\n  const BARE_KEY = /[A-Za-z0-9_-]+/;\n  const QUOTED_KEY_DOUBLE_QUOTE = /\"(\\\\\"|[^\"])*\"/;\n  const QUOTED_KEY_SINGLE_QUOTE = /'[^']*'/;\n  const ANY_KEY = either(\n    BARE_KEY, QUOTED_KEY_DOUBLE_QUOTE, QUOTED_KEY_SINGLE_QUOTE\n  );\n  const DOTTED_KEY = concat(\n    ANY_KEY, '(\\\\s*\\\\.\\\\s*', ANY_KEY, ')*',\n    lookahead(/\\s*=\\s*[^#\\s]/)\n  );\n\n  return {\n    name: 'TOML, also INI',\n    aliases: ['toml'],\n    case_insensitive: true,\n    illegal: /\\S/,\n    contains: [\n      COMMENTS,\n      {\n        className: 'section',\n        begin: /\\[+/,\n        end: /\\]+/\n      },\n      {\n        begin: DOTTED_KEY,\n        className: 'attr',\n        starts: {\n          end: /$/,\n          contains: [\n            COMMENTS,\n            ARRAY,\n            LITERALS,\n            VARIABLES,\n            STRINGS,\n            NUMBERS\n          ]\n        }\n      }\n    ]\n  };\n}\n\nexport default ini;\n","// https://docs.oracle.com/javase/specs/jls/se15/html/jls-3.html#jls-3.10\nvar decimalDigits = '[0-9](_*[0-9])*';\nvar frac = `\\\\.(${decimalDigits})`;\nvar hexDigits = '[0-9a-fA-F](_*[0-9a-fA-F])*';\nvar NUMERIC = {\n  className: 'number',\n  variants: [\n    // DecimalFloatingPointLiteral\n    // including ExponentPart\n    { begin: `(\\\\b(${decimalDigits})((${frac})|\\\\.)?|(${frac}))` +\n      `[eE][+-]?(${decimalDigits})[fFdD]?\\\\b` },\n    // excluding ExponentPart\n    { begin: `\\\\b(${decimalDigits})((${frac})[fFdD]?\\\\b|\\\\.([fFdD]\\\\b)?)` },\n    { begin: `(${frac})[fFdD]?\\\\b` },\n    { begin: `\\\\b(${decimalDigits})[fFdD]\\\\b` },\n\n    // HexadecimalFloatingPointLiteral\n    { begin: `\\\\b0[xX]((${hexDigits})\\\\.?|(${hexDigits})?\\\\.(${hexDigits}))` +\n      `[pP][+-]?(${decimalDigits})[fFdD]?\\\\b` },\n\n    // DecimalIntegerLiteral\n    { begin: '\\\\b(0|[1-9](_*[0-9])*)[lL]?\\\\b' },\n\n    // HexIntegerLiteral\n    { begin: `\\\\b0[xX](${hexDigits})[lL]?\\\\b` },\n\n    // OctalIntegerLiteral\n    { begin: '\\\\b0(_*[0-7])*[lL]?\\\\b' },\n\n    // BinaryIntegerLiteral\n    { begin: '\\\\b0[bB][01](_*[01])*[lL]?\\\\b' },\n  ],\n  relevance: 0\n};\n\n/*\nLanguage: Java\nAuthor: Vsevolod Solovyov <vsevolod.solovyov@gmail.com>\nCategory: common, enterprise\nWebsite: https://www.java.com/\n*/\n\n/**\n * Allows recursive regex expressions to a given depth\n *\n * ie: recurRegex(\"(abc~~~)\", /~~~/g, 2) becomes:\n * (abc(abc(abc)))\n *\n * @param {string} re\n * @param {RegExp} substitution (should be a g mode regex)\n * @param {number} depth\n * @returns {string}``\n */\nfunction recurRegex(re, substitution, depth) {\n  if (depth === -1) return \"\";\n\n  return re.replace(substitution, _ => {\n    return recurRegex(re, substitution, depth - 1);\n  });\n}\n\n/** @type LanguageFn */\nfunction java(hljs) {\n  const JAVA_IDENT_RE = '[\\u00C0-\\u02B8a-zA-Z_$][\\u00C0-\\u02B8a-zA-Z_$0-9]*';\n  const GENERIC_IDENT_RE = JAVA_IDENT_RE +\n    recurRegex('(?:<' + JAVA_IDENT_RE + '~~~(?:\\\\s*,\\\\s*' + JAVA_IDENT_RE + '~~~)*>)?', /~~~/g, 2);\n  const MAIN_KEYWORDS = [\n    'synchronized',\n    'abstract',\n    'private',\n    'var',\n    'static',\n    'if',\n    'const ',\n    'for',\n    'while',\n    'strictfp',\n    'finally',\n    'protected',\n    'import',\n    'native',\n    'final',\n    'void',\n    'enum',\n    'else',\n    'break',\n    'transient',\n    'catch',\n    'instanceof',\n    'volatile',\n    'case',\n    'assert',\n    'package',\n    'default',\n    'public',\n    'try',\n    'switch',\n    'continue',\n    'throws',\n    'protected',\n    'public',\n    'private',\n    'module',\n    'requires',\n    'exports',\n    'do'\n  ];\n\n  const BUILT_INS = [\n    'super',\n    'this'\n  ];\n\n  const LITERALS = [\n    'false',\n    'true',\n    'null'\n  ];\n\n  const TYPES = [\n    'char',\n    'boolean',\n    'long',\n    'float',\n    'int',\n    'byte',\n    'short',\n    'double'\n  ];\n\n  const KEYWORDS = {\n    keyword: MAIN_KEYWORDS,\n    literal: LITERALS,\n    type: TYPES,\n    built_in: BUILT_INS\n  };\n\n  const ANNOTATION = {\n    className: 'meta',\n    begin: '@' + JAVA_IDENT_RE,\n    contains: [\n      {\n        begin: /\\(/,\n        end: /\\)/,\n        contains: [ \"self\" ] // allow nested () inside our annotation\n      }\n    ]\n  };\n  const PARAMS = {\n    className: 'params',\n    begin: /\\(/,\n    end: /\\)/,\n    keywords: KEYWORDS,\n    relevance: 0,\n    contains: [\n      hljs.C_BLOCK_COMMENT_MODE\n    ],\n    endsParent: true\n  };\n\n  return {\n    name: 'Java',\n    aliases: [ 'jsp' ],\n    keywords: KEYWORDS,\n    illegal: /<\\/|#/,\n    contains: [\n      hljs.COMMENT(\n        '/\\\\*\\\\*',\n        '\\\\*/',\n        {\n          relevance: 0,\n          contains: [\n            {\n              // eat up @'s in emails to prevent them to be recognized as doctags\n              begin: /\\w+@/,\n              relevance: 0\n            },\n            {\n              className: 'doctag',\n              begin: '@[A-Za-z]+'\n            }\n          ]\n        }\n      ),\n      // relevance boost\n      {\n        begin: /import java\\.[a-z]+\\./,\n        keywords: \"import\",\n        relevance: 2\n      },\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      {\n        match: [\n          /\\b(?:class|interface|enum|extends|implements|new)/,\n          /\\s+/,\n          JAVA_IDENT_RE\n        ],\n        className: {\n          1: \"keyword\",\n          3: \"title.class\"\n        }\n      },\n      {\n        begin: [\n          JAVA_IDENT_RE,\n          /\\s+/,\n          JAVA_IDENT_RE,\n          /\\s+/,\n          /=/\n        ],\n        className: {\n          1: \"type\",\n          3: \"variable\",\n          5: \"operator\"\n        }\n      },\n      {\n        begin: [\n          /record/,\n          /\\s+/,\n          JAVA_IDENT_RE\n        ],\n        className: {\n          1: \"keyword\",\n          3: \"title.class\"\n        },\n        contains: [\n          PARAMS,\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE\n        ]\n      },\n      {\n        // Expression keywords prevent 'keyword Name(...)' from being\n        // recognized as a function definition\n        beginKeywords: 'new throw return else',\n        relevance: 0\n      },\n      {\n        begin: [\n          '(?:' + GENERIC_IDENT_RE + '\\\\s+)',\n          hljs.UNDERSCORE_IDENT_RE,\n          /\\s*(?=\\()/\n        ],\n        className: {\n          2: \"title.function\"\n        },\n        keywords: KEYWORDS,\n        contains: [\n          {\n            className: 'params',\n            begin: /\\(/,\n            end: /\\)/,\n            keywords: KEYWORDS,\n            relevance: 0,\n            contains: [\n              ANNOTATION,\n              hljs.APOS_STRING_MODE,\n              hljs.QUOTE_STRING_MODE,\n              NUMERIC,\n              hljs.C_BLOCK_COMMENT_MODE\n            ]\n          },\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE\n        ]\n      },\n      NUMERIC,\n      ANNOTATION\n    ]\n  };\n}\n\nexport default java;\n","const IDENT_RE = '[A-Za-z$_][0-9A-Za-z$_]*';\nconst KEYWORDS = [\n  \"as\", // for exports\n  \"in\",\n  \"of\",\n  \"if\",\n  \"for\",\n  \"while\",\n  \"finally\",\n  \"var\",\n  \"new\",\n  \"function\",\n  \"do\",\n  \"return\",\n  \"void\",\n  \"else\",\n  \"break\",\n  \"catch\",\n  \"instanceof\",\n  \"with\",\n  \"throw\",\n  \"case\",\n  \"default\",\n  \"try\",\n  \"switch\",\n  \"continue\",\n  \"typeof\",\n  \"delete\",\n  \"let\",\n  \"yield\",\n  \"const\",\n  \"class\",\n  // JS handles these with a special rule\n  // \"get\",\n  // \"set\",\n  \"debugger\",\n  \"async\",\n  \"await\",\n  \"static\",\n  \"import\",\n  \"from\",\n  \"export\",\n  \"extends\"\n];\nconst LITERALS = [\n  \"true\",\n  \"false\",\n  \"null\",\n  \"undefined\",\n  \"NaN\",\n  \"Infinity\"\n];\n\nconst TYPES = [\n  \"Intl\",\n  \"DataView\",\n  \"Number\",\n  \"Math\",\n  \"Date\",\n  \"String\",\n  \"RegExp\",\n  \"Object\",\n  \"Function\",\n  \"Boolean\",\n  \"Error\",\n  \"Symbol\",\n  \"Set\",\n  \"Map\",\n  \"WeakSet\",\n  \"WeakMap\",\n  \"Proxy\",\n  \"Reflect\",\n  \"JSON\",\n  \"Promise\",\n  \"Float64Array\",\n  \"Int16Array\",\n  \"Int32Array\",\n  \"Int8Array\",\n  \"Uint16Array\",\n  \"Uint32Array\",\n  \"Float32Array\",\n  \"Array\",\n  \"Uint8Array\",\n  \"Uint8ClampedArray\",\n  \"ArrayBuffer\",\n  \"BigInt64Array\",\n  \"BigUint64Array\",\n  \"BigInt\"\n];\n\nconst ERROR_TYPES = [\n  \"EvalError\",\n  \"InternalError\",\n  \"RangeError\",\n  \"ReferenceError\",\n  \"SyntaxError\",\n  \"TypeError\",\n  \"URIError\"\n];\n\nconst BUILT_IN_GLOBALS = [\n  \"setInterval\",\n  \"setTimeout\",\n  \"clearInterval\",\n  \"clearTimeout\",\n\n  \"require\",\n  \"exports\",\n\n  \"eval\",\n  \"isFinite\",\n  \"isNaN\",\n  \"parseFloat\",\n  \"parseInt\",\n  \"decodeURI\",\n  \"decodeURIComponent\",\n  \"encodeURI\",\n  \"encodeURIComponent\",\n  \"escape\",\n  \"unescape\"\n];\n\nconst BUILT_IN_VARIABLES = [\n  \"arguments\",\n  \"this\",\n  \"super\",\n  \"console\",\n  \"window\",\n  \"document\",\n  \"localStorage\",\n  \"module\",\n  \"global\" // Node.js\n];\n\nconst BUILT_INS = [].concat(\n  BUILT_IN_GLOBALS,\n  TYPES,\n  ERROR_TYPES\n);\n\n/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction lookahead(re) {\n  return concat('(?=', re, ')');\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/*\nLanguage: JavaScript\nDescription: JavaScript (JS) is a lightweight, interpreted, or just-in-time compiled programming language with first-class functions.\nCategory: common, scripting, web\nWebsite: https://developer.mozilla.org/en-US/docs/Web/JavaScript\n*/\n\n/** @type LanguageFn */\nfunction javascript(hljs) {\n  /**\n   * Takes a string like \"<Booger\" and checks to see\n   * if we can find a matching \"</Booger\" later in the\n   * content.\n   * @param {RegExpMatchArray} match\n   * @param {{after:number}} param1\n   */\n  const hasClosingTag = (match, { after }) => {\n    const tag = \"</\" + match[0].slice(1);\n    const pos = match.input.indexOf(tag, after);\n    return pos !== -1;\n  };\n\n  const IDENT_RE$1 = IDENT_RE;\n  const FRAGMENT = {\n    begin: '<>',\n    end: '</>'\n  };\n  const XML_TAG = {\n    begin: /<[A-Za-z0-9\\\\._:-]+/,\n    end: /\\/[A-Za-z0-9\\\\._:-]+>|\\/>/,\n    /**\n     * @param {RegExpMatchArray} match\n     * @param {CallbackResponse} response\n     */\n    isTrulyOpeningTag: (match, response) => {\n      const afterMatchIndex = match[0].length + match.index;\n      const nextChar = match.input[afterMatchIndex];\n      // nested type?\n      // HTML should not include another raw `<` inside a tag\n      // But a type might: `<Array<Array<number>>`, etc.\n      if (nextChar === \"<\") {\n        response.ignoreMatch();\n        return;\n      }\n      // <something>\n      // This is now either a tag or a type.\n      if (nextChar === \">\") {\n        // if we cannot find a matching closing tag, then we\n        // will ignore it\n        if (!hasClosingTag(match, { after: afterMatchIndex })) {\n          response.ignoreMatch();\n        }\n      }\n    }\n  };\n  const KEYWORDS$1 = {\n    $pattern: IDENT_RE,\n    keyword: KEYWORDS,\n    literal: LITERALS,\n    built_in: BUILT_INS,\n    \"variable.language\": BUILT_IN_VARIABLES\n  };\n\n  // https://tc39.es/ecma262/#sec-literals-numeric-literals\n  const decimalDigits = '[0-9](_?[0-9])*';\n  const frac = `\\\\.(${decimalDigits})`;\n  // DecimalIntegerLiteral, including Annex B NonOctalDecimalIntegerLiteral\n  // https://tc39.es/ecma262/#sec-additional-syntax-numeric-literals\n  const decimalInteger = `0|[1-9](_?[0-9])*|0[0-7]*[89][0-9]*`;\n  const NUMBER = {\n    className: 'number',\n    variants: [\n      // DecimalLiteral\n      { begin: `(\\\\b(${decimalInteger})((${frac})|\\\\.)?|(${frac}))` +\n        `[eE][+-]?(${decimalDigits})\\\\b` },\n      { begin: `\\\\b(${decimalInteger})\\\\b((${frac})\\\\b|\\\\.)?|(${frac})\\\\b` },\n\n      // DecimalBigIntegerLiteral\n      { begin: `\\\\b(0|[1-9](_?[0-9])*)n\\\\b` },\n\n      // NonDecimalIntegerLiteral\n      { begin: \"\\\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*n?\\\\b\" },\n      { begin: \"\\\\b0[bB][0-1](_?[0-1])*n?\\\\b\" },\n      { begin: \"\\\\b0[oO][0-7](_?[0-7])*n?\\\\b\" },\n\n      // LegacyOctalIntegerLiteral (does not include underscore separators)\n      // https://tc39.es/ecma262/#sec-additional-syntax-numeric-literals\n      { begin: \"\\\\b0[0-7]+n?\\\\b\" },\n    ],\n    relevance: 0\n  };\n\n  const SUBST = {\n    className: 'subst',\n    begin: '\\\\$\\\\{',\n    end: '\\\\}',\n    keywords: KEYWORDS$1,\n    contains: [] // defined later\n  };\n  const HTML_TEMPLATE = {\n    begin: 'html`',\n    end: '',\n    starts: {\n      end: '`',\n      returnEnd: false,\n      contains: [\n        hljs.BACKSLASH_ESCAPE,\n        SUBST\n      ],\n      subLanguage: 'xml'\n    }\n  };\n  const CSS_TEMPLATE = {\n    begin: 'css`',\n    end: '',\n    starts: {\n      end: '`',\n      returnEnd: false,\n      contains: [\n        hljs.BACKSLASH_ESCAPE,\n        SUBST\n      ],\n      subLanguage: 'css'\n    }\n  };\n  const TEMPLATE_STRING = {\n    className: 'string',\n    begin: '`',\n    end: '`',\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      SUBST\n    ]\n  };\n  const JSDOC_COMMENT = hljs.COMMENT(\n    /\\/\\*\\*(?!\\/)/,\n    '\\\\*/',\n    {\n      relevance: 0,\n      contains: [\n        {\n          begin: '(?=@[A-Za-z]+)',\n          relevance: 0,\n          contains: [\n            {\n              className: 'doctag',\n              begin: '@[A-Za-z]+'\n            },\n            {\n              className: 'type',\n              begin: '\\\\{',\n              end: '\\\\}',\n              excludeEnd: true,\n              excludeBegin: true,\n              relevance: 0\n            },\n            {\n              className: 'variable',\n              begin: IDENT_RE$1 + '(?=\\\\s*(-)|$)',\n              endsParent: true,\n              relevance: 0\n            },\n            // eat spaces (not newlines) so we can find\n            // types or variables\n            {\n              begin: /(?=[^\\n])\\s/,\n              relevance: 0\n            }\n          ]\n        }\n      ]\n    }\n  );\n  const COMMENT = {\n    className: \"comment\",\n    variants: [\n      JSDOC_COMMENT,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.C_LINE_COMMENT_MODE\n    ]\n  };\n  const SUBST_INTERNALS = [\n    hljs.APOS_STRING_MODE,\n    hljs.QUOTE_STRING_MODE,\n    HTML_TEMPLATE,\n    CSS_TEMPLATE,\n    TEMPLATE_STRING,\n    NUMBER,\n    hljs.REGEXP_MODE\n  ];\n  SUBST.contains = SUBST_INTERNALS\n    .concat({\n      // we need to pair up {} inside our subst to prevent\n      // it from ending too early by matching another }\n      begin: /\\{/,\n      end: /\\}/,\n      keywords: KEYWORDS$1,\n      contains: [\n        \"self\"\n      ].concat(SUBST_INTERNALS)\n    });\n  const SUBST_AND_COMMENTS = [].concat(COMMENT, SUBST.contains);\n  const PARAMS_CONTAINS = SUBST_AND_COMMENTS.concat([\n    // eat recursive parens in sub expressions\n    {\n      begin: /\\(/,\n      end: /\\)/,\n      keywords: KEYWORDS$1,\n      contains: [\"self\"].concat(SUBST_AND_COMMENTS)\n    }\n  ]);\n  const PARAMS = {\n    className: 'params',\n    begin: /\\(/,\n    end: /\\)/,\n    excludeBegin: true,\n    excludeEnd: true,\n    keywords: KEYWORDS$1,\n    contains: PARAMS_CONTAINS\n  };\n\n  // ES6 classes\n  const CLASS_OR_EXTENDS = {\n    variants: [\n      {\n        match: [\n          /class/,\n          /\\s+/,\n          IDENT_RE$1\n        ],\n        scope: {\n          1: \"keyword\",\n          3: \"title.class\"\n        }\n      },\n      {\n        match: [\n          /extends/,\n          /\\s+/,\n          concat(IDENT_RE$1, \"(\", concat(/\\./, IDENT_RE$1), \")*\")\n        ],\n        scope: {\n          1: \"keyword\",\n          3: \"title.class.inherited\"\n        }\n      }\n    ]\n  };\n\n  const CLASS_REFERENCE = {\n    relevance: 0,\n    match: /\\b[A-Z][a-z]+([A-Z][a-z]+)*/,\n    className: \"title.class\",\n    keywords: {\n      _: [\n        // se we still get relevance credit for JS library classes\n        ...TYPES,\n        ...ERROR_TYPES\n      ]\n    }\n  };\n\n  const USE_STRICT = {\n    label: \"use_strict\",\n    className: 'meta',\n    relevance: 10,\n    begin: /^\\s*['\"]use (strict|asm)['\"]/\n  };\n\n  const FUNCTION_DEFINITION = {\n    variants: [\n      {\n        match: [\n          /function/,\n          /\\s+/,\n          IDENT_RE$1,\n          /(?=\\s*\\()/\n        ]\n      },\n      // anonymous function\n      {\n        match: [\n          /function/,\n          /\\s*(?=\\()/\n        ]\n      }\n    ],\n    className: {\n      1: \"keyword\",\n      3: \"title.function\"\n    },\n    label: \"func.def\",\n    contains: [ PARAMS ],\n    illegal: /%/\n  };\n\n  const UPPER_CASE_CONSTANT = {\n    relevance: 0,\n    match: /\\b[A-Z][A-Z_0-9]+\\b/,\n    className: \"variable.constant\"\n  };\n\n  function noneOf(list) {\n    return concat(\"(?!\", list.join(\"|\"), \")\");\n  }\n\n  const FUNCTION_CALL = {\n    match: concat(\n      /\\b/,\n      noneOf([\n        ...BUILT_IN_GLOBALS,\n        \"super\"\n      ]),\n      IDENT_RE$1, lookahead(/\\(/)),\n    className: \"title.function\",\n    relevance: 0\n  };\n\n  const PROPERTY_ACCESS = {\n    begin: concat(/\\./, lookahead(\n      concat(IDENT_RE$1, /(?![0-9A-Za-z$_(])/)\n    )),\n    end: IDENT_RE$1,\n    excludeBegin: true,\n    keywords: \"prototype\",\n    className: \"property\",\n    relevance: 0\n  };\n\n  const GETTER_OR_SETTER = {\n    match: [\n      /get|set/,\n      /\\s+/,\n      IDENT_RE$1,\n      /(?=\\()/\n    ],\n    className: {\n      1: \"keyword\",\n      3: \"title.function\"\n    },\n    contains: [\n      { // eat to avoid empty params\n        begin: /\\(\\)/\n      },\n      PARAMS\n    ]\n  };\n\n  const FUNC_LEAD_IN_RE = '(\\\\(' +\n    '[^()]*(\\\\(' +\n    '[^()]*(\\\\(' +\n    '[^()]*' +\n    '\\\\)[^()]*)*' +\n    '\\\\)[^()]*)*' +\n    '\\\\)|' + hljs.UNDERSCORE_IDENT_RE + ')\\\\s*=>';\n\n  const FUNCTION_VARIABLE = {\n    match: [\n      /const|var|let/, /\\s+/,\n      IDENT_RE$1, /\\s*/,\n      /=\\s*/,\n      lookahead(FUNC_LEAD_IN_RE)\n    ],\n    className: {\n      1: \"keyword\",\n      3: \"title.function\"\n    },\n    contains: [\n      PARAMS\n    ]\n  };\n\n  return {\n    name: 'Javascript',\n    aliases: ['js', 'jsx', 'mjs', 'cjs'],\n    keywords: KEYWORDS$1,\n    // this will be extended by TypeScript\n    exports: { PARAMS_CONTAINS },\n    illegal: /#(?![$_A-z])/,\n    contains: [\n      hljs.SHEBANG({\n        label: \"shebang\",\n        binary: \"node\",\n        relevance: 5\n      }),\n      USE_STRICT,\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      HTML_TEMPLATE,\n      CSS_TEMPLATE,\n      TEMPLATE_STRING,\n      COMMENT,\n      NUMBER,\n      CLASS_REFERENCE,\n      {\n        className: 'attr',\n        begin: IDENT_RE$1 + lookahead(':'),\n        relevance: 0\n      },\n      FUNCTION_VARIABLE,\n      { // \"value\" container\n        begin: '(' + hljs.RE_STARTERS_RE + '|\\\\b(case|return|throw)\\\\b)\\\\s*',\n        keywords: 'return throw case',\n        relevance: 0,\n        contains: [\n          COMMENT,\n          hljs.REGEXP_MODE,\n          {\n            className: 'function',\n            // we have to count the parens to make sure we actually have the\n            // correct bounding ( ) before the =>.  There could be any number of\n            // sub-expressions inside also surrounded by parens.\n            begin: FUNC_LEAD_IN_RE,\n            returnBegin: true,\n            end: '\\\\s*=>',\n            contains: [\n              {\n                className: 'params',\n                variants: [\n                  {\n                    begin: hljs.UNDERSCORE_IDENT_RE,\n                    relevance: 0\n                  },\n                  {\n                    className: null,\n                    begin: /\\(\\s*\\)/,\n                    skip: true\n                  },\n                  {\n                    begin: /\\(/,\n                    end: /\\)/,\n                    excludeBegin: true,\n                    excludeEnd: true,\n                    keywords: KEYWORDS$1,\n                    contains: PARAMS_CONTAINS\n                  }\n                ]\n              }\n            ]\n          },\n          { // could be a comma delimited list of params to a function call\n            begin: /,/,\n            relevance: 0\n          },\n          {\n            match: /\\s+/,\n            relevance: 0\n          },\n          { // JSX\n            variants: [\n              { begin: FRAGMENT.begin, end: FRAGMENT.end },\n              {\n                begin: XML_TAG.begin,\n                // we carefully check the opening tag to see if it truly\n                // is a tag and not a false positive\n                'on:begin': XML_TAG.isTrulyOpeningTag,\n                end: XML_TAG.end\n              }\n            ],\n            subLanguage: 'xml',\n            contains: [\n              {\n                begin: XML_TAG.begin,\n                end: XML_TAG.end,\n                skip: true,\n                contains: ['self']\n              }\n            ]\n          }\n        ],\n      },\n      FUNCTION_DEFINITION,\n      {\n        // prevent this from getting swallowed up by function\n        // since they appear \"function like\"\n        beginKeywords: \"while if switch catch for\"\n      },\n      {\n        // we have to count the parens to make sure we actually have the correct\n        // bounding ( ).  There could be any number of sub-expressions inside\n        // also surrounded by parens.\n        begin: '\\\\b(?!function)' + hljs.UNDERSCORE_IDENT_RE +\n          '\\\\(' + // first parens\n          '[^()]*(\\\\(' +\n            '[^()]*(\\\\(' +\n              '[^()]*' +\n            '\\\\)[^()]*)*' +\n          '\\\\)[^()]*)*' +\n          '\\\\)\\\\s*\\\\{', // end parens\n        returnBegin:true,\n        label: \"func.def\",\n        contains: [\n          PARAMS,\n          hljs.inherit(hljs.TITLE_MODE, { begin: IDENT_RE$1, className: \"title.function\" })\n        ]\n      },\n      // catch ... so it won't trigger the property rule below\n      {\n        match: /\\.\\.\\./,\n        relevance: 0\n      },\n      PROPERTY_ACCESS,\n      // hack: prevents detection of keywords in some circumstances\n      // .keyword()\n      // $keyword = x\n      {\n        match: '\\\\$' + IDENT_RE$1,\n        relevance: 0\n      },\n      {\n        match: [ /\\bconstructor(?=\\s*\\()/ ],\n        className: { 1: \"title.function\" },\n        contains: [ PARAMS ]\n      },\n      FUNCTION_CALL,\n      UPPER_CASE_CONSTANT,\n      CLASS_OR_EXTENDS,\n      GETTER_OR_SETTER,\n      {\n        match: /\\$[(.]/ // relevance booster for a pattern common to JS libs: `$(something)` and `$.something`\n      }\n    ]\n  };\n}\n\nexport default javascript;\n","/*\nLanguage: JSON\nDescription: JSON (JavaScript Object Notation) is a lightweight data-interchange format.\nAuthor: Ivan Sagalaev <maniac@softwaremaniacs.org>\nWebsite: http://www.json.org\nCategory: common, protocols, web\n*/\n\nfunction json(hljs) {\n  const ATTRIBUTE = {\n    className: 'attr',\n    begin: /\"(\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\n    relevance: 1.01\n  };\n  const PUNCTUATION = {\n    match: /[{}[\\],:]/,\n    className: \"punctuation\",\n    relevance: 0\n  };\n  // normally we would rely on `keywords` for this but using a mode here allows us\n  // to use the very tight `illegal: \\S` rule later to flag any other character\n  // as illegal indicating that despite looking like JSON we do not truly have\n  // JSON and thus improve false-positively greatly since JSON will try and claim\n  // all sorts of JSON looking stuff\n  const LITERALS = {\n    beginKeywords: [\n      \"true\",\n      \"false\",\n      \"null\"\n    ].join(\" \")\n  };\n\n  return {\n    name: 'JSON',\n    contains: [\n      ATTRIBUTE,\n      PUNCTUATION,\n      hljs.QUOTE_STRING_MODE,\n      LITERALS,\n      hljs.C_NUMBER_MODE,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE\n    ],\n    illegal: '\\\\S'\n  };\n}\n\nexport default json;\n","// https://docs.oracle.com/javase/specs/jls/se15/html/jls-3.html#jls-3.10\nvar decimalDigits = '[0-9](_*[0-9])*';\nvar frac = `\\\\.(${decimalDigits})`;\nvar hexDigits = '[0-9a-fA-F](_*[0-9a-fA-F])*';\nvar NUMERIC = {\n  className: 'number',\n  variants: [\n    // DecimalFloatingPointLiteral\n    // including ExponentPart\n    { begin: `(\\\\b(${decimalDigits})((${frac})|\\\\.)?|(${frac}))` +\n      `[eE][+-]?(${decimalDigits})[fFdD]?\\\\b` },\n    // excluding ExponentPart\n    { begin: `\\\\b(${decimalDigits})((${frac})[fFdD]?\\\\b|\\\\.([fFdD]\\\\b)?)` },\n    { begin: `(${frac})[fFdD]?\\\\b` },\n    { begin: `\\\\b(${decimalDigits})[fFdD]\\\\b` },\n\n    // HexadecimalFloatingPointLiteral\n    { begin: `\\\\b0[xX]((${hexDigits})\\\\.?|(${hexDigits})?\\\\.(${hexDigits}))` +\n      `[pP][+-]?(${decimalDigits})[fFdD]?\\\\b` },\n\n    // DecimalIntegerLiteral\n    { begin: '\\\\b(0|[1-9](_*[0-9])*)[lL]?\\\\b' },\n\n    // HexIntegerLiteral\n    { begin: `\\\\b0[xX](${hexDigits})[lL]?\\\\b` },\n\n    // OctalIntegerLiteral\n    { begin: '\\\\b0(_*[0-7])*[lL]?\\\\b' },\n\n    // BinaryIntegerLiteral\n    { begin: '\\\\b0[bB][01](_*[01])*[lL]?\\\\b' },\n  ],\n  relevance: 0\n};\n\n/*\n Language: Kotlin\n Description: Kotlin is an OSS statically typed programming language that targets the JVM, Android, JavaScript and Native.\n Author: Sergey Mashkov <cy6erGn0m@gmail.com>\n Website: https://kotlinlang.org\n Category: common\n */\n\nfunction kotlin(hljs) {\n  const KEYWORDS = {\n    keyword:\n      'abstract as val var vararg get set class object open private protected public noinline ' +\n      'crossinline dynamic final enum if else do while for when throw try catch finally ' +\n      'import package is in fun override companion reified inline lateinit init ' +\n      'interface annotation data sealed internal infix operator out by constructor super ' +\n      'tailrec where const inner suspend typealias external expect actual',\n    built_in:\n      'Byte Short Char Int Long Boolean Float Double Void Unit Nothing',\n    literal:\n      'true false null'\n  };\n  const KEYWORDS_WITH_LABEL = {\n    className: 'keyword',\n    begin: /\\b(break|continue|return|this)\\b/,\n    starts: {\n      contains: [\n        {\n          className: 'symbol',\n          begin: /@\\w+/\n        }\n      ]\n    }\n  };\n  const LABEL = {\n    className: 'symbol',\n    begin: hljs.UNDERSCORE_IDENT_RE + '@'\n  };\n\n  // for string templates\n  const SUBST = {\n    className: 'subst',\n    begin: /\\$\\{/,\n    end: /\\}/,\n    contains: [ hljs.C_NUMBER_MODE ]\n  };\n  const VARIABLE = {\n    className: 'variable',\n    begin: '\\\\$' + hljs.UNDERSCORE_IDENT_RE\n  };\n  const STRING = {\n    className: 'string',\n    variants: [\n      {\n        begin: '\"\"\"',\n        end: '\"\"\"(?=[^\"])',\n        contains: [\n          VARIABLE,\n          SUBST\n        ]\n      },\n      // Can't use built-in modes easily, as we want to use STRING in the meta\n      // context as 'meta-string' and there's no syntax to remove explicitly set\n      // classNames in built-in modes.\n      {\n        begin: '\\'',\n        end: '\\'',\n        illegal: /\\n/,\n        contains: [ hljs.BACKSLASH_ESCAPE ]\n      },\n      {\n        begin: '\"',\n        end: '\"',\n        illegal: /\\n/,\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          VARIABLE,\n          SUBST\n        ]\n      }\n    ]\n  };\n  SUBST.contains.push(STRING);\n\n  const ANNOTATION_USE_SITE = {\n    className: 'meta',\n    begin: '@(?:file|property|field|get|set|receiver|param|setparam|delegate)\\\\s*:(?:\\\\s*' + hljs.UNDERSCORE_IDENT_RE + ')?'\n  };\n  const ANNOTATION = {\n    className: 'meta',\n    begin: '@' + hljs.UNDERSCORE_IDENT_RE,\n    contains: [\n      {\n        begin: /\\(/,\n        end: /\\)/,\n        contains: [\n          hljs.inherit(STRING, {\n            className: 'string'\n          })\n        ]\n      }\n    ]\n  };\n\n  // https://kotlinlang.org/docs/reference/whatsnew11.html#underscores-in-numeric-literals\n  // According to the doc above, the number mode of kotlin is the same as java 8,\n  // so the code below is copied from java.js\n  const KOTLIN_NUMBER_MODE = NUMERIC;\n  const KOTLIN_NESTED_COMMENT = hljs.COMMENT(\n    '/\\\\*', '\\\\*/',\n    {\n      contains: [ hljs.C_BLOCK_COMMENT_MODE ]\n    }\n  );\n  const KOTLIN_PAREN_TYPE = {\n    variants: [\n      {\n        className: 'type',\n        begin: hljs.UNDERSCORE_IDENT_RE\n      },\n      {\n        begin: /\\(/,\n        end: /\\)/,\n        contains: [] // defined later\n      }\n    ]\n  };\n  const KOTLIN_PAREN_TYPE2 = KOTLIN_PAREN_TYPE;\n  KOTLIN_PAREN_TYPE2.variants[1].contains = [ KOTLIN_PAREN_TYPE ];\n  KOTLIN_PAREN_TYPE.variants[1].contains = [ KOTLIN_PAREN_TYPE2 ];\n\n  return {\n    name: 'Kotlin',\n    aliases: [ 'kt', 'kts' ],\n    keywords: KEYWORDS,\n    contains: [\n      hljs.COMMENT(\n        '/\\\\*\\\\*',\n        '\\\\*/',\n        {\n          relevance: 0,\n          contains: [\n            {\n              className: 'doctag',\n              begin: '@[A-Za-z]+'\n            }\n          ]\n        }\n      ),\n      hljs.C_LINE_COMMENT_MODE,\n      KOTLIN_NESTED_COMMENT,\n      KEYWORDS_WITH_LABEL,\n      LABEL,\n      ANNOTATION_USE_SITE,\n      ANNOTATION,\n      {\n        className: 'function',\n        beginKeywords: 'fun',\n        end: '[(]|$',\n        returnBegin: true,\n        excludeEnd: true,\n        keywords: KEYWORDS,\n        relevance: 5,\n        contains: [\n          {\n            begin: hljs.UNDERSCORE_IDENT_RE + '\\\\s*\\\\(',\n            returnBegin: true,\n            relevance: 0,\n            contains: [ hljs.UNDERSCORE_TITLE_MODE ]\n          },\n          {\n            className: 'type',\n            begin: /</,\n            end: />/,\n            keywords: 'reified',\n            relevance: 0\n          },\n          {\n            className: 'params',\n            begin: /\\(/,\n            end: /\\)/,\n            endsParent: true,\n            keywords: KEYWORDS,\n            relevance: 0,\n            contains: [\n              {\n                begin: /:/,\n                end: /[=,\\/]/,\n                endsWithParent: true,\n                contains: [\n                  KOTLIN_PAREN_TYPE,\n                  hljs.C_LINE_COMMENT_MODE,\n                  KOTLIN_NESTED_COMMENT\n                ],\n                relevance: 0\n              },\n              hljs.C_LINE_COMMENT_MODE,\n              KOTLIN_NESTED_COMMENT,\n              ANNOTATION_USE_SITE,\n              ANNOTATION,\n              STRING,\n              hljs.C_NUMBER_MODE\n            ]\n          },\n          KOTLIN_NESTED_COMMENT\n        ]\n      },\n      {\n        className: 'class',\n        beginKeywords: 'class interface trait', // remove 'trait' when removed from KEYWORDS\n        end: /[:\\{(]|$/,\n        excludeEnd: true,\n        illegal: 'extends implements',\n        contains: [\n          {\n            beginKeywords: 'public protected internal private constructor'\n          },\n          hljs.UNDERSCORE_TITLE_MODE,\n          {\n            className: 'type',\n            begin: /</,\n            end: />/,\n            excludeBegin: true,\n            excludeEnd: true,\n            relevance: 0\n          },\n          {\n            className: 'type',\n            begin: /[,:]\\s*/,\n            end: /[<\\(,]|$/,\n            excludeBegin: true,\n            returnEnd: true\n          },\n          ANNOTATION_USE_SITE,\n          ANNOTATION\n        ]\n      },\n      STRING,\n      {\n        className: 'meta',\n        begin: \"^#!/usr/bin/env\",\n        end: '$',\n        illegal: '\\n'\n      },\n      KOTLIN_NUMBER_MODE\n    ]\n  };\n}\n\nexport default kotlin;\n","const MODES = (hljs) => {\n  return {\n    IMPORTANT: {\n      scope: 'meta',\n      begin: '!important'\n    },\n    HEXCOLOR: {\n      scope: 'number',\n      begin: '#([a-fA-F0-9]{6}|[a-fA-F0-9]{3})'\n    },\n    ATTRIBUTE_SELECTOR_MODE: {\n      scope: 'selector-attr',\n      begin: /\\[/,\n      end: /\\]/,\n      illegal: '$',\n      contains: [\n        hljs.APOS_STRING_MODE,\n        hljs.QUOTE_STRING_MODE\n      ]\n    },\n    CSS_NUMBER_MODE: {\n      scope: 'number',\n      begin: hljs.NUMBER_RE + '(' +\n        '%|em|ex|ch|rem' +\n        '|vw|vh|vmin|vmax' +\n        '|cm|mm|in|pt|pc|px' +\n        '|deg|grad|rad|turn' +\n        '|s|ms' +\n        '|Hz|kHz' +\n        '|dpi|dpcm|dppx' +\n        ')?',\n      relevance: 0\n    },\n    CSS_VARIABLE: {\n      className: \"attr\",\n      begin: /--[A-Za-z][A-Za-z0-9_-]*/\n    }\n  };\n};\n\nconst TAGS = [\n  'a',\n  'abbr',\n  'address',\n  'article',\n  'aside',\n  'audio',\n  'b',\n  'blockquote',\n  'body',\n  'button',\n  'canvas',\n  'caption',\n  'cite',\n  'code',\n  'dd',\n  'del',\n  'details',\n  'dfn',\n  'div',\n  'dl',\n  'dt',\n  'em',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'header',\n  'hgroup',\n  'html',\n  'i',\n  'iframe',\n  'img',\n  'input',\n  'ins',\n  'kbd',\n  'label',\n  'legend',\n  'li',\n  'main',\n  'mark',\n  'menu',\n  'nav',\n  'object',\n  'ol',\n  'p',\n  'q',\n  'quote',\n  'samp',\n  'section',\n  'span',\n  'strong',\n  'summary',\n  'sup',\n  'table',\n  'tbody',\n  'td',\n  'textarea',\n  'tfoot',\n  'th',\n  'thead',\n  'time',\n  'tr',\n  'ul',\n  'var',\n  'video'\n];\n\nconst MEDIA_FEATURES = [\n  'any-hover',\n  'any-pointer',\n  'aspect-ratio',\n  'color',\n  'color-gamut',\n  'color-index',\n  'device-aspect-ratio',\n  'device-height',\n  'device-width',\n  'display-mode',\n  'forced-colors',\n  'grid',\n  'height',\n  'hover',\n  'inverted-colors',\n  'monochrome',\n  'orientation',\n  'overflow-block',\n  'overflow-inline',\n  'pointer',\n  'prefers-color-scheme',\n  'prefers-contrast',\n  'prefers-reduced-motion',\n  'prefers-reduced-transparency',\n  'resolution',\n  'scan',\n  'scripting',\n  'update',\n  'width',\n  // TODO: find a better solution?\n  'min-width',\n  'max-width',\n  'min-height',\n  'max-height'\n];\n\n// https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes\nconst PSEUDO_CLASSES = [\n  'active',\n  'any-link',\n  'blank',\n  'checked',\n  'current',\n  'default',\n  'defined',\n  'dir', // dir()\n  'disabled',\n  'drop',\n  'empty',\n  'enabled',\n  'first',\n  'first-child',\n  'first-of-type',\n  'fullscreen',\n  'future',\n  'focus',\n  'focus-visible',\n  'focus-within',\n  'has', // has()\n  'host', // host or host()\n  'host-context', // host-context()\n  'hover',\n  'indeterminate',\n  'in-range',\n  'invalid',\n  'is', // is()\n  'lang', // lang()\n  'last-child',\n  'last-of-type',\n  'left',\n  'link',\n  'local-link',\n  'not', // not()\n  'nth-child', // nth-child()\n  'nth-col', // nth-col()\n  'nth-last-child', // nth-last-child()\n  'nth-last-col', // nth-last-col()\n  'nth-last-of-type', //nth-last-of-type()\n  'nth-of-type', //nth-of-type()\n  'only-child',\n  'only-of-type',\n  'optional',\n  'out-of-range',\n  'past',\n  'placeholder-shown',\n  'read-only',\n  'read-write',\n  'required',\n  'right',\n  'root',\n  'scope',\n  'target',\n  'target-within',\n  'user-invalid',\n  'valid',\n  'visited',\n  'where' // where()\n];\n\n// https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements\nconst PSEUDO_ELEMENTS = [\n  'after',\n  'backdrop',\n  'before',\n  'cue',\n  'cue-region',\n  'first-letter',\n  'first-line',\n  'grammar-error',\n  'marker',\n  'part',\n  'placeholder',\n  'selection',\n  'slotted',\n  'spelling-error'\n];\n\nconst ATTRIBUTES = [\n  'align-content',\n  'align-items',\n  'align-self',\n  'animation',\n  'animation-delay',\n  'animation-direction',\n  'animation-duration',\n  'animation-fill-mode',\n  'animation-iteration-count',\n  'animation-name',\n  'animation-play-state',\n  'animation-timing-function',\n  'auto',\n  'backface-visibility',\n  'background',\n  'background-attachment',\n  'background-clip',\n  'background-color',\n  'background-image',\n  'background-origin',\n  'background-position',\n  'background-repeat',\n  'background-size',\n  'border',\n  'border-bottom',\n  'border-bottom-color',\n  'border-bottom-left-radius',\n  'border-bottom-right-radius',\n  'border-bottom-style',\n  'border-bottom-width',\n  'border-collapse',\n  'border-color',\n  'border-image',\n  'border-image-outset',\n  'border-image-repeat',\n  'border-image-slice',\n  'border-image-source',\n  'border-image-width',\n  'border-left',\n  'border-left-color',\n  'border-left-style',\n  'border-left-width',\n  'border-radius',\n  'border-right',\n  'border-right-color',\n  'border-right-style',\n  'border-right-width',\n  'border-spacing',\n  'border-style',\n  'border-top',\n  'border-top-color',\n  'border-top-left-radius',\n  'border-top-right-radius',\n  'border-top-style',\n  'border-top-width',\n  'border-width',\n  'bottom',\n  'box-decoration-break',\n  'box-shadow',\n  'box-sizing',\n  'break-after',\n  'break-before',\n  'break-inside',\n  'caption-side',\n  'clear',\n  'clip',\n  'clip-path',\n  'color',\n  'column-count',\n  'column-fill',\n  'column-gap',\n  'column-rule',\n  'column-rule-color',\n  'column-rule-style',\n  'column-rule-width',\n  'column-span',\n  'column-width',\n  'columns',\n  'content',\n  'counter-increment',\n  'counter-reset',\n  'cursor',\n  'direction',\n  'display',\n  'empty-cells',\n  'filter',\n  'flex',\n  'flex-basis',\n  'flex-direction',\n  'flex-flow',\n  'flex-grow',\n  'flex-shrink',\n  'flex-wrap',\n  'float',\n  'font',\n  'font-display',\n  'font-family',\n  'font-feature-settings',\n  'font-kerning',\n  'font-language-override',\n  'font-size',\n  'font-size-adjust',\n  'font-smoothing',\n  'font-stretch',\n  'font-style',\n  'font-variant',\n  'font-variant-ligatures',\n  'font-variation-settings',\n  'font-weight',\n  'height',\n  'hyphens',\n  'icon',\n  'image-orientation',\n  'image-rendering',\n  'image-resolution',\n  'ime-mode',\n  'inherit',\n  'initial',\n  'justify-content',\n  'left',\n  'letter-spacing',\n  'line-height',\n  'list-style',\n  'list-style-image',\n  'list-style-position',\n  'list-style-type',\n  'margin',\n  'margin-bottom',\n  'margin-left',\n  'margin-right',\n  'margin-top',\n  'marks',\n  'mask',\n  'max-height',\n  'max-width',\n  'min-height',\n  'min-width',\n  'nav-down',\n  'nav-index',\n  'nav-left',\n  'nav-right',\n  'nav-up',\n  'none',\n  'normal',\n  'object-fit',\n  'object-position',\n  'opacity',\n  'order',\n  'orphans',\n  'outline',\n  'outline-color',\n  'outline-offset',\n  'outline-style',\n  'outline-width',\n  'overflow',\n  'overflow-wrap',\n  'overflow-x',\n  'overflow-y',\n  'padding',\n  'padding-bottom',\n  'padding-left',\n  'padding-right',\n  'padding-top',\n  'page-break-after',\n  'page-break-before',\n  'page-break-inside',\n  'perspective',\n  'perspective-origin',\n  'pointer-events',\n  'position',\n  'quotes',\n  'resize',\n  'right',\n  'src', // @font-face\n  'tab-size',\n  'table-layout',\n  'text-align',\n  'text-align-last',\n  'text-decoration',\n  'text-decoration-color',\n  'text-decoration-line',\n  'text-decoration-style',\n  'text-indent',\n  'text-overflow',\n  'text-rendering',\n  'text-shadow',\n  'text-transform',\n  'text-underline-position',\n  'top',\n  'transform',\n  'transform-origin',\n  'transform-style',\n  'transition',\n  'transition-delay',\n  'transition-duration',\n  'transition-property',\n  'transition-timing-function',\n  'unicode-bidi',\n  'vertical-align',\n  'visibility',\n  'white-space',\n  'widows',\n  'width',\n  'word-break',\n  'word-spacing',\n  'word-wrap',\n  'z-index'\n  // reverse makes sure longer attributes `font-weight` are matched fully\n  // instead of getting false positives on say `font`\n].reverse();\n\n// some grammars use them all as a single group\nconst PSEUDO_SELECTORS = PSEUDO_CLASSES.concat(PSEUDO_ELEMENTS);\n\n/*\nLanguage: Less\nDescription: It's CSS, with just a little more.\nAuthor:   Max Mikhailov <seven.phases.max@gmail.com>\nWebsite: http://lesscss.org\nCategory: common, css, web\n*/\n\n/** @type LanguageFn */\nfunction less(hljs) {\n  const modes = MODES(hljs);\n  const PSEUDO_SELECTORS$1 = PSEUDO_SELECTORS;\n\n  const AT_MODIFIERS = \"and or not only\";\n  const IDENT_RE = '[\\\\w-]+'; // yes, Less identifiers may begin with a digit\n  const INTERP_IDENT_RE = '(' + IDENT_RE + '|@\\\\{' + IDENT_RE + '\\\\})';\n\n  /* Generic Modes */\n\n  const RULES = []; const VALUE_MODES = []; // forward def. for recursive modes\n\n  const STRING_MODE = function(c) {\n    return {\n    // Less strings are not multiline (also include '~' for more consistent coloring of \"escaped\" strings)\n      className: 'string',\n      begin: '~?' + c + '.*?' + c\n    };\n  };\n\n  const IDENT_MODE = function(name, begin, relevance) {\n    return {\n      className: name,\n      begin: begin,\n      relevance: relevance\n    };\n  };\n\n  const AT_KEYWORDS = {\n    $pattern: /[a-z-]+/,\n    keyword: AT_MODIFIERS,\n    attribute: MEDIA_FEATURES.join(\" \")\n  };\n\n  const PARENS_MODE = {\n    // used only to properly balance nested parens inside mixin call, def. arg list\n    begin: '\\\\(',\n    end: '\\\\)',\n    contains: VALUE_MODES,\n    keywords: AT_KEYWORDS,\n    relevance: 0\n  };\n\n  // generic Less highlighter (used almost everywhere except selectors):\n  VALUE_MODES.push(\n    hljs.C_LINE_COMMENT_MODE,\n    hljs.C_BLOCK_COMMENT_MODE,\n    STRING_MODE(\"'\"),\n    STRING_MODE('\"'),\n    modes.CSS_NUMBER_MODE, // fixme: it does not include dot for numbers like .5em :(\n    {\n      begin: '(url|data-uri)\\\\(',\n      starts: {\n        className: 'string',\n        end: '[\\\\)\\\\n]',\n        excludeEnd: true\n      }\n    },\n    modes.HEXCOLOR,\n    PARENS_MODE,\n    IDENT_MODE('variable', '@@?' + IDENT_RE, 10),\n    IDENT_MODE('variable', '@\\\\{' + IDENT_RE + '\\\\}'),\n    IDENT_MODE('built_in', '~?`[^`]*?`'), // inline javascript (or whatever host language) *multiline* string\n    { // @media features (it’s here to not duplicate things in AT_RULE_MODE with extra PARENS_MODE overriding):\n      className: 'attribute',\n      begin: IDENT_RE + '\\\\s*:',\n      end: ':',\n      returnBegin: true,\n      excludeEnd: true\n    },\n    modes.IMPORTANT\n  );\n\n  const VALUE_WITH_RULESETS = VALUE_MODES.concat({\n    begin: /\\{/,\n    end: /\\}/,\n    contains: RULES\n  });\n\n  const MIXIN_GUARD_MODE = {\n    beginKeywords: 'when',\n    endsWithParent: true,\n    contains: [\n      {\n        beginKeywords: 'and not'\n      }\n    ].concat(VALUE_MODES) // using this form to override VALUE’s 'function' match\n  };\n\n  /* Rule-Level Modes */\n\n  const RULE_MODE = {\n    begin: INTERP_IDENT_RE + '\\\\s*:',\n    returnBegin: true,\n    end: /[;}]/,\n    relevance: 0,\n    contains: [\n      {\n        begin: /-(webkit|moz|ms|o)-/\n      },\n      modes.CSS_VARIABLE,\n      {\n        className: 'attribute',\n        begin: '\\\\b(' + ATTRIBUTES.join('|') + ')\\\\b',\n        end: /(?=:)/,\n        starts: {\n          endsWithParent: true,\n          illegal: '[<=$]',\n          relevance: 0,\n          contains: VALUE_MODES\n        }\n      }\n    ]\n  };\n\n  const AT_RULE_MODE = {\n    className: 'keyword',\n    begin: '@(import|media|charset|font-face|(-[a-z]+-)?keyframes|supports|document|namespace|page|viewport|host)\\\\b',\n    starts: {\n      end: '[;{}]',\n      keywords: AT_KEYWORDS,\n      returnEnd: true,\n      contains: VALUE_MODES,\n      relevance: 0\n    }\n  };\n\n  // variable definitions and calls\n  const VAR_RULE_MODE = {\n    className: 'variable',\n    variants: [\n      // using more strict pattern for higher relevance to increase chances of Less detection.\n      // this is *the only* Less specific statement used in most of the sources, so...\n      // (we’ll still often loose to the css-parser unless there's '//' comment,\n      // simply because 1 variable just can't beat 99 properties :)\n      {\n        begin: '@' + IDENT_RE + '\\\\s*:',\n        relevance: 15\n      },\n      {\n        begin: '@' + IDENT_RE\n      }\n    ],\n    starts: {\n      end: '[;}]',\n      returnEnd: true,\n      contains: VALUE_WITH_RULESETS\n    }\n  };\n\n  const SELECTOR_MODE = {\n    // first parse unambiguous selectors (i.e. those not starting with tag)\n    // then fall into the scary lookahead-discriminator variant.\n    // this mode also handles mixin definitions and calls\n    variants: [\n      {\n        begin: '[\\\\.#:&\\\\[>]',\n        end: '[;{}]' // mixin calls end with ';'\n      },\n      {\n        begin: INTERP_IDENT_RE,\n        end: /\\{/\n      }\n    ],\n    returnBegin: true,\n    returnEnd: true,\n    illegal: '[<=\\'$\"]',\n    relevance: 0,\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      MIXIN_GUARD_MODE,\n      IDENT_MODE('keyword', 'all\\\\b'),\n      IDENT_MODE('variable', '@\\\\{' + IDENT_RE + '\\\\}'), // otherwise it’s identified as tag\n      {\n        begin: '\\\\b(' + TAGS.join('|') + ')\\\\b',\n        className: 'selector-tag'\n      },\n      IDENT_MODE('selector-tag', INTERP_IDENT_RE + '%?', 0), // '%' for more consistent coloring of @keyframes \"tags\"\n      IDENT_MODE('selector-id', '#' + INTERP_IDENT_RE),\n      IDENT_MODE('selector-class', '\\\\.' + INTERP_IDENT_RE, 0),\n      IDENT_MODE('selector-tag', '&', 0),\n      modes.ATTRIBUTE_SELECTOR_MODE,\n      {\n        className: 'selector-pseudo',\n        begin: ':(' + PSEUDO_CLASSES.join('|') + ')'\n      },\n      {\n        className: 'selector-pseudo',\n        begin: '::(' + PSEUDO_ELEMENTS.join('|') + ')'\n      },\n      {\n        begin: /\\(/,\n        end: /\\)/,\n        relevance: 0,\n        contains: VALUE_WITH_RULESETS\n      }, // argument list of parametric mixins\n      {\n        begin: '!important'\n      } // eat !important after mixin call or it will be colored as tag\n    ]\n  };\n\n  const PSEUDO_SELECTOR_MODE = {\n    begin: IDENT_RE + ':(:)?' + `(${PSEUDO_SELECTORS$1.join('|')})`,\n    returnBegin: true,\n    contains: [ SELECTOR_MODE ]\n  };\n\n  RULES.push(\n    hljs.C_LINE_COMMENT_MODE,\n    hljs.C_BLOCK_COMMENT_MODE,\n    AT_RULE_MODE,\n    VAR_RULE_MODE,\n    PSEUDO_SELECTOR_MODE,\n    RULE_MODE,\n    SELECTOR_MODE\n  );\n\n  return {\n    name: 'Less',\n    case_insensitive: true,\n    illegal: '[=>\\'/<($\"]',\n    contains: RULES\n  };\n}\n\nexport default less;\n","/*\nLanguage: Lua\nDescription: Lua is a powerful, efficient, lightweight, embeddable scripting language.\nAuthor: Andrew Fedorov <dmmdrs@mail.ru>\nCategory: common, scripting\nWebsite: https://www.lua.org\n*/\n\nfunction lua(hljs) {\n  const OPENING_LONG_BRACKET = '\\\\[=*\\\\[';\n  const CLOSING_LONG_BRACKET = '\\\\]=*\\\\]';\n  const LONG_BRACKETS = {\n    begin: OPENING_LONG_BRACKET,\n    end: CLOSING_LONG_BRACKET,\n    contains: ['self']\n  };\n  const COMMENTS = [\n    hljs.COMMENT('--(?!' + OPENING_LONG_BRACKET + ')', '$'),\n    hljs.COMMENT(\n      '--' + OPENING_LONG_BRACKET,\n      CLOSING_LONG_BRACKET,\n      {\n        contains: [LONG_BRACKETS],\n        relevance: 10\n      }\n    )\n  ];\n  return {\n    name: 'Lua',\n    keywords: {\n      $pattern: hljs.UNDERSCORE_IDENT_RE,\n      literal: \"true false nil\",\n      keyword: \"and break do else elseif end for goto if in local not or repeat return then until while\",\n      built_in:\n        // Metatags and globals:\n        '_G _ENV _VERSION __index __newindex __mode __call __metatable __tostring __len ' +\n        '__gc __add __sub __mul __div __mod __pow __concat __unm __eq __lt __le assert ' +\n        // Standard methods and properties:\n        'collectgarbage dofile error getfenv getmetatable ipairs load loadfile loadstring ' +\n        'module next pairs pcall print rawequal rawget rawset require select setfenv ' +\n        'setmetatable tonumber tostring type unpack xpcall arg self ' +\n        // Library methods and properties (one line per library):\n        'coroutine resume yield status wrap create running debug getupvalue ' +\n        'debug sethook getmetatable gethook setmetatable setlocal traceback setfenv getinfo setupvalue getlocal getregistry getfenv ' +\n        'io lines write close flush open output type read stderr stdin input stdout popen tmpfile ' +\n        'math log max acos huge ldexp pi cos tanh pow deg tan cosh sinh random randomseed frexp ceil floor rad abs sqrt modf asin min mod fmod log10 atan2 exp sin atan ' +\n        'os exit setlocale date getenv difftime remove time clock tmpname rename execute package preload loadlib loaded loaders cpath config path seeall ' +\n        'string sub upper len gfind rep find match char dump gmatch reverse byte format gsub lower ' +\n        'table setn insert getn foreachi maxn foreach concat sort remove'\n    },\n    contains: COMMENTS.concat([\n      {\n        className: 'function',\n        beginKeywords: 'function',\n        end: '\\\\)',\n        contains: [\n          hljs.inherit(hljs.TITLE_MODE, {\n            begin: '([_a-zA-Z]\\\\w*\\\\.)*([_a-zA-Z]\\\\w*:)?[_a-zA-Z]\\\\w*'\n          }),\n          {\n            className: 'params',\n            begin: '\\\\(',\n            endsWithParent: true,\n            contains: COMMENTS\n          }\n        ].concat(COMMENTS)\n      },\n      hljs.C_NUMBER_MODE,\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      {\n        className: 'string',\n        begin: OPENING_LONG_BRACKET,\n        end: CLOSING_LONG_BRACKET,\n        contains: [LONG_BRACKETS],\n        relevance: 5\n      }\n    ])\n  };\n}\n\nexport default lua;\n","/*\nLanguage: Makefile\nAuthor: Ivan Sagalaev <maniac@softwaremaniacs.org>\nContributors: Joël Porquet <joel@porquet.org>\nWebsite: https://www.gnu.org/software/make/manual/html_node/Introduction.html\nCategory: common\n*/\n\nfunction makefile(hljs) {\n  /* Variables: simple (eg $(var)) and special (eg $@) */\n  const VARIABLE = {\n    className: 'variable',\n    variants: [\n      {\n        begin: '\\\\$\\\\(' + hljs.UNDERSCORE_IDENT_RE + '\\\\)',\n        contains: [ hljs.BACKSLASH_ESCAPE ]\n      },\n      {\n        begin: /\\$[@%<?\\^\\+\\*]/\n      }\n    ]\n  };\n  /* Quoted string with variables inside */\n  const QUOTE_STRING = {\n    className: 'string',\n    begin: /\"/,\n    end: /\"/,\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      VARIABLE\n    ]\n  };\n  /* Function: $(func arg,...) */\n  const FUNC = {\n    className: 'variable',\n    begin: /\\$\\([\\w-]+\\s/,\n    end: /\\)/,\n    keywords: {\n      built_in:\n        'subst patsubst strip findstring filter filter-out sort ' +\n        'word wordlist firstword lastword dir notdir suffix basename ' +\n        'addsuffix addprefix join wildcard realpath abspath error warning ' +\n        'shell origin flavor foreach if or and call eval file value'\n    },\n    contains: [ VARIABLE ]\n  };\n  /* Variable assignment */\n  const ASSIGNMENT = {\n    begin: '^' + hljs.UNDERSCORE_IDENT_RE + '\\\\s*(?=[:+?]?=)'\n  };\n  /* Meta targets (.PHONY) */\n  const META = {\n    className: 'meta',\n    begin: /^\\.PHONY:/,\n    end: /$/,\n    keywords: {\n      $pattern: /[\\.\\w]+/,\n      keyword: '.PHONY'\n    }\n  };\n  /* Targets */\n  const TARGET = {\n    className: 'section',\n    begin: /^[^\\s]+:/,\n    end: /$/,\n    contains: [ VARIABLE ]\n  };\n  return {\n    name: 'Makefile',\n    aliases: [\n      'mk',\n      'mak',\n      'make',\n    ],\n    keywords: {\n      $pattern: /[\\w-]+/,\n      keyword: 'define endef undefine ifdef ifndef ifeq ifneq else endif ' +\n      'include -include sinclude override export unexport private vpath'\n    },\n    contains: [\n      hljs.HASH_COMMENT_MODE,\n      VARIABLE,\n      QUOTE_STRING,\n      FUNC,\n      ASSIGNMENT,\n      META,\n      TARGET\n    ]\n  };\n}\n\nexport default makefile;\n","/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/*\nLanguage: Markdown\nRequires: xml.js\nAuthor: John Crepezzi <john.crepezzi@gmail.com>\nWebsite: https://daringfireball.net/projects/markdown/\nCategory: common, markup\n*/\n\nfunction markdown(hljs) {\n  const INLINE_HTML = {\n    begin: /<\\/?[A-Za-z_]/,\n    end: '>',\n    subLanguage: 'xml',\n    relevance: 0\n  };\n  const HORIZONTAL_RULE = {\n    begin: '^[-\\\\*]{3,}',\n    end: '$'\n  };\n  const CODE = {\n    className: 'code',\n    variants: [\n      // TODO: fix to allow these to work with sublanguage also\n      {\n        begin: '(`{3,})[^`](.|\\\\n)*?\\\\1`*[ ]*'\n      },\n      {\n        begin: '(~{3,})[^~](.|\\\\n)*?\\\\1~*[ ]*'\n      },\n      // needed to allow markdown as a sublanguage to work\n      {\n        begin: '```',\n        end: '```+[ ]*$'\n      },\n      {\n        begin: '~~~',\n        end: '~~~+[ ]*$'\n      },\n      {\n        begin: '`.+?`'\n      },\n      {\n        begin: '(?=^( {4}|\\\\t))',\n        // use contains to gobble up multiple lines to allow the block to be whatever size\n        // but only have a single open/close tag vs one per line\n        contains: [\n          {\n            begin: '^( {4}|\\\\t)',\n            end: '(\\\\n)$'\n          }\n        ],\n        relevance: 0\n      }\n    ]\n  };\n  const LIST = {\n    className: 'bullet',\n    begin: '^[ \\t]*([*+-]|(\\\\d+\\\\.))(?=\\\\s+)',\n    end: '\\\\s+',\n    excludeEnd: true\n  };\n  const LINK_REFERENCE = {\n    begin: /^\\[[^\\n]+\\]:/,\n    returnBegin: true,\n    contains: [\n      {\n        className: 'symbol',\n        begin: /\\[/,\n        end: /\\]/,\n        excludeBegin: true,\n        excludeEnd: true\n      },\n      {\n        className: 'link',\n        begin: /:\\s*/,\n        end: /$/,\n        excludeBegin: true\n      }\n    ]\n  };\n  const URL_SCHEME = /[A-Za-z][A-Za-z0-9+.-]*/;\n  const LINK = {\n    variants: [\n      // too much like nested array access in so many languages\n      // to have any real relevance\n      {\n        begin: /\\[.+?\\]\\[.*?\\]/,\n        relevance: 0\n      },\n      // popular internet URLs\n      {\n        begin: /\\[.+?\\]\\(((data|javascript|mailto):|(?:http|ftp)s?:\\/\\/).*?\\)/,\n        relevance: 2\n      },\n      {\n        begin: concat(/\\[.+?\\]\\(/, URL_SCHEME, /:\\/\\/.*?\\)/),\n        relevance: 2\n      },\n      // relative urls\n      {\n        begin: /\\[.+?\\]\\([./?&#].*?\\)/,\n        relevance: 1\n      },\n      // whatever else, lower relevance (might not be a link at all)\n      {\n        begin: /\\[.*?\\]\\(.*?\\)/,\n        relevance: 0\n      }\n    ],\n    returnBegin: true,\n    contains: [\n      {\n        // empty strings for alt or link text\n        match: /\\[(?=\\])/\n      },\n      {\n        className: 'string',\n        relevance: 0,\n        begin: '\\\\[',\n        end: '\\\\]',\n        excludeBegin: true,\n        returnEnd: true\n      },\n      {\n        className: 'link',\n        relevance: 0,\n        begin: '\\\\]\\\\(',\n        end: '\\\\)',\n        excludeBegin: true,\n        excludeEnd: true\n      },\n      {\n        className: 'symbol',\n        relevance: 0,\n        begin: '\\\\]\\\\[',\n        end: '\\\\]',\n        excludeBegin: true,\n        excludeEnd: true\n      }\n    ]\n  };\n  const BOLD = {\n    className: 'strong',\n    contains: [], // defined later\n    variants: [\n      {\n        begin: /_{2}/,\n        end: /_{2}/\n      },\n      {\n        begin: /\\*{2}/,\n        end: /\\*{2}/\n      }\n    ]\n  };\n  const ITALIC = {\n    className: 'emphasis',\n    contains: [], // defined later\n    variants: [\n      {\n        begin: /\\*(?!\\*)/,\n        end: /\\*/\n      },\n      {\n        begin: /_(?!_)/,\n        end: /_/,\n        relevance: 0\n      }\n    ]\n  };\n  BOLD.contains.push(ITALIC);\n  ITALIC.contains.push(BOLD);\n\n  let CONTAINABLE = [\n    INLINE_HTML,\n    LINK\n  ];\n\n  BOLD.contains = BOLD.contains.concat(CONTAINABLE);\n  ITALIC.contains = ITALIC.contains.concat(CONTAINABLE);\n\n  CONTAINABLE = CONTAINABLE.concat(BOLD, ITALIC);\n\n  const HEADER = {\n    className: 'section',\n    variants: [\n      {\n        begin: '^#{1,6}',\n        end: '$',\n        contains: CONTAINABLE\n      },\n      {\n        begin: '(?=^.+?\\\\n[=-]{2,}$)',\n        contains: [\n          {\n            begin: '^[=-]*$'\n          },\n          {\n            begin: '^',\n            end: \"\\\\n\",\n            contains: CONTAINABLE\n          }\n        ]\n      }\n    ]\n  };\n\n  const BLOCKQUOTE = {\n    className: 'quote',\n    begin: '^>\\\\s+',\n    contains: CONTAINABLE,\n    end: '$'\n  };\n\n  return {\n    name: 'Markdown',\n    aliases: [\n      'md',\n      'mkdown',\n      'mkd'\n    ],\n    contains: [\n      HEADER,\n      INLINE_HTML,\n      LIST,\n      BOLD,\n      ITALIC,\n      BLOCKQUOTE,\n      CODE,\n      HORIZONTAL_RULE,\n      LINK,\n      LINK_REFERENCE\n    ]\n  };\n}\n\nexport default markdown;\n","/*\nLanguage: Objective-C\nAuthor: Valerii Hiora <valerii.hiora@gmail.com>\nContributors: Angel G. Olloqui <angelgarcia.mail@gmail.com>, Matt Diephouse <matt@diephouse.com>, Andrew Farmer <ahfarmer@gmail.com>, Minh Nguyễn <mxn@1ec5.org>\nWebsite: https://developer.apple.com/documentation/objectivec\nCategory: common\n*/\n\nfunction objectivec(hljs) {\n  const API_CLASS = {\n    className: 'built_in',\n    begin: '\\\\b(AV|CA|CF|CG|CI|CL|CM|CN|CT|MK|MP|MTK|MTL|NS|SCN|SK|UI|WK|XC)\\\\w+'\n  };\n  const IDENTIFIER_RE = /[a-zA-Z@][a-zA-Z0-9_]*/;\n  const KWS = [\n    \"int\",\n    \"float\",\n    \"while\",\n    \"char\",\n    \"export\",\n    \"sizeof\",\n    \"typedef\",\n    \"const\",\n    \"struct\",\n    \"for\",\n    \"union\",\n    \"unsigned\",\n    \"long\",\n    \"volatile\",\n    \"static\",\n    \"bool\",\n    \"mutable\",\n    \"if\",\n    \"do\",\n    \"return\",\n    \"goto\",\n    \"void\",\n    \"enum\",\n    \"else\",\n    \"break\",\n    \"extern\",\n    \"asm\",\n    \"case\",\n    \"short\",\n    \"default\",\n    \"double\",\n    \"register\",\n    \"explicit\",\n    \"signed\",\n    \"typename\",\n    \"this\",\n    \"switch\",\n    \"continue\",\n    \"wchar_t\",\n    \"inline\",\n    \"readonly\",\n    \"assign\",\n    \"readwrite\",\n    \"self\",\n    \"@synchronized\",\n    \"id\",\n    \"typeof\",\n    \"nonatomic\",\n    \"super\",\n    \"unichar\",\n    \"IBOutlet\",\n    \"IBAction\",\n    \"strong\",\n    \"weak\",\n    \"copy\",\n    \"in\",\n    \"out\",\n    \"inout\",\n    \"bycopy\",\n    \"byref\",\n    \"oneway\",\n    \"__strong\",\n    \"__weak\",\n    \"__block\",\n    \"__autoreleasing\",\n    \"@private\",\n    \"@protected\",\n    \"@public\",\n    \"@try\",\n    \"@property\",\n    \"@end\",\n    \"@throw\",\n    \"@catch\",\n    \"@finally\",\n    \"@autoreleasepool\",\n    \"@synthesize\",\n    \"@dynamic\",\n    \"@selector\",\n    \"@optional\",\n    \"@required\",\n    \"@encode\",\n    \"@package\",\n    \"@import\",\n    \"@defs\",\n    \"@compatibility_alias\",\n    \"__bridge\",\n    \"__bridge_transfer\",\n    \"__bridge_retained\",\n    \"__bridge_retain\",\n    \"__covariant\",\n    \"__contravariant\",\n    \"__kindof\",\n    \"_Nonnull\",\n    \"_Nullable\",\n    \"_Null_unspecified\",\n    \"__FUNCTION__\",\n    \"__PRETTY_FUNCTION__\",\n    \"__attribute__\",\n    \"getter\",\n    \"setter\",\n    \"retain\",\n    \"unsafe_unretained\",\n    \"nonnull\",\n    \"nullable\",\n    \"null_unspecified\",\n    \"null_resettable\",\n    \"class\",\n    \"instancetype\",\n    \"NS_DESIGNATED_INITIALIZER\",\n    \"NS_UNAVAILABLE\",\n    \"NS_REQUIRES_SUPER\",\n    \"NS_RETURNS_INNER_POINTER\",\n    \"NS_INLINE\",\n    \"NS_AVAILABLE\",\n    \"NS_DEPRECATED\",\n    \"NS_ENUM\",\n    \"NS_OPTIONS\",\n    \"NS_SWIFT_UNAVAILABLE\",\n    \"NS_ASSUME_NONNULL_BEGIN\",\n    \"NS_ASSUME_NONNULL_END\",\n    \"NS_REFINED_FOR_SWIFT\",\n    \"NS_SWIFT_NAME\",\n    \"NS_SWIFT_NOTHROW\",\n    \"NS_DURING\",\n    \"NS_HANDLER\",\n    \"NS_ENDHANDLER\",\n    \"NS_VALUERETURN\",\n    \"NS_VOIDRETURN\"\n  ];\n  const LITERALS = [\n    \"false\",\n    \"true\",\n    \"FALSE\",\n    \"TRUE\",\n    \"nil\",\n    \"YES\",\n    \"NO\",\n    \"NULL\"\n  ];\n  const BUILT_INS = [\n    \"BOOL\",\n    \"dispatch_once_t\",\n    \"dispatch_queue_t\",\n    \"dispatch_sync\",\n    \"dispatch_async\",\n    \"dispatch_once\"\n  ];\n  const KEYWORDS = {\n    $pattern: IDENTIFIER_RE,\n    keyword: KWS,\n    literal: LITERALS,\n    built_in: BUILT_INS\n  };\n  const CLASS_KEYWORDS = {\n    $pattern: IDENTIFIER_RE,\n    keyword: [\n      \"@interface\",\n      \"@class\",\n      \"@protocol\",\n      \"@implementation\"\n    ]\n  };\n  return {\n    name: 'Objective-C',\n    aliases: [\n      'mm',\n      'objc',\n      'obj-c',\n      'obj-c++',\n      'objective-c++'\n    ],\n    keywords: KEYWORDS,\n    illegal: '</',\n    contains: [\n      API_CLASS,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.C_NUMBER_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.APOS_STRING_MODE,\n      {\n        className: 'string',\n        variants: [\n          {\n            begin: '@\"',\n            end: '\"',\n            illegal: '\\\\n',\n            contains: [ hljs.BACKSLASH_ESCAPE ]\n          }\n        ]\n      },\n      {\n        className: 'meta',\n        begin: /#\\s*[a-z]+\\b/,\n        end: /$/,\n        keywords: {\n          keyword:\n            'if else elif endif define undef warning error line ' +\n            'pragma ifdef ifndef include'\n        },\n        contains: [\n          {\n            begin: /\\\\\\n/,\n            relevance: 0\n          },\n          hljs.inherit(hljs.QUOTE_STRING_MODE, {\n            className: 'string'\n          }),\n          {\n            className: 'string',\n            begin: /<.*?>/,\n            end: /$/,\n            illegal: '\\\\n'\n          },\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE\n        ]\n      },\n      {\n        className: 'class',\n        begin: '(' + CLASS_KEYWORDS.keyword.join('|') + ')\\\\b',\n        end: /(\\{|$)/,\n        excludeEnd: true,\n        keywords: CLASS_KEYWORDS,\n        contains: [ hljs.UNDERSCORE_TITLE_MODE ]\n      },\n      {\n        begin: '\\\\.' + hljs.UNDERSCORE_IDENT_RE,\n        relevance: 0\n      }\n    ]\n  };\n}\n\nexport default objectivec;\n","/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\nfunction stripOptionsFromArgs(args) {\n  const opts = args[args.length - 1];\n\n  if (typeof opts === 'object' && opts.constructor === Object) {\n    args.splice(args.length - 1, 1);\n    return opts;\n  } else {\n    return {};\n  }\n}\n\n/**\n * Any of the passed expresssions may match\n *\n * Creates a huge this | this | that | that match\n * @param {(RegExp | string)[] } args\n * @returns {string}\n */\nfunction either(...args) {\n  const opts = stripOptionsFromArgs(args);\n  const joined = '(' +\n    (opts.capture ? \"\" : \"?:\") +\n    args.map((x) => source(x)).join(\"|\") + \")\";\n  return joined;\n}\n\n/*\nLanguage: Perl\nAuthor: Peter Leonov <gojpeg@yandex.ru>\nWebsite: https://www.perl.org\nCategory: common\n*/\n\n/** @type LanguageFn */\nfunction perl(hljs) {\n  const KEYWORDS = [\n    'abs',\n    'accept',\n    'alarm',\n    'and',\n    'atan2',\n    'bind',\n    'binmode',\n    'bless',\n    'break',\n    'caller',\n    'chdir',\n    'chmod',\n    'chomp',\n    'chop',\n    'chown',\n    'chr',\n    'chroot',\n    'close',\n    'closedir',\n    'connect',\n    'continue',\n    'cos',\n    'crypt',\n    'dbmclose',\n    'dbmopen',\n    'defined',\n    'delete',\n    'die',\n    'do',\n    'dump',\n    'each',\n    'else',\n    'elsif',\n    'endgrent',\n    'endhostent',\n    'endnetent',\n    'endprotoent',\n    'endpwent',\n    'endservent',\n    'eof',\n    'eval',\n    'exec',\n    'exists',\n    'exit',\n    'exp',\n    'fcntl',\n    'fileno',\n    'flock',\n    'for',\n    'foreach',\n    'fork',\n    'format',\n    'formline',\n    'getc',\n    'getgrent',\n    'getgrgid',\n    'getgrnam',\n    'gethostbyaddr',\n    'gethostbyname',\n    'gethostent',\n    'getlogin',\n    'getnetbyaddr',\n    'getnetbyname',\n    'getnetent',\n    'getpeername',\n    'getpgrp',\n    'getpriority',\n    'getprotobyname',\n    'getprotobynumber',\n    'getprotoent',\n    'getpwent',\n    'getpwnam',\n    'getpwuid',\n    'getservbyname',\n    'getservbyport',\n    'getservent',\n    'getsockname',\n    'getsockopt',\n    'given',\n    'glob',\n    'gmtime',\n    'goto',\n    'grep',\n    'gt',\n    'hex',\n    'if',\n    'index',\n    'int',\n    'ioctl',\n    'join',\n    'keys',\n    'kill',\n    'last',\n    'lc',\n    'lcfirst',\n    'length',\n    'link',\n    'listen',\n    'local',\n    'localtime',\n    'log',\n    'lstat',\n    'lt',\n    'ma',\n    'map',\n    'mkdir',\n    'msgctl',\n    'msgget',\n    'msgrcv',\n    'msgsnd',\n    'my',\n    'ne',\n    'next',\n    'no',\n    'not',\n    'oct',\n    'open',\n    'opendir',\n    'or',\n    'ord',\n    'our',\n    'pack',\n    'package',\n    'pipe',\n    'pop',\n    'pos',\n    'print',\n    'printf',\n    'prototype',\n    'push',\n    'q|0',\n    'qq',\n    'quotemeta',\n    'qw',\n    'qx',\n    'rand',\n    'read',\n    'readdir',\n    'readline',\n    'readlink',\n    'readpipe',\n    'recv',\n    'redo',\n    'ref',\n    'rename',\n    'require',\n    'reset',\n    'return',\n    'reverse',\n    'rewinddir',\n    'rindex',\n    'rmdir',\n    'say',\n    'scalar',\n    'seek',\n    'seekdir',\n    'select',\n    'semctl',\n    'semget',\n    'semop',\n    'send',\n    'setgrent',\n    'sethostent',\n    'setnetent',\n    'setpgrp',\n    'setpriority',\n    'setprotoent',\n    'setpwent',\n    'setservent',\n    'setsockopt',\n    'shift',\n    'shmctl',\n    'shmget',\n    'shmread',\n    'shmwrite',\n    'shutdown',\n    'sin',\n    'sleep',\n    'socket',\n    'socketpair',\n    'sort',\n    'splice',\n    'split',\n    'sprintf',\n    'sqrt',\n    'srand',\n    'stat',\n    'state',\n    'study',\n    'sub',\n    'substr',\n    'symlink',\n    'syscall',\n    'sysopen',\n    'sysread',\n    'sysseek',\n    'system',\n    'syswrite',\n    'tell',\n    'telldir',\n    'tie',\n    'tied',\n    'time',\n    'times',\n    'tr',\n    'truncate',\n    'uc',\n    'ucfirst',\n    'umask',\n    'undef',\n    'unless',\n    'unlink',\n    'unpack',\n    'unshift',\n    'untie',\n    'until',\n    'use',\n    'utime',\n    'values',\n    'vec',\n    'wait',\n    'waitpid',\n    'wantarray',\n    'warn',\n    'when',\n    'while',\n    'write',\n    'x|0',\n    'xor',\n    'y|0'\n  ];\n\n  // https://perldoc.perl.org/perlre#Modifiers\n  const REGEX_MODIFIERS = /[dualxmsipngr]{0,12}/; // aa and xx are valid, making max length 12\n  const PERL_KEYWORDS = {\n    $pattern: /[\\w.]+/,\n    keyword: KEYWORDS.join(\" \")\n  };\n  const SUBST = {\n    className: 'subst',\n    begin: '[$@]\\\\{',\n    end: '\\\\}',\n    keywords: PERL_KEYWORDS\n  };\n  const METHOD = {\n    begin: /->\\{/,\n    end: /\\}/\n    // contains defined later\n  };\n  const VAR = {\n    variants: [\n      {\n        begin: /\\$\\d/\n      },\n      {\n        begin: concat(\n          /[$%@](\\^\\w\\b|#\\w+(::\\w+)*|\\{\\w+\\}|\\w+(::\\w*)*)/,\n          // negative look-ahead tries to avoid matching patterns that are not\n          // Perl at all like $ident$, @ident@, etc.\n          `(?![A-Za-z])(?![@$%])`\n        )\n      },\n      {\n        begin: /[$%@][^\\s\\w{]/,\n        relevance: 0\n      }\n    ]\n  };\n  const STRING_CONTAINS = [\n    hljs.BACKSLASH_ESCAPE,\n    SUBST,\n    VAR\n  ];\n  const REGEX_DELIMS = [\n    /!/,\n    /\\//,\n    /\\|/,\n    /\\?/,\n    /'/,\n    /\"/, // valid but infrequent and weird\n    /#/ // valid but infrequent and weird\n  ];\n  /**\n   * @param {string|RegExp} prefix\n   * @param {string|RegExp} open\n   * @param {string|RegExp} close\n   */\n  const PAIRED_DOUBLE_RE = (prefix, open, close = '\\\\1') => {\n    const middle = (close === '\\\\1')\n      ? close\n      : concat(close, open);\n    return concat(\n      concat(\"(?:\", prefix, \")\"),\n      open,\n      /(?:\\\\.|[^\\\\\\/])*?/,\n      middle,\n      /(?:\\\\.|[^\\\\\\/])*?/,\n      close,\n      REGEX_MODIFIERS\n    );\n  };\n  /**\n   * @param {string|RegExp} prefix\n   * @param {string|RegExp} open\n   * @param {string|RegExp} close\n   */\n  const PAIRED_RE = (prefix, open, close) => {\n    return concat(\n      concat(\"(?:\", prefix, \")\"),\n      open,\n      /(?:\\\\.|[^\\\\\\/])*?/,\n      close,\n      REGEX_MODIFIERS\n    );\n  };\n  const PERL_DEFAULT_CONTAINS = [\n    VAR,\n    hljs.HASH_COMMENT_MODE,\n    hljs.COMMENT(\n      /^=\\w/,\n      /=cut/,\n      {\n        endsWithParent: true\n      }\n    ),\n    METHOD,\n    {\n      className: 'string',\n      contains: STRING_CONTAINS,\n      variants: [\n        {\n          begin: 'q[qwxr]?\\\\s*\\\\(',\n          end: '\\\\)',\n          relevance: 5\n        },\n        {\n          begin: 'q[qwxr]?\\\\s*\\\\[',\n          end: '\\\\]',\n          relevance: 5\n        },\n        {\n          begin: 'q[qwxr]?\\\\s*\\\\{',\n          end: '\\\\}',\n          relevance: 5\n        },\n        {\n          begin: 'q[qwxr]?\\\\s*\\\\|',\n          end: '\\\\|',\n          relevance: 5\n        },\n        {\n          begin: 'q[qwxr]?\\\\s*<',\n          end: '>',\n          relevance: 5\n        },\n        {\n          begin: 'qw\\\\s+q',\n          end: 'q',\n          relevance: 5\n        },\n        {\n          begin: '\\'',\n          end: '\\'',\n          contains: [ hljs.BACKSLASH_ESCAPE ]\n        },\n        {\n          begin: '\"',\n          end: '\"'\n        },\n        {\n          begin: '`',\n          end: '`',\n          contains: [ hljs.BACKSLASH_ESCAPE ]\n        },\n        {\n          begin: /\\{\\w+\\}/,\n          relevance: 0\n        },\n        {\n          begin: '-?\\\\w+\\\\s*=>',\n          relevance: 0\n        }\n      ]\n    },\n    {\n      className: 'number',\n      begin: '(\\\\b0[0-7_]+)|(\\\\b0x[0-9a-fA-F_]+)|(\\\\b[1-9][0-9_]*(\\\\.[0-9_]+)?)|[0_]\\\\b',\n      relevance: 0\n    },\n    { // regexp container\n      begin: '(\\\\/\\\\/|' + hljs.RE_STARTERS_RE + '|\\\\b(split|return|print|reverse|grep)\\\\b)\\\\s*',\n      keywords: 'split return print reverse grep',\n      relevance: 0,\n      contains: [\n        hljs.HASH_COMMENT_MODE,\n        {\n          className: 'regexp',\n          variants: [\n            // allow matching common delimiters\n            { begin: PAIRED_DOUBLE_RE(\"s|tr|y\", either(...REGEX_DELIMS, { capture: true })) },\n            // and then paired delmis\n            { begin: PAIRED_DOUBLE_RE(\"s|tr|y\", \"\\\\(\", \"\\\\)\") },\n            { begin: PAIRED_DOUBLE_RE(\"s|tr|y\", \"\\\\[\", \"\\\\]\") },\n            { begin: PAIRED_DOUBLE_RE(\"s|tr|y\", \"\\\\{\", \"\\\\}\") }\n          ],\n          relevance: 2\n        },\n        {\n          className: 'regexp',\n          variants: [\n            {\n              // could be a comment in many languages so do not count\n              // as relevant\n              begin: /(m|qr)\\/\\//,\n              relevance: 0\n            },\n            // prefix is optional with /regex/\n            { begin: PAIRED_RE(\"(?:m|qr)?\", /\\//, /\\//)},\n            // allow matching common delimiters\n            { begin: PAIRED_RE(\"m|qr\", either(...REGEX_DELIMS, { capture: true }), /\\1/)},\n            // allow common paired delmins\n            { begin: PAIRED_RE(\"m|qr\", /\\(/, /\\)/)},\n            { begin: PAIRED_RE(\"m|qr\", /\\[/, /\\]/)},\n            { begin: PAIRED_RE(\"m|qr\", /\\{/, /\\}/)}\n          ]\n        }\n      ]\n    },\n    {\n      className: 'function',\n      beginKeywords: 'sub',\n      end: '(\\\\s*\\\\(.*?\\\\))?[;{]',\n      excludeEnd: true,\n      relevance: 5,\n      contains: [ hljs.TITLE_MODE ]\n    },\n    {\n      begin: '-\\\\w\\\\b',\n      relevance: 0\n    },\n    {\n      begin: \"^__DATA__$\",\n      end: \"^__END__$\",\n      subLanguage: 'mojolicious',\n      contains: [\n        {\n          begin: \"^@@.*\",\n          end: \"$\",\n          className: \"comment\"\n        }\n      ]\n    }\n  ];\n  SUBST.contains = PERL_DEFAULT_CONTAINS;\n  METHOD.contains = PERL_DEFAULT_CONTAINS;\n\n  return {\n    name: 'Perl',\n    aliases: [\n      'pl',\n      'pm'\n    ],\n    keywords: PERL_KEYWORDS,\n    contains: PERL_DEFAULT_CONTAINS\n  };\n}\n\nexport default perl;\n","/*\nLanguage: PHP\nAuthor: Victor Karamzin <Victor.Karamzin@enterra-inc.com>\nContributors: Evgeny Stepanischev <imbolk@gmail.com>, Ivan Sagalaev <maniac@softwaremaniacs.org>\nWebsite: https://www.php.net\nCategory: common\n*/\n\n/**\n * @param {HLJSApi} hljs\n * @returns {LanguageDetail}\n * */\nfunction php(hljs) {\n  const VARIABLE = {\n    className: 'variable',\n    begin: '\\\\$+[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*' +\n      // negative look-ahead tries to avoid matching patterns that are not\n      // Perl at all like $ident$, @ident@, etc.\n      `(?![A-Za-z0-9])(?![$])`\n  };\n  const PREPROCESSOR = {\n    className: 'meta',\n    variants: [\n      { begin: /<\\?php/, relevance: 10 }, // boost for obvious PHP\n      { begin: /<\\?[=]?/ },\n      { begin: /\\?>/ } // end php tag\n    ]\n  };\n  const SUBST = {\n    className: 'subst',\n    variants: [\n      { begin: /\\$\\w+/ },\n      { begin: /\\{\\$/, end: /\\}/ }\n    ]\n  };\n  const SINGLE_QUOTED = hljs.inherit(hljs.APOS_STRING_MODE, {\n    illegal: null,\n  });\n  const DOUBLE_QUOTED = hljs.inherit(hljs.QUOTE_STRING_MODE, {\n    illegal: null,\n    contains: hljs.QUOTE_STRING_MODE.contains.concat(SUBST),\n  });\n  const HEREDOC = hljs.END_SAME_AS_BEGIN({\n    begin: /<<<[ \\t]*(\\w+)\\n/,\n    end: /[ \\t]*(\\w+)\\b/,\n    contains: hljs.QUOTE_STRING_MODE.contains.concat(SUBST),\n  });\n  const STRING = {\n    className: 'string',\n    contains: [hljs.BACKSLASH_ESCAPE, PREPROCESSOR],\n    variants: [\n      hljs.inherit(SINGLE_QUOTED, {\n        begin: \"b'\", end: \"'\",\n      }),\n      hljs.inherit(DOUBLE_QUOTED, {\n        begin: 'b\"', end: '\"',\n      }),\n      DOUBLE_QUOTED,\n      SINGLE_QUOTED,\n      HEREDOC\n    ]\n  };\n  const NUMBER = {\n    className: 'number',\n    variants: [\n      { begin: `\\\\b0b[01]+(?:_[01]+)*\\\\b` }, // Binary w/ underscore support\n      { begin: `\\\\b0o[0-7]+(?:_[0-7]+)*\\\\b` }, // Octals w/ underscore support\n      { begin: `\\\\b0x[\\\\da-f]+(?:_[\\\\da-f]+)*\\\\b` }, // Hex w/ underscore support\n      // Decimals w/ underscore support, with optional fragments and scientific exponent (e) suffix.\n      { begin: `(?:\\\\b\\\\d+(?:_\\\\d+)*(\\\\.(?:\\\\d+(?:_\\\\d+)*))?|\\\\B\\\\.\\\\d+)(?:e[+-]?\\\\d+)?` }\n    ],\n    relevance: 0\n  };\n  const KEYWORDS = {\n    keyword:\n    // Magic constants:\n    // <https://www.php.net/manual/en/language.constants.predefined.php>\n    '__CLASS__ __DIR__ __FILE__ __FUNCTION__ __LINE__ __METHOD__ __NAMESPACE__ __TRAIT__ ' +\n    // Function that look like language construct or language construct that look like function:\n    // List of keywords that may not require parenthesis\n    'die echo exit include include_once print require require_once ' +\n    // These are not language construct (function) but operate on the currently-executing function and can access the current symbol table\n    // 'compact extract func_get_arg func_get_args func_num_args get_called_class get_parent_class ' +\n    // Other keywords:\n    // <https://www.php.net/manual/en/reserved.php>\n    // <https://www.php.net/manual/en/language.types.type-juggling.php>\n    'array abstract and as binary bool boolean break callable case catch class clone const continue declare ' +\n    'default do double else elseif empty enddeclare endfor endforeach endif endswitch endwhile enum eval extends ' +\n    'final finally float for foreach from global goto if implements instanceof insteadof int integer interface ' +\n    'isset iterable list match|0 mixed new object or private protected public real return string switch throw trait ' +\n    'try unset use var void while xor yield',\n    literal: 'false null true',\n    built_in:\n    // Standard PHP library:\n    // <https://www.php.net/manual/en/book.spl.php>\n    'Error|0 ' + // error is too common a name esp since PHP is case in-sensitive\n    'AppendIterator ArgumentCountError ArithmeticError ArrayIterator ArrayObject AssertionError BadFunctionCallException BadMethodCallException CachingIterator CallbackFilterIterator CompileError Countable DirectoryIterator DivisionByZeroError DomainException EmptyIterator ErrorException Exception FilesystemIterator FilterIterator GlobIterator InfiniteIterator InvalidArgumentException IteratorIterator LengthException LimitIterator LogicException MultipleIterator NoRewindIterator OutOfBoundsException OutOfRangeException OuterIterator OverflowException ParentIterator ParseError RangeException RecursiveArrayIterator RecursiveCachingIterator RecursiveCallbackFilterIterator RecursiveDirectoryIterator RecursiveFilterIterator RecursiveIterator RecursiveIteratorIterator RecursiveRegexIterator RecursiveTreeIterator RegexIterator RuntimeException SeekableIterator SplDoublyLinkedList SplFileInfo SplFileObject SplFixedArray SplHeap SplMaxHeap SplMinHeap SplObjectStorage SplObserver SplObserver SplPriorityQueue SplQueue SplStack SplSubject SplSubject SplTempFileObject TypeError UnderflowException UnexpectedValueException UnhandledMatchError ' +\n    // Reserved interfaces:\n    // <https://www.php.net/manual/en/reserved.interfaces.php>\n    'ArrayAccess Closure Generator Iterator IteratorAggregate Serializable Stringable Throwable Traversable WeakReference WeakMap ' +\n    // Reserved classes:\n    // <https://www.php.net/manual/en/reserved.classes.php>\n    'Directory __PHP_Incomplete_Class parent php_user_filter self static stdClass'\n  };\n  return {\n    case_insensitive: true,\n    keywords: KEYWORDS,\n    contains: [\n      hljs.HASH_COMMENT_MODE,\n      hljs.COMMENT('//', '$', {contains: [PREPROCESSOR]}),\n      hljs.COMMENT(\n        '/\\\\*',\n        '\\\\*/',\n        {\n          contains: [\n            {\n              className: 'doctag',\n              begin: '@[A-Za-z]+'\n            }\n          ]\n        }\n      ),\n      hljs.COMMENT(\n        '__halt_compiler.+?;',\n        false,\n        {\n          endsWithParent: true,\n          keywords: '__halt_compiler'\n        }\n      ),\n      PREPROCESSOR,\n      {\n        className: 'keyword', begin: /\\$this\\b/\n      },\n      VARIABLE,\n      {\n        // swallow composed identifiers to avoid parsing them as keywords\n        begin: /(::|->)+[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*/\n      },\n      {\n        className: 'function',\n        relevance: 0,\n        beginKeywords: 'fn function', end: /[;{]/, excludeEnd: true,\n        illegal: '[$%\\\\[]',\n        contains: [\n          {\n            beginKeywords: 'use',\n          },\n          hljs.UNDERSCORE_TITLE_MODE,\n          {\n            begin: '=>', // No markup, just a relevance booster\n            endsParent: true\n          },\n          {\n            className: 'params',\n            begin: '\\\\(', end: '\\\\)',\n            excludeBegin: true,\n            excludeEnd: true,\n            keywords: KEYWORDS,\n            contains: [\n              'self',\n              VARIABLE,\n              hljs.C_BLOCK_COMMENT_MODE,\n              STRING,\n              NUMBER\n            ]\n          }\n        ]\n      },\n      {\n        className: 'class',\n        variants: [\n          { beginKeywords: \"enum\", illegal: /[($\"]/ },\n          { beginKeywords: \"class interface trait\", illegal: /[:($\"]/ }\n        ],\n        relevance: 0,\n        end: /\\{/,\n        excludeEnd: true,\n        contains: [\n          {beginKeywords: 'extends implements'},\n          hljs.UNDERSCORE_TITLE_MODE\n        ]\n      },\n      {\n        beginKeywords: 'namespace',\n        relevance: 0,\n        end: ';',\n        illegal: /[.']/,\n        contains: [hljs.UNDERSCORE_TITLE_MODE]\n      },\n      {\n        beginKeywords: 'use',\n        relevance: 0,\n        end: ';',\n        contains: [hljs.UNDERSCORE_TITLE_MODE]\n      },\n      STRING,\n      NUMBER\n    ]\n  };\n}\n\nexport default php;\n","/*\nLanguage: PHP Template\nRequires: xml.js, php.js\nAuthor: Josh Goebel <hello@joshgoebel.com>\nWebsite: https://www.php.net\nCategory: common\n*/\n\nfunction phpTemplate(hljs) {\n  return {\n    name: \"PHP template\",\n    subLanguage: 'xml',\n    contains: [\n      {\n        begin: /<\\?(php|=)?/,\n        end: /\\?>/,\n        subLanguage: 'php',\n        contains: [\n          // We don't want the php closing tag ?> to close the PHP block when\n          // inside any of the following blocks:\n          {\n            begin: '/\\\\*',\n            end: '\\\\*/',\n            skip: true\n          },\n          {\n            begin: 'b\"',\n            end: '\"',\n            skip: true\n          },\n          {\n            begin: 'b\\'',\n            end: '\\'',\n            skip: true\n          },\n          hljs.inherit(hljs.APOS_STRING_MODE, {\n            illegal: null,\n            className: null,\n            contains: null,\n            skip: true\n          }),\n          hljs.inherit(hljs.QUOTE_STRING_MODE, {\n            illegal: null,\n            className: null,\n            contains: null,\n            skip: true\n          })\n        ]\n      }\n    ]\n  };\n}\n\nexport default phpTemplate;\n","/*\nLanguage: Plain text\nAuthor: Egor Rogov (e.rogov@postgrespro.ru)\nDescription: Plain text without any highlighting.\nCategory: common\n*/\n\nfunction plaintext(hljs) {\n  return {\n    name: 'Plain text',\n    aliases: [\n      'text',\n      'txt'\n    ],\n    disableAutodetect: true\n  };\n}\n\nexport default plaintext;\n","/**\n * @param {string} value\n * @returns {string}\n */\n\n/**\n * performs a shallow merge of multiple objects into one\n *\n * @template T\n * @param {T} original\n * @param {Record<string,any>[]} objects\n * @returns {T} a single new object\n */\nfunction inherit(original, ...objects) {\n  /** @type Record<string,any> */\n  const result = Object.create(null);\n\n  for (const key in original) {\n    result[key] = original[key];\n  }\n  objects.forEach(function(obj) {\n    for (const key in obj) {\n      result[key] = obj[key];\n    }\n  });\n  return /** @type {T} */ (result);\n}\n\n/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction lookahead(re) {\n  return concat('(?=', re, ')');\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\nfunction stripOptionsFromArgs(args) {\n  const opts = args[args.length - 1];\n\n  if (typeof opts === 'object' && opts.constructor === Object) {\n    args.splice(args.length - 1, 1);\n    return opts;\n  } else {\n    return {};\n  }\n}\n\n/**\n * Any of the passed expresssions may match\n *\n * Creates a huge this | this | that | that match\n * @param {(RegExp | string)[] } args\n * @returns {string}\n */\nfunction either(...args) {\n  const opts = stripOptionsFromArgs(args);\n  const joined = '(' +\n    (opts.capture ? \"\" : \"?:\") +\n    args.map((x) => source(x)).join(\"|\") + \")\";\n  return joined;\n}\n\nconst UNDERSCORE_IDENT_RE = '[a-zA-Z_]\\\\w*';\n/**\n * Creates a comment mode\n *\n * @param {string | RegExp} begin\n * @param {string | RegExp} end\n * @param {Mode | {}} [modeOptions]\n * @returns {Partial<Mode>}\n */\nconst COMMENT = function(begin, end, modeOptions = {}) {\n  const mode = inherit(\n    {\n      scope: 'comment',\n      begin,\n      end,\n      contains: []\n    },\n    modeOptions\n  );\n  mode.contains.push({\n    scope: 'doctag',\n    // hack to avoid the space from being included. the space is necessary to\n    // match here to prevent the plain text rule below from gobbling up doctags\n    begin: '[ ]*(?=(TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):)',\n    end: /(TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):/,\n    excludeBegin: true,\n    relevance: 0\n  });\n  const ENGLISH_WORD = either(\n    // list of common 1 and 2 letter words in English\n    \"I\",\n    \"a\",\n    \"is\",\n    \"so\",\n    \"us\",\n    \"to\",\n    \"at\",\n    \"if\",\n    \"in\",\n    \"it\",\n    \"on\",\n    // note: this is not an exhaustive list of contractions, just popular ones\n    /[A-Za-z]+['](d|ve|re|ll|t|s|n)/, // contractions - can't we'd they're let's, etc\n    /[A-Za-z]+[-][a-z]+/, // `no-way`, etc.\n    /[A-Za-z][a-z]{2,}/ // allow capitalized words at beginning of sentences\n  );\n  // looking like plain text, more likely to be a comment\n  mode.contains.push(\n    {\n      // TODO: how to include \", (, ) without breaking grammars that use these for\n      // comment delimiters?\n      // begin: /[ ]+([()\"]?([A-Za-z'-]{3,}|is|a|I|so|us|[tT][oO]|at|if|in|it|on)[.]?[()\":]?([.][ ]|[ ]|\\))){3}/\n      // ---\n\n      // this tries to find sequences of 3 english words in a row (without any\n      // \"programming\" type syntax) this gives us a strong signal that we've\n      // TRULY found a comment - vs perhaps scanning with the wrong language.\n      // It's possible to find something that LOOKS like the start of the\n      // comment - but then if there is no readable text - good chance it is a\n      // false match and not a comment.\n      //\n      // for a visual example please see:\n      // https://github.com/highlightjs/highlight.js/issues/2827\n\n      begin: concat(\n        /[ ]+/, // necessary to prevent us gobbling up doctags like /* @author Bob Mcgill */\n        '(',\n        ENGLISH_WORD,\n        /[.]?[:]?([.][ ]|[ ])/,\n        '){3}') // look for 3 words in a row\n    }\n  );\n  return mode;\n};\nCOMMENT('//', '$');\nCOMMENT('/\\\\*', '\\\\*/');\nCOMMENT('#', '$');\n\n/*\nLanguage: Python\nDescription: Python is an interpreted, object-oriented, high-level programming language with dynamic semantics.\nWebsite: https://www.python.org\nCategory: common\n*/\n\nfunction python(hljs) {\n  const RESERVED_WORDS = [\n    'and',\n    'as',\n    'assert',\n    'async',\n    'await',\n    'break',\n    'class',\n    'continue',\n    'def',\n    'del',\n    'elif',\n    'else',\n    'except',\n    'finally',\n    'for',\n    'from',\n    'global',\n    'if',\n    'import',\n    'in',\n    'is',\n    'lambda',\n    'nonlocal|10',\n    'not',\n    'or',\n    'pass',\n    'raise',\n    'return',\n    'try',\n    'while',\n    'with',\n    'yield'\n  ];\n\n  const BUILT_INS = [\n    '__import__',\n    'abs',\n    'all',\n    'any',\n    'ascii',\n    'bin',\n    'bool',\n    'breakpoint',\n    'bytearray',\n    'bytes',\n    'callable',\n    'chr',\n    'classmethod',\n    'compile',\n    'complex',\n    'delattr',\n    'dict',\n    'dir',\n    'divmod',\n    'enumerate',\n    'eval',\n    'exec',\n    'filter',\n    'float',\n    'format',\n    'frozenset',\n    'getattr',\n    'globals',\n    'hasattr',\n    'hash',\n    'help',\n    'hex',\n    'id',\n    'input',\n    'int',\n    'isinstance',\n    'issubclass',\n    'iter',\n    'len',\n    'list',\n    'locals',\n    'map',\n    'max',\n    'memoryview',\n    'min',\n    'next',\n    'object',\n    'oct',\n    'open',\n    'ord',\n    'pow',\n    'print',\n    'property',\n    'range',\n    'repr',\n    'reversed',\n    'round',\n    'set',\n    'setattr',\n    'slice',\n    'sorted',\n    'staticmethod',\n    'str',\n    'sum',\n    'super',\n    'tuple',\n    'type',\n    'vars',\n    'zip'\n  ];\n\n  const LITERALS = [\n    '__debug__',\n    'Ellipsis',\n    'False',\n    'None',\n    'NotImplemented',\n    'True'\n  ];\n\n  // https://docs.python.org/3/library/typing.html\n  // TODO: Could these be supplemented by a CamelCase matcher in certain\n  // contexts, leaving these remaining only for relevance hinting?\n  const TYPES = [\n    \"Any\",\n    \"Callable\",\n    \"Coroutine\",\n    \"Dict\",\n    \"List\",\n    \"Literal\",\n    \"Generic\",\n    \"Optional\",\n    \"Sequence\",\n    \"Set\",\n    \"Tuple\",\n    \"Type\",\n    \"Union\"\n  ];\n\n  const KEYWORDS = {\n    $pattern: /[A-Za-z]\\w+|__\\w+__/,\n    keyword: RESERVED_WORDS,\n    built_in: BUILT_INS,\n    literal: LITERALS,\n    type: TYPES\n  };\n\n  const PROMPT = {\n    className: 'meta',\n    begin: /^(>>>|\\.\\.\\.) /\n  };\n\n  const SUBST = {\n    className: 'subst',\n    begin: /\\{/,\n    end: /\\}/,\n    keywords: KEYWORDS,\n    illegal: /#/\n  };\n\n  const LITERAL_BRACKET = {\n    begin: /\\{\\{/,\n    relevance: 0\n  };\n\n  const STRING = {\n    className: 'string',\n    contains: [ hljs.BACKSLASH_ESCAPE ],\n    variants: [\n      {\n        begin: /([uU]|[bB]|[rR]|[bB][rR]|[rR][bB])?'''/,\n        end: /'''/,\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          PROMPT\n        ],\n        relevance: 10\n      },\n      {\n        begin: /([uU]|[bB]|[rR]|[bB][rR]|[rR][bB])?\"\"\"/,\n        end: /\"\"\"/,\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          PROMPT\n        ],\n        relevance: 10\n      },\n      {\n        begin: /([fF][rR]|[rR][fF]|[fF])'''/,\n        end: /'''/,\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          PROMPT,\n          LITERAL_BRACKET,\n          SUBST\n        ]\n      },\n      {\n        begin: /([fF][rR]|[rR][fF]|[fF])\"\"\"/,\n        end: /\"\"\"/,\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          PROMPT,\n          LITERAL_BRACKET,\n          SUBST\n        ]\n      },\n      {\n        begin: /([uU]|[rR])'/,\n        end: /'/,\n        relevance: 10\n      },\n      {\n        begin: /([uU]|[rR])\"/,\n        end: /\"/,\n        relevance: 10\n      },\n      {\n        begin: /([bB]|[bB][rR]|[rR][bB])'/,\n        end: /'/\n      },\n      {\n        begin: /([bB]|[bB][rR]|[rR][bB])\"/,\n        end: /\"/\n      },\n      {\n        begin: /([fF][rR]|[rR][fF]|[fF])'/,\n        end: /'/,\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          LITERAL_BRACKET,\n          SUBST\n        ]\n      },\n      {\n        begin: /([fF][rR]|[rR][fF]|[fF])\"/,\n        end: /\"/,\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          LITERAL_BRACKET,\n          SUBST\n        ]\n      },\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE\n    ]\n  };\n\n  // https://docs.python.org/3.9/reference/lexical_analysis.html#numeric-literals\n  const digitpart = '[0-9](_?[0-9])*';\n  const pointfloat = `(\\\\b(${digitpart}))?\\\\.(${digitpart})|\\\\b(${digitpart})\\\\.`;\n  const NUMBER = {\n    className: 'number',\n    relevance: 0,\n    variants: [\n      // exponentfloat, pointfloat\n      // https://docs.python.org/3.9/reference/lexical_analysis.html#floating-point-literals\n      // optionally imaginary\n      // https://docs.python.org/3.9/reference/lexical_analysis.html#imaginary-literals\n      // Note: no leading \\b because floats can start with a decimal point\n      // and we don't want to mishandle e.g. `fn(.5)`,\n      // no trailing \\b for pointfloat because it can end with a decimal point\n      // and we don't want to mishandle e.g. `0..hex()`; this should be safe\n      // because both MUST contain a decimal point and so cannot be confused with\n      // the interior part of an identifier\n      {\n        begin: `(\\\\b(${digitpart})|(${pointfloat}))[eE][+-]?(${digitpart})[jJ]?\\\\b`\n      },\n      {\n        begin: `(${pointfloat})[jJ]?`\n      },\n\n      // decinteger, bininteger, octinteger, hexinteger\n      // https://docs.python.org/3.9/reference/lexical_analysis.html#integer-literals\n      // optionally \"long\" in Python 2\n      // https://docs.python.org/2.7/reference/lexical_analysis.html#integer-and-long-integer-literals\n      // decinteger is optionally imaginary\n      // https://docs.python.org/3.9/reference/lexical_analysis.html#imaginary-literals\n      {\n        begin: '\\\\b([1-9](_?[0-9])*|0+(_?0)*)[lLjJ]?\\\\b'\n      },\n      {\n        begin: '\\\\b0[bB](_?[01])+[lL]?\\\\b'\n      },\n      {\n        begin: '\\\\b0[oO](_?[0-7])+[lL]?\\\\b'\n      },\n      {\n        begin: '\\\\b0[xX](_?[0-9a-fA-F])+[lL]?\\\\b'\n      },\n\n      // imagnumber (digitpart-based)\n      // https://docs.python.org/3.9/reference/lexical_analysis.html#imaginary-literals\n      {\n        begin: `\\\\b(${digitpart})[jJ]\\\\b`\n      }\n    ]\n  };\n  const COMMENT_TYPE = {\n    className: \"comment\",\n    begin: lookahead(/# type:/),\n    end: /$/,\n    keywords: KEYWORDS,\n    contains: [\n      { // prevent keywords from coloring `type`\n        begin: /# type:/\n      },\n      // comment within a datatype comment includes no keywords\n      {\n        begin: /#/,\n        end: /\\b\\B/,\n        endsWithParent: true\n      }\n    ]\n  };\n  const PARAMS = {\n    className: 'params',\n    variants: [\n      // Exclude params in functions without params\n      {\n        className: \"\",\n        begin: /\\(\\s*\\)/,\n        skip: true\n      },\n      {\n        begin: /\\(/,\n        end: /\\)/,\n        excludeBegin: true,\n        excludeEnd: true,\n        keywords: KEYWORDS,\n        contains: [\n          'self',\n          PROMPT,\n          NUMBER,\n          STRING,\n          hljs.HASH_COMMENT_MODE\n        ]\n      }\n    ]\n  };\n  SUBST.contains = [\n    STRING,\n    NUMBER,\n    PROMPT\n  ];\n\n  return {\n    name: 'Python',\n    aliases: [\n      'py',\n      'gyp',\n      'ipython'\n    ],\n    keywords: KEYWORDS,\n    illegal: /(<\\/|->|\\?)|=>/,\n    contains: [\n      PROMPT,\n      NUMBER,\n      {\n        // very common convention\n        begin: /\\bself\\b/\n      },\n      {\n        // eat \"if\" prior to string so that it won't accidentally be\n        // labeled as an f-string\n        beginKeywords: \"if\",\n        relevance: 0\n      },\n      STRING,\n      COMMENT_TYPE,\n      hljs.HASH_COMMENT_MODE,\n      {\n        match: [\n          /def/, /\\s+/,\n          UNDERSCORE_IDENT_RE\n        ],\n        scope: {\n          1: \"keyword\",\n          3: \"title.function\"\n        },\n        contains: [ PARAMS ]\n      },\n      {\n        variants: [\n          {\n            match: [\n              /class/, /\\s+/,\n              UNDERSCORE_IDENT_RE, /\\s*/,\n              /\\(\\s*/, UNDERSCORE_IDENT_RE,/\\s*\\)/\n            ],\n          },\n          {\n            match: [\n              /class/, /\\s+/,\n              UNDERSCORE_IDENT_RE\n            ],\n          }\n        ],\n        scope: {\n          1: \"keyword\",\n          3: \"title.class\",\n          6: \"title.class.inherited\",\n        }\n      },\n      {\n        className: 'meta',\n        begin: /^[\\t ]*@/,\n        end: /(?=#)|$/,\n        contains: [\n          NUMBER,\n          PARAMS,\n          STRING\n        ]\n      }\n    ]\n  };\n}\n\nexport default python;\n","/*\nLanguage: Python REPL\nRequires: python.js\nAuthor: Josh Goebel <hello@joshgoebel.com>\nCategory: common\n*/\n\nfunction pythonRepl(hljs) {\n  return {\n    aliases: [ 'pycon' ],\n    contains: [\n      {\n        className: 'meta',\n        starts: {\n          // a space separates the REPL prefix from the actual code\n          // this is purely for cleaner HTML output\n          end: / |$/,\n          starts: {\n            end: '$',\n            subLanguage: 'python'\n          }\n        },\n        variants: [\n          {\n            begin: /^>>>(?=[ ]|$)/\n          },\n          {\n            begin: /^\\.\\.\\.(?=[ ]|$)/\n          }\n        ]\n      }\n    ]\n  };\n}\n\nexport default pythonRepl;\n","/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction lookahead(re) {\n  return concat('(?=', re, ')');\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\nfunction stripOptionsFromArgs(args) {\n  const opts = args[args.length - 1];\n\n  if (typeof opts === 'object' && opts.constructor === Object) {\n    args.splice(args.length - 1, 1);\n    return opts;\n  } else {\n    return {};\n  }\n}\n\n/**\n * Any of the passed expresssions may match\n *\n * Creates a huge this | this | that | that match\n * @param {(RegExp | string)[] } args\n * @returns {string}\n */\nfunction either(...args) {\n  const opts = stripOptionsFromArgs(args);\n  const joined = '(' +\n    (opts.capture ? \"\" : \"?:\") +\n    args.map((x) => source(x)).join(\"|\") + \")\";\n  return joined;\n}\n\n/*\nLanguage: R\nDescription: R is a free software environment for statistical computing and graphics.\nAuthor: Joe Cheng <joe@rstudio.org>\nContributors: Konrad Rudolph <konrad.rudolph@gmail.com>\nWebsite: https://www.r-project.org\nCategory: common,scientific\n*/\n\n/** @type LanguageFn */\nfunction r(hljs) {\n  // Identifiers in R cannot start with `_`, but they can start with `.` if it\n  // is not immediately followed by a digit.\n  // R also supports quoted identifiers, which are near-arbitrary sequences\n  // delimited by backticks (`…`), which may contain escape sequences. These are\n  // handled in a separate mode. See `test/markup/r/names.txt` for examples.\n  // FIXME: Support Unicode identifiers.\n  const IDENT_RE = /(?:(?:[a-zA-Z]|\\.[._a-zA-Z])[._a-zA-Z0-9]*)|\\.(?!\\d)/;\n  const NUMBER_TYPES_RE = either(\n    // Special case: only hexadecimal binary powers can contain fractions\n    /0[xX][0-9a-fA-F]+\\.[0-9a-fA-F]*[pP][+-]?\\d+i?/,\n    // Hexadecimal numbers without fraction and optional binary power\n    /0[xX][0-9a-fA-F]+(?:[pP][+-]?\\d+)?[Li]?/,\n    // Decimal numbers\n    /(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eE][+-]?\\d+)?[Li]?/\n  );\n  const OPERATORS_RE = /[=!<>:]=|\\|\\||&&|:::?|<-|<<-|->>|->|\\|>|[-+*\\/?!$&|:<=>@^~]|\\*\\*/;\n  const PUNCTUATION_RE = either(\n    /[()]/,\n    /[{}]/,\n    /\\[\\[/,\n    /[[\\]]/,\n    /\\\\/,\n    /,/\n  );\n\n  return {\n    name: 'R',\n\n    keywords: {\n      $pattern: IDENT_RE,\n      keyword:\n        'function if in break next repeat else for while',\n      literal:\n        'NULL NA TRUE FALSE Inf NaN NA_integer_|10 NA_real_|10 ' +\n        'NA_character_|10 NA_complex_|10',\n      built_in:\n        // Builtin constants\n        'LETTERS letters month.abb month.name pi T F ' +\n        // Primitive functions\n        // These are all the functions in `base` that are implemented as a\n        // `.Primitive`, minus those functions that are also keywords.\n        'abs acos acosh all any anyNA Arg as.call as.character ' +\n        'as.complex as.double as.environment as.integer as.logical ' +\n        'as.null.default as.numeric as.raw asin asinh atan atanh attr ' +\n        'attributes baseenv browser c call ceiling class Conj cos cosh ' +\n        'cospi cummax cummin cumprod cumsum digamma dim dimnames ' +\n        'emptyenv exp expression floor forceAndCall gamma gc.time ' +\n        'globalenv Im interactive invisible is.array is.atomic is.call ' +\n        'is.character is.complex is.double is.environment is.expression ' +\n        'is.finite is.function is.infinite is.integer is.language ' +\n        'is.list is.logical is.matrix is.na is.name is.nan is.null ' +\n        'is.numeric is.object is.pairlist is.raw is.recursive is.single ' +\n        'is.symbol lazyLoadDBfetch length lgamma list log max min ' +\n        'missing Mod names nargs nzchar oldClass on.exit pos.to.env ' +\n        'proc.time prod quote range Re rep retracemem return round ' +\n        'seq_along seq_len seq.int sign signif sin sinh sinpi sqrt ' +\n        'standardGeneric substitute sum switch tan tanh tanpi tracemem ' +\n        'trigamma trunc unclass untracemem UseMethod xtfrm',\n    },\n\n    contains: [\n      // Roxygen comments\n      hljs.COMMENT(\n        /#'/,\n        /$/,\n        {\n          contains: [\n            {\n              // Handle `@examples` separately to cause all subsequent code\n              // until the next `@`-tag on its own line to be kept as-is,\n              // preventing highlighting. This code is example R code, so nested\n              // doctags shouldn’t be treated as such. See\n              // `test/markup/r/roxygen.txt` for an example.\n              scope: 'doctag',\n              match: /@examples/,\n              starts: {\n                end: lookahead(either(\n                  // end if another doc comment\n                  /\\n^#'\\s*(?=@[a-zA-Z]+)/,\n                  // or a line with no comment\n                  /\\n^(?!#')/\n                )),\n                endsParent: true\n              }\n            },\n            {\n              // Handle `@param` to highlight the parameter name following\n              // after.\n              scope: 'doctag',\n              begin: '@param',\n              end: /$/,\n              contains: [\n                {\n                  scope: 'variable',\n                  variants: [\n                    { match: IDENT_RE },\n                    { match: /`(?:\\\\.|[^`\\\\])+`/ }\n                  ],\n                  endsParent: true\n                }\n              ]\n            },\n            {\n              scope: 'doctag',\n              match: /@[a-zA-Z]+/\n            },\n            {\n              scope: 'keyword',\n              match: /\\\\[a-zA-Z]+/\n            }\n          ]\n        }\n      ),\n\n      hljs.HASH_COMMENT_MODE,\n\n      {\n        scope: 'string',\n        contains: [hljs.BACKSLASH_ESCAPE],\n        variants: [\n          hljs.END_SAME_AS_BEGIN({ begin: /[rR]\"(-*)\\(/, end: /\\)(-*)\"/ }),\n          hljs.END_SAME_AS_BEGIN({ begin: /[rR]\"(-*)\\{/, end: /\\}(-*)\"/ }),\n          hljs.END_SAME_AS_BEGIN({ begin: /[rR]\"(-*)\\[/, end: /\\](-*)\"/ }),\n          hljs.END_SAME_AS_BEGIN({ begin: /[rR]'(-*)\\(/, end: /\\)(-*)'/ }),\n          hljs.END_SAME_AS_BEGIN({ begin: /[rR]'(-*)\\{/, end: /\\}(-*)'/ }),\n          hljs.END_SAME_AS_BEGIN({ begin: /[rR]'(-*)\\[/, end: /\\](-*)'/ }),\n          {begin: '\"', end: '\"', relevance: 0},\n          {begin: \"'\", end: \"'\", relevance: 0}\n        ],\n      },\n\n      // Matching numbers immediately following punctuation and operators is\n      // tricky since we need to look at the character ahead of a number to\n      // ensure the number is not part of an identifier, and we cannot use\n      // negative look-behind assertions. So instead we explicitly handle all\n      // possible combinations of (operator|punctuation), number.\n      // TODO: replace with negative look-behind when available\n      // { begin: /(?<![a-zA-Z0-9._])0[xX][0-9a-fA-F]+\\.[0-9a-fA-F]*[pP][+-]?\\d+i?/ },\n      // { begin: /(?<![a-zA-Z0-9._])0[xX][0-9a-fA-F]+([pP][+-]?\\d+)?[Li]?/ },\n      // { begin: /(?<![a-zA-Z0-9._])(\\d+(\\.\\d*)?|\\.\\d+)([eE][+-]?\\d+)?[Li]?/ }\n      {\n        relevance: 0,\n        variants: [\n          {\n            scope: {\n              1: 'operator',\n              2: 'number'\n            },\n            match: [\n              OPERATORS_RE,\n              NUMBER_TYPES_RE\n            ]\n          },\n          {\n            scope: {\n              1: 'operator',\n              2: 'number'\n            },\n            match: [\n              /%[^%]*%/,\n              NUMBER_TYPES_RE\n            ]\n          },\n          {\n            scope: {\n              1: 'punctuation',\n              2: 'number'\n            },\n            match: [\n              PUNCTUATION_RE,\n              NUMBER_TYPES_RE\n            ]\n          },\n          {\n            scope: { 2: 'number' },\n            match: [\n              /[^a-zA-Z0-9._]|^/, // not part of an identifier, or start of document\n              NUMBER_TYPES_RE\n            ]\n          }\n        ]\n      },\n\n      // Operators/punctuation when they're not directly followed by numbers\n      {\n        // Relevance boost for the most common assignment form.\n        scope: { 3: 'operator' },\n        match: [\n          IDENT_RE,\n          /\\s+/,\n          /<-/,\n          /\\s+/\n        ]\n      },\n\n      {\n        scope: 'operator',\n        relevance: 0,\n        variants: [\n          { match: OPERATORS_RE },\n          { match: /%[^%]*%/ }\n        ]\n      },\n\n      {\n        scope: 'punctuation',\n        relevance: 0,\n        match: PUNCTUATION_RE\n      },\n\n      {\n        // Escaped identifier\n        begin: '`',\n        end: '`',\n        contains: [\n          { begin: /\\\\./ }\n        ]\n      }\n    ]\n  };\n}\n\nexport default r;\n","/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction lookahead(re) {\n  return concat('(?=', re, ')');\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/*\nLanguage: Ruby\nDescription: Ruby is a dynamic, open source programming language with a focus on simplicity and productivity.\nWebsite: https://www.ruby-lang.org/\nAuthor: Anton Kovalyov <anton@kovalyov.net>\nContributors: Peter Leonov <gojpeg@yandex.ru>, Vasily Polovnyov <vast@whiteants.net>, Loren Segal <lsegal@soen.ca>, Pascal Hurni <phi@ruby-reactive.org>, Cedric Sohrauer <sohrauer@googlemail.com>\nCategory: common\n*/\n\nfunction ruby(hljs) {\n  const RUBY_METHOD_RE = '([a-zA-Z_]\\\\w*[!?=]?|[-+~]@|<<|>>|=~|===?|<=>|[<>]=?|\\\\*\\\\*|[-/+%^&*~`|]|\\\\[\\\\]=?)';\n  const RUBY_KEYWORDS = {\n    keyword:\n      'and then defined module in return redo if BEGIN retry end for self when ' +\n      'next until do begin unless END rescue else break undef not super class case ' +\n      'require yield alias while ensure elsif or include attr_reader attr_writer attr_accessor ' +\n      '__FILE__',\n    built_in: 'proc lambda',\n    literal:\n      'true false nil'\n  };\n  const YARDOCTAG = {\n    className: 'doctag',\n    begin: '@[A-Za-z]+'\n  };\n  const IRB_OBJECT = {\n    begin: '#<',\n    end: '>'\n  };\n  const COMMENT_MODES = [\n    hljs.COMMENT(\n      '#',\n      '$',\n      {\n        contains: [ YARDOCTAG ]\n      }\n    ),\n    hljs.COMMENT(\n      '^=begin',\n      '^=end',\n      {\n        contains: [ YARDOCTAG ],\n        relevance: 10\n      }\n    ),\n    hljs.COMMENT('^__END__', '\\\\n$')\n  ];\n  const SUBST = {\n    className: 'subst',\n    begin: /#\\{/,\n    end: /\\}/,\n    keywords: RUBY_KEYWORDS\n  };\n  const STRING = {\n    className: 'string',\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      SUBST\n    ],\n    variants: [\n      {\n        begin: /'/,\n        end: /'/\n      },\n      {\n        begin: /\"/,\n        end: /\"/\n      },\n      {\n        begin: /`/,\n        end: /`/\n      },\n      {\n        begin: /%[qQwWx]?\\(/,\n        end: /\\)/\n      },\n      {\n        begin: /%[qQwWx]?\\[/,\n        end: /\\]/\n      },\n      {\n        begin: /%[qQwWx]?\\{/,\n        end: /\\}/\n      },\n      {\n        begin: /%[qQwWx]?</,\n        end: />/\n      },\n      {\n        begin: /%[qQwWx]?\\//,\n        end: /\\//\n      },\n      {\n        begin: /%[qQwWx]?%/,\n        end: /%/\n      },\n      {\n        begin: /%[qQwWx]?-/,\n        end: /-/\n      },\n      {\n        begin: /%[qQwWx]?\\|/,\n        end: /\\|/\n      },\n      // in the following expressions, \\B in the beginning suppresses recognition of ?-sequences\n      // where ? is the last character of a preceding identifier, as in: `func?4`\n      {\n        begin: /\\B\\?(\\\\\\d{1,3})/\n      },\n      {\n        begin: /\\B\\?(\\\\x[A-Fa-f0-9]{1,2})/\n      },\n      {\n        begin: /\\B\\?(\\\\u\\{?[A-Fa-f0-9]{1,6}\\}?)/\n      },\n      {\n        begin: /\\B\\?(\\\\M-\\\\C-|\\\\M-\\\\c|\\\\c\\\\M-|\\\\M-|\\\\C-\\\\M-)[\\x20-\\x7e]/\n      },\n      {\n        begin: /\\B\\?\\\\(c|C-)[\\x20-\\x7e]/\n      },\n      {\n        begin: /\\B\\?\\\\?\\S/\n      },\n      // heredocs\n      {\n        // this guard makes sure that we have an entire heredoc and not a false\n        // positive (auto-detect, etc.)\n        begin: concat(\n          /<<[-~]?'?/,\n          lookahead(/(\\w+)(?=\\W)[^\\n]*\\n(?:[^\\n]*\\n)*?\\s*\\1\\b/)\n        ),\n        contains: [\n          hljs.END_SAME_AS_BEGIN({\n            begin: /(\\w+)/,\n            end: /(\\w+)/,\n            contains: [\n              hljs.BACKSLASH_ESCAPE,\n              SUBST\n            ]\n          })\n        ]\n      }\n    ]\n  };\n\n  // Ruby syntax is underdocumented, but this grammar seems to be accurate\n  // as of version 2.7.2 (confirmed with (irb and `Ripper.sexp(...)`)\n  // https://docs.ruby-lang.org/en/2.7.0/doc/syntax/literals_rdoc.html#label-Numbers\n  const decimal = '[1-9](_?[0-9])*|0';\n  const digits = '[0-9](_?[0-9])*';\n  const NUMBER = {\n    className: 'number',\n    relevance: 0,\n    variants: [\n      // decimal integer/float, optionally exponential or rational, optionally imaginary\n      {\n        begin: `\\\\b(${decimal})(\\\\.(${digits}))?([eE][+-]?(${digits})|r)?i?\\\\b`\n      },\n\n      // explicit decimal/binary/octal/hexadecimal integer,\n      // optionally rational and/or imaginary\n      {\n        begin: \"\\\\b0[dD][0-9](_?[0-9])*r?i?\\\\b\"\n      },\n      {\n        begin: \"\\\\b0[bB][0-1](_?[0-1])*r?i?\\\\b\"\n      },\n      {\n        begin: \"\\\\b0[oO][0-7](_?[0-7])*r?i?\\\\b\"\n      },\n      {\n        begin: \"\\\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*r?i?\\\\b\"\n      },\n\n      // 0-prefixed implicit octal integer, optionally rational and/or imaginary\n      {\n        begin: \"\\\\b0(_?[0-7])+r?i?\\\\b\"\n      }\n    ]\n  };\n\n  const PARAMS = {\n    className: 'params',\n    begin: '\\\\(',\n    end: '\\\\)',\n    endsParent: true,\n    keywords: RUBY_KEYWORDS\n  };\n\n  const RUBY_DEFAULT_CONTAINS = [\n    STRING,\n    {\n      className: 'class',\n      beginKeywords: 'class module',\n      end: '$|;',\n      illegal: /=/,\n      contains: [\n        hljs.inherit(hljs.TITLE_MODE, {\n          begin: '[A-Za-z_]\\\\w*(::\\\\w+)*(\\\\?|!)?'\n        }),\n        {\n          begin: '<\\\\s*',\n          contains: [\n            {\n              begin: '(' + hljs.IDENT_RE + '::)?' + hljs.IDENT_RE,\n              // we already get points for <, we don't need poitns\n              // for the name also\n              relevance: 0\n            }\n          ]\n        }\n      ].concat(COMMENT_MODES)\n    },\n    {\n      className: 'function',\n      // def method_name(\n      // def method_name;\n      // def method_name (end of line)\n      begin: concat(/def\\s+/, lookahead(RUBY_METHOD_RE + \"\\\\s*(\\\\(|;|$)\")),\n      relevance: 0, // relevance comes from kewords\n      keywords: \"def\",\n      end: '$|;',\n      contains: [\n        hljs.inherit(hljs.TITLE_MODE, {\n          begin: RUBY_METHOD_RE\n        }),\n        PARAMS\n      ].concat(COMMENT_MODES)\n    },\n    {\n      // swallow namespace qualifiers before symbols\n      begin: hljs.IDENT_RE + '::'\n    },\n    {\n      className: 'symbol',\n      begin: hljs.UNDERSCORE_IDENT_RE + '(!|\\\\?)?:',\n      relevance: 0\n    },\n    {\n      className: 'symbol',\n      begin: ':(?!\\\\s)',\n      contains: [\n        STRING,\n        {\n          begin: RUBY_METHOD_RE\n        }\n      ],\n      relevance: 0\n    },\n    NUMBER,\n    {\n      // negative-look forward attempts to prevent false matches like:\n      // @ident@ or $ident$ that might indicate this is not ruby at all\n      className: \"variable\",\n      begin: '(\\\\$\\\\W)|((\\\\$|@@?)(\\\\w+))(?=[^@$?])' + `(?![A-Za-z])(?![@$?'])`\n    },\n    {\n      className: 'params',\n      begin: /\\|/,\n      end: /\\|/,\n      relevance: 0, // this could be a lot of things (in other languages) other than params\n      keywords: RUBY_KEYWORDS\n    },\n    { // regexp container\n      begin: '(' + hljs.RE_STARTERS_RE + '|unless)\\\\s*',\n      keywords: 'unless',\n      contains: [\n        {\n          className: 'regexp',\n          contains: [\n            hljs.BACKSLASH_ESCAPE,\n            SUBST\n          ],\n          illegal: /\\n/,\n          variants: [\n            {\n              begin: '/',\n              end: '/[a-z]*'\n            },\n            {\n              begin: /%r\\{/,\n              end: /\\}[a-z]*/\n            },\n            {\n              begin: '%r\\\\(',\n              end: '\\\\)[a-z]*'\n            },\n            {\n              begin: '%r!',\n              end: '![a-z]*'\n            },\n            {\n              begin: '%r\\\\[',\n              end: '\\\\][a-z]*'\n            }\n          ]\n        }\n      ].concat(IRB_OBJECT, COMMENT_MODES),\n      relevance: 0\n    }\n  ].concat(IRB_OBJECT, COMMENT_MODES);\n\n  SUBST.contains = RUBY_DEFAULT_CONTAINS;\n  PARAMS.contains = RUBY_DEFAULT_CONTAINS;\n\n  // >>\n  // ?>\n  const SIMPLE_PROMPT = \"[>?]>\";\n  // irb(main):001:0>\n  const DEFAULT_PROMPT = \"[\\\\w#]+\\\\(\\\\w+\\\\):\\\\d+:\\\\d+>\";\n  const RVM_PROMPT = \"(\\\\w+-)?\\\\d+\\\\.\\\\d+\\\\.\\\\d+(p\\\\d+)?[^\\\\d][^>]+>\";\n\n  const IRB_DEFAULT = [\n    {\n      begin: /^\\s*=>/,\n      starts: {\n        end: '$',\n        contains: RUBY_DEFAULT_CONTAINS\n      }\n    },\n    {\n      className: 'meta',\n      begin: '^(' + SIMPLE_PROMPT + \"|\" + DEFAULT_PROMPT + '|' + RVM_PROMPT + ')(?=[ ])',\n      starts: {\n        end: '$',\n        contains: RUBY_DEFAULT_CONTAINS\n      }\n    }\n  ];\n\n  COMMENT_MODES.unshift(IRB_OBJECT);\n\n  return {\n    name: 'Ruby',\n    aliases: [\n      'rb',\n      'gemspec',\n      'podspec',\n      'thor',\n      'irb'\n    ],\n    keywords: RUBY_KEYWORDS,\n    illegal: /\\/\\*/,\n    contains: [\n      hljs.SHEBANG({\n        binary: \"ruby\"\n      })\n    ]\n      .concat(IRB_DEFAULT)\n      .concat(COMMENT_MODES)\n      .concat(RUBY_DEFAULT_CONTAINS)\n  };\n}\n\nexport default ruby;\n","/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction lookahead(re) {\n  return concat('(?=', re, ')');\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/*\nLanguage: Rust\nAuthor: Andrey Vlasovskikh <andrey.vlasovskikh@gmail.com>\nContributors: Roman Shmatov <romanshmatov@gmail.com>, Kasper Andersen <kma_untrusted@protonmail.com>\nWebsite: https://www.rust-lang.org\nCategory: common, system\n*/\n\n/** @type LanguageFn */\nfunction rust(hljs) {\n  const FUNCTION_INVOKE = {\n    className: \"title.function.invoke\",\n    relevance: 0,\n    begin: concat(\n      /\\b/,\n      /(?!let\\b)/,\n      hljs.IDENT_RE,\n      lookahead(/\\s*\\(/))\n  };\n  const NUMBER_SUFFIX = '([ui](8|16|32|64|128|size)|f(32|64))\\?';\n  const KEYWORDS = [\n    \"abstract\",\n    \"as\",\n    \"async\",\n    \"await\",\n    \"become\",\n    \"box\",\n    \"break\",\n    \"const\",\n    \"continue\",\n    \"crate\",\n    \"do\",\n    \"dyn\",\n    \"else\",\n    \"enum\",\n    \"extern\",\n    \"false\",\n    \"final\",\n    \"fn\",\n    \"for\",\n    \"if\",\n    \"impl\",\n    \"in\",\n    \"let\",\n    \"loop\",\n    \"macro\",\n    \"match\",\n    \"mod\",\n    \"move\",\n    \"mut\",\n    \"override\",\n    \"priv\",\n    \"pub\",\n    \"ref\",\n    \"return\",\n    \"self\",\n    \"Self\",\n    \"static\",\n    \"struct\",\n    \"super\",\n    \"trait\",\n    \"true\",\n    \"try\",\n    \"type\",\n    \"typeof\",\n    \"unsafe\",\n    \"unsized\",\n    \"use\",\n    \"virtual\",\n    \"where\",\n    \"while\",\n    \"yield\"\n  ];\n  const LITERALS = [\n    \"true\",\n    \"false\",\n    \"Some\",\n    \"None\",\n    \"Ok\",\n    \"Err\"\n  ];\n  const BUILTINS = [\n    // functions\n    'drop ',\n    // traits\n    \"Copy\",\n    \"Send\",\n    \"Sized\",\n    \"Sync\",\n    \"Drop\",\n    \"Fn\",\n    \"FnMut\",\n    \"FnOnce\",\n    \"ToOwned\",\n    \"Clone\",\n    \"Debug\",\n    \"PartialEq\",\n    \"PartialOrd\",\n    \"Eq\",\n    \"Ord\",\n    \"AsRef\",\n    \"AsMut\",\n    \"Into\",\n    \"From\",\n    \"Default\",\n    \"Iterator\",\n    \"Extend\",\n    \"IntoIterator\",\n    \"DoubleEndedIterator\",\n    \"ExactSizeIterator\",\n    \"SliceConcatExt\",\n    \"ToString\",\n    // macros\n    \"assert!\",\n    \"assert_eq!\",\n    \"bitflags!\",\n    \"bytes!\",\n    \"cfg!\",\n    \"col!\",\n    \"concat!\",\n    \"concat_idents!\",\n    \"debug_assert!\",\n    \"debug_assert_eq!\",\n    \"env!\",\n    \"panic!\",\n    \"file!\",\n    \"format!\",\n    \"format_args!\",\n    \"include_bin!\",\n    \"include_str!\",\n    \"line!\",\n    \"local_data_key!\",\n    \"module_path!\",\n    \"option_env!\",\n    \"print!\",\n    \"println!\",\n    \"select!\",\n    \"stringify!\",\n    \"try!\",\n    \"unimplemented!\",\n    \"unreachable!\",\n    \"vec!\",\n    \"write!\",\n    \"writeln!\",\n    \"macro_rules!\",\n    \"assert_ne!\",\n    \"debug_assert_ne!\"\n  ];\n  const TYPES = [\n    \"i8\",\n    \"i16\",\n    \"i32\",\n    \"i64\",\n    \"i128\",\n    \"isize\",\n    \"u8\",\n    \"u16\",\n    \"u32\",\n    \"u64\",\n    \"u128\",\n    \"usize\",\n    \"f32\",\n    \"f64\",\n    \"str\",\n    \"char\",\n    \"bool\",\n    \"Box\",\n    \"Option\",\n    \"Result\",\n    \"String\",\n    \"Vec\"\n  ];\n  return {\n    name: 'Rust',\n    aliases: [ 'rs' ],\n    keywords: {\n      $pattern: hljs.IDENT_RE + '!?',\n      type: TYPES,\n      keyword: KEYWORDS,\n      literal: LITERALS,\n      built_in: BUILTINS\n    },\n    illegal: '</',\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.COMMENT('/\\\\*', '\\\\*/', {\n        contains: [ 'self' ]\n      }),\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {\n        begin: /b?\"/,\n        illegal: null\n      }),\n      {\n        className: 'string',\n        variants: [\n          {\n            begin: /b?r(#*)\"(.|\\n)*?\"\\1(?!#)/\n          },\n          {\n            begin: /b?'\\\\?(x\\w{2}|u\\w{4}|U\\w{8}|.)'/\n          }\n        ]\n      },\n      {\n        className: 'symbol',\n        begin: /'[a-zA-Z_][a-zA-Z0-9_]*/\n      },\n      {\n        className: 'number',\n        variants: [\n          {\n            begin: '\\\\b0b([01_]+)' + NUMBER_SUFFIX\n          },\n          {\n            begin: '\\\\b0o([0-7_]+)' + NUMBER_SUFFIX\n          },\n          {\n            begin: '\\\\b0x([A-Fa-f0-9_]+)' + NUMBER_SUFFIX\n          },\n          {\n            begin: '\\\\b(\\\\d[\\\\d_]*(\\\\.[0-9_]+)?([eE][+-]?[0-9_]+)?)' +\n                   NUMBER_SUFFIX\n          }\n        ],\n        relevance: 0\n      },\n      {\n        begin: [\n          /fn/,\n          /\\s+/,\n          hljs.UNDERSCORE_IDENT_RE\n        ],\n        className: {\n          1: \"keyword\",\n          3: \"title.function\"\n        }\n      },\n      {\n        className: 'meta',\n        begin: '#!?\\\\[',\n        end: '\\\\]',\n        contains: [\n          {\n            className: 'string',\n            begin: /\"/,\n            end: /\"/\n          }\n        ]\n      },\n      {\n        begin: [\n          /let/, /\\s+/,\n          /(?:mut\\s+)?/,\n          hljs.UNDERSCORE_IDENT_RE\n        ],\n        className: {\n          1: \"keyword\",\n          3: \"keyword\",\n          4: \"variable\"\n        }\n      },\n      // must come before impl/for rule later\n      {\n        begin: [\n          /for/,\n          /\\s+/,\n          hljs.UNDERSCORE_IDENT_RE,\n          /\\s+/,\n          /in/\n        ],\n        className: {\n          1: \"keyword\",\n          3: \"variable\",\n          5: \"keyword\"\n        }\n      },\n      {\n        begin: [\n          /type/,\n          /\\s+/,\n          hljs.UNDERSCORE_IDENT_RE\n        ],\n        className: {\n          1: \"keyword\",\n          3: \"title.class\"\n        }\n      },\n      {\n        begin: [\n          /(?:trait|enum|struct|union|impl|for)/,\n          /\\s+/,\n          hljs.UNDERSCORE_IDENT_RE\n        ],\n        className: {\n          1: \"keyword\",\n          3: \"title.class\"\n        }\n      },\n      {\n        begin: hljs.IDENT_RE + '::',\n        keywords: {\n          keyword: \"Self\",\n          built_in: BUILTINS\n        }\n      },\n      {\n        className: \"punctuation\",\n        begin: '->'\n      },\n      FUNCTION_INVOKE\n    ]\n  };\n}\n\nexport default rust;\n","const MODES = (hljs) => {\n  return {\n    IMPORTANT: {\n      scope: 'meta',\n      begin: '!important'\n    },\n    HEXCOLOR: {\n      scope: 'number',\n      begin: '#([a-fA-F0-9]{6}|[a-fA-F0-9]{3})'\n    },\n    ATTRIBUTE_SELECTOR_MODE: {\n      scope: 'selector-attr',\n      begin: /\\[/,\n      end: /\\]/,\n      illegal: '$',\n      contains: [\n        hljs.APOS_STRING_MODE,\n        hljs.QUOTE_STRING_MODE\n      ]\n    },\n    CSS_NUMBER_MODE: {\n      scope: 'number',\n      begin: hljs.NUMBER_RE + '(' +\n        '%|em|ex|ch|rem' +\n        '|vw|vh|vmin|vmax' +\n        '|cm|mm|in|pt|pc|px' +\n        '|deg|grad|rad|turn' +\n        '|s|ms' +\n        '|Hz|kHz' +\n        '|dpi|dpcm|dppx' +\n        ')?',\n      relevance: 0\n    },\n    CSS_VARIABLE: {\n      className: \"attr\",\n      begin: /--[A-Za-z][A-Za-z0-9_-]*/\n    }\n  };\n};\n\nconst TAGS = [\n  'a',\n  'abbr',\n  'address',\n  'article',\n  'aside',\n  'audio',\n  'b',\n  'blockquote',\n  'body',\n  'button',\n  'canvas',\n  'caption',\n  'cite',\n  'code',\n  'dd',\n  'del',\n  'details',\n  'dfn',\n  'div',\n  'dl',\n  'dt',\n  'em',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'header',\n  'hgroup',\n  'html',\n  'i',\n  'iframe',\n  'img',\n  'input',\n  'ins',\n  'kbd',\n  'label',\n  'legend',\n  'li',\n  'main',\n  'mark',\n  'menu',\n  'nav',\n  'object',\n  'ol',\n  'p',\n  'q',\n  'quote',\n  'samp',\n  'section',\n  'span',\n  'strong',\n  'summary',\n  'sup',\n  'table',\n  'tbody',\n  'td',\n  'textarea',\n  'tfoot',\n  'th',\n  'thead',\n  'time',\n  'tr',\n  'ul',\n  'var',\n  'video'\n];\n\nconst MEDIA_FEATURES = [\n  'any-hover',\n  'any-pointer',\n  'aspect-ratio',\n  'color',\n  'color-gamut',\n  'color-index',\n  'device-aspect-ratio',\n  'device-height',\n  'device-width',\n  'display-mode',\n  'forced-colors',\n  'grid',\n  'height',\n  'hover',\n  'inverted-colors',\n  'monochrome',\n  'orientation',\n  'overflow-block',\n  'overflow-inline',\n  'pointer',\n  'prefers-color-scheme',\n  'prefers-contrast',\n  'prefers-reduced-motion',\n  'prefers-reduced-transparency',\n  'resolution',\n  'scan',\n  'scripting',\n  'update',\n  'width',\n  // TODO: find a better solution?\n  'min-width',\n  'max-width',\n  'min-height',\n  'max-height'\n];\n\n// https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes\nconst PSEUDO_CLASSES = [\n  'active',\n  'any-link',\n  'blank',\n  'checked',\n  'current',\n  'default',\n  'defined',\n  'dir', // dir()\n  'disabled',\n  'drop',\n  'empty',\n  'enabled',\n  'first',\n  'first-child',\n  'first-of-type',\n  'fullscreen',\n  'future',\n  'focus',\n  'focus-visible',\n  'focus-within',\n  'has', // has()\n  'host', // host or host()\n  'host-context', // host-context()\n  'hover',\n  'indeterminate',\n  'in-range',\n  'invalid',\n  'is', // is()\n  'lang', // lang()\n  'last-child',\n  'last-of-type',\n  'left',\n  'link',\n  'local-link',\n  'not', // not()\n  'nth-child', // nth-child()\n  'nth-col', // nth-col()\n  'nth-last-child', // nth-last-child()\n  'nth-last-col', // nth-last-col()\n  'nth-last-of-type', //nth-last-of-type()\n  'nth-of-type', //nth-of-type()\n  'only-child',\n  'only-of-type',\n  'optional',\n  'out-of-range',\n  'past',\n  'placeholder-shown',\n  'read-only',\n  'read-write',\n  'required',\n  'right',\n  'root',\n  'scope',\n  'target',\n  'target-within',\n  'user-invalid',\n  'valid',\n  'visited',\n  'where' // where()\n];\n\n// https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements\nconst PSEUDO_ELEMENTS = [\n  'after',\n  'backdrop',\n  'before',\n  'cue',\n  'cue-region',\n  'first-letter',\n  'first-line',\n  'grammar-error',\n  'marker',\n  'part',\n  'placeholder',\n  'selection',\n  'slotted',\n  'spelling-error'\n];\n\nconst ATTRIBUTES = [\n  'align-content',\n  'align-items',\n  'align-self',\n  'animation',\n  'animation-delay',\n  'animation-direction',\n  'animation-duration',\n  'animation-fill-mode',\n  'animation-iteration-count',\n  'animation-name',\n  'animation-play-state',\n  'animation-timing-function',\n  'auto',\n  'backface-visibility',\n  'background',\n  'background-attachment',\n  'background-clip',\n  'background-color',\n  'background-image',\n  'background-origin',\n  'background-position',\n  'background-repeat',\n  'background-size',\n  'border',\n  'border-bottom',\n  'border-bottom-color',\n  'border-bottom-left-radius',\n  'border-bottom-right-radius',\n  'border-bottom-style',\n  'border-bottom-width',\n  'border-collapse',\n  'border-color',\n  'border-image',\n  'border-image-outset',\n  'border-image-repeat',\n  'border-image-slice',\n  'border-image-source',\n  'border-image-width',\n  'border-left',\n  'border-left-color',\n  'border-left-style',\n  'border-left-width',\n  'border-radius',\n  'border-right',\n  'border-right-color',\n  'border-right-style',\n  'border-right-width',\n  'border-spacing',\n  'border-style',\n  'border-top',\n  'border-top-color',\n  'border-top-left-radius',\n  'border-top-right-radius',\n  'border-top-style',\n  'border-top-width',\n  'border-width',\n  'bottom',\n  'box-decoration-break',\n  'box-shadow',\n  'box-sizing',\n  'break-after',\n  'break-before',\n  'break-inside',\n  'caption-side',\n  'clear',\n  'clip',\n  'clip-path',\n  'color',\n  'column-count',\n  'column-fill',\n  'column-gap',\n  'column-rule',\n  'column-rule-color',\n  'column-rule-style',\n  'column-rule-width',\n  'column-span',\n  'column-width',\n  'columns',\n  'content',\n  'counter-increment',\n  'counter-reset',\n  'cursor',\n  'direction',\n  'display',\n  'empty-cells',\n  'filter',\n  'flex',\n  'flex-basis',\n  'flex-direction',\n  'flex-flow',\n  'flex-grow',\n  'flex-shrink',\n  'flex-wrap',\n  'float',\n  'font',\n  'font-display',\n  'font-family',\n  'font-feature-settings',\n  'font-kerning',\n  'font-language-override',\n  'font-size',\n  'font-size-adjust',\n  'font-smoothing',\n  'font-stretch',\n  'font-style',\n  'font-variant',\n  'font-variant-ligatures',\n  'font-variation-settings',\n  'font-weight',\n  'height',\n  'hyphens',\n  'icon',\n  'image-orientation',\n  'image-rendering',\n  'image-resolution',\n  'ime-mode',\n  'inherit',\n  'initial',\n  'justify-content',\n  'left',\n  'letter-spacing',\n  'line-height',\n  'list-style',\n  'list-style-image',\n  'list-style-position',\n  'list-style-type',\n  'margin',\n  'margin-bottom',\n  'margin-left',\n  'margin-right',\n  'margin-top',\n  'marks',\n  'mask',\n  'max-height',\n  'max-width',\n  'min-height',\n  'min-width',\n  'nav-down',\n  'nav-index',\n  'nav-left',\n  'nav-right',\n  'nav-up',\n  'none',\n  'normal',\n  'object-fit',\n  'object-position',\n  'opacity',\n  'order',\n  'orphans',\n  'outline',\n  'outline-color',\n  'outline-offset',\n  'outline-style',\n  'outline-width',\n  'overflow',\n  'overflow-wrap',\n  'overflow-x',\n  'overflow-y',\n  'padding',\n  'padding-bottom',\n  'padding-left',\n  'padding-right',\n  'padding-top',\n  'page-break-after',\n  'page-break-before',\n  'page-break-inside',\n  'perspective',\n  'perspective-origin',\n  'pointer-events',\n  'position',\n  'quotes',\n  'resize',\n  'right',\n  'src', // @font-face\n  'tab-size',\n  'table-layout',\n  'text-align',\n  'text-align-last',\n  'text-decoration',\n  'text-decoration-color',\n  'text-decoration-line',\n  'text-decoration-style',\n  'text-indent',\n  'text-overflow',\n  'text-rendering',\n  'text-shadow',\n  'text-transform',\n  'text-underline-position',\n  'top',\n  'transform',\n  'transform-origin',\n  'transform-style',\n  'transition',\n  'transition-delay',\n  'transition-duration',\n  'transition-property',\n  'transition-timing-function',\n  'unicode-bidi',\n  'vertical-align',\n  'visibility',\n  'white-space',\n  'widows',\n  'width',\n  'word-break',\n  'word-spacing',\n  'word-wrap',\n  'z-index'\n  // reverse makes sure longer attributes `font-weight` are matched fully\n  // instead of getting false positives on say `font`\n].reverse();\n\n/*\nLanguage: SCSS\nDescription: Scss is an extension of the syntax of CSS.\nAuthor: Kurt Emch <kurt@kurtemch.com>\nWebsite: https://sass-lang.com\nCategory: common, css, web\n*/\n\n/** @type LanguageFn */\nfunction scss(hljs) {\n  const modes = MODES(hljs);\n  const PSEUDO_ELEMENTS$1 = PSEUDO_ELEMENTS;\n  const PSEUDO_CLASSES$1 = PSEUDO_CLASSES;\n\n  const AT_IDENTIFIER = '@[a-z-]+'; // @font-face\n  const AT_MODIFIERS = \"and or not only\";\n  const IDENT_RE = '[a-zA-Z-][a-zA-Z0-9_-]*';\n  const VARIABLE = {\n    className: 'variable',\n    begin: '(\\\\$' + IDENT_RE + ')\\\\b'\n  };\n\n  return {\n    name: 'SCSS',\n    case_insensitive: true,\n    illegal: '[=/|\\']',\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      {\n        className: 'selector-id',\n        begin: '#[A-Za-z0-9_-]+',\n        relevance: 0\n      },\n      {\n        className: 'selector-class',\n        begin: '\\\\.[A-Za-z0-9_-]+',\n        relevance: 0\n      },\n      modes.ATTRIBUTE_SELECTOR_MODE,\n      {\n        className: 'selector-tag',\n        begin: '\\\\b(' + TAGS.join('|') + ')\\\\b',\n        // was there, before, but why?\n        relevance: 0\n      },\n      {\n        className: 'selector-pseudo',\n        begin: ':(' + PSEUDO_CLASSES$1.join('|') + ')'\n      },\n      {\n        className: 'selector-pseudo',\n        begin: '::(' + PSEUDO_ELEMENTS$1.join('|') + ')'\n      },\n      VARIABLE,\n      { // pseudo-selector params\n        begin: /\\(/,\n        end: /\\)/,\n        contains: [ modes.CSS_NUMBER_MODE ]\n      },\n      modes.CSS_VARIABLE,\n      {\n        className: 'attribute',\n        begin: '\\\\b(' + ATTRIBUTES.join('|') + ')\\\\b'\n      },\n      {\n        begin: '\\\\b(whitespace|wait|w-resize|visible|vertical-text|vertical-ideographic|uppercase|upper-roman|upper-alpha|underline|transparent|top|thin|thick|text|text-top|text-bottom|tb-rl|table-header-group|table-footer-group|sw-resize|super|strict|static|square|solid|small-caps|separate|se-resize|scroll|s-resize|rtl|row-resize|ridge|right|repeat|repeat-y|repeat-x|relative|progress|pointer|overline|outside|outset|oblique|nowrap|not-allowed|normal|none|nw-resize|no-repeat|no-drop|newspaper|ne-resize|n-resize|move|middle|medium|ltr|lr-tb|lowercase|lower-roman|lower-alpha|loose|list-item|line|line-through|line-edge|lighter|left|keep-all|justify|italic|inter-word|inter-ideograph|inside|inset|inline|inline-block|inherit|inactive|ideograph-space|ideograph-parenthesis|ideograph-numeric|ideograph-alpha|horizontal|hidden|help|hand|groove|fixed|ellipsis|e-resize|double|dotted|distribute|distribute-space|distribute-letter|distribute-all-lines|disc|disabled|default|decimal|dashed|crosshair|collapse|col-resize|circle|char|center|capitalize|break-word|break-all|bottom|both|bolder|bold|block|bidi-override|below|baseline|auto|always|all-scroll|absolute|table|table-cell)\\\\b'\n      },\n      {\n        begin: ':',\n        end: ';',\n        contains: [\n          VARIABLE,\n          modes.HEXCOLOR,\n          modes.CSS_NUMBER_MODE,\n          hljs.QUOTE_STRING_MODE,\n          hljs.APOS_STRING_MODE,\n          modes.IMPORTANT\n        ]\n      },\n      // matching these here allows us to treat them more like regular CSS\n      // rules so everything between the {} gets regular rule highlighting,\n      // which is what we want for page and font-face\n      {\n        begin: '@(page|font-face)',\n        keywords: {\n          $pattern: AT_IDENTIFIER,\n          keyword: '@page @font-face'\n        }\n      },\n      {\n        begin: '@',\n        end: '[{;]',\n        returnBegin: true,\n        keywords: {\n          $pattern: /[a-z-]+/,\n          keyword: AT_MODIFIERS,\n          attribute: MEDIA_FEATURES.join(\" \")\n        },\n        contains: [\n          {\n            begin: AT_IDENTIFIER,\n            className: \"keyword\"\n          },\n          {\n            begin: /[a-z-]+(?=:)/,\n            className: \"attribute\"\n          },\n          VARIABLE,\n          hljs.QUOTE_STRING_MODE,\n          hljs.APOS_STRING_MODE,\n          modes.HEXCOLOR,\n          modes.CSS_NUMBER_MODE\n        ]\n      }\n    ]\n  };\n}\n\nexport default scss;\n","/*\nLanguage: Shell Session\nRequires: bash.js\nAuthor: TSUYUSATO Kitsune <make.just.on@gmail.com>\nCategory: common\nAudit: 2020\n*/\n\n/** @type LanguageFn */\nfunction shell(hljs) {\n  return {\n    name: 'Shell Session',\n    aliases: [ 'console', 'shellsession' ],\n    contains: [\n      {\n        className: 'meta',\n        // We cannot add \\s (spaces) in the regular expression otherwise it will be too broad and produce unexpected result.\n        // For instance, in the following example, it would match \"echo /path/to/home >\" as a prompt:\n        // echo /path/to/home > t.exe\n        begin: /^\\s{0,3}[/~\\w\\d[\\]()@-]*[>%$#][ ]?/,\n        starts: {\n          end: /[^\\\\](?=\\s*$)/,\n          subLanguage: 'bash'\n        }\n      }\n    ]\n  };\n}\n\nexport default shell;\n","/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\nfunction stripOptionsFromArgs(args) {\n  const opts = args[args.length - 1];\n\n  if (typeof opts === 'object' && opts.constructor === Object) {\n    args.splice(args.length - 1, 1);\n    return opts;\n  } else {\n    return {};\n  }\n}\n\n/**\n * Any of the passed expresssions may match\n *\n * Creates a huge this | this | that | that match\n * @param {(RegExp | string)[] } args\n * @returns {string}\n */\nfunction either(...args) {\n  const opts = stripOptionsFromArgs(args);\n  const joined = '(' +\n    (opts.capture ? \"\" : \"?:\") +\n    args.map((x) => source(x)).join(\"|\") + \")\";\n  return joined;\n}\n\n/*\n Language: SQL\n Website: https://en.wikipedia.org/wiki/SQL\n Category: common, database\n */\n\nfunction sql(hljs) {\n  const COMMENT_MODE = hljs.COMMENT('--', '$');\n  const STRING = {\n    className: 'string',\n    variants: [\n      {\n        begin: /'/,\n        end: /'/,\n        contains: [\n          {begin: /''/ }\n        ]\n      }\n    ]\n  };\n  const QUOTED_IDENTIFIER = {\n    begin: /\"/,\n    end: /\"/,\n    contains: [ { begin: /\"\"/ } ]\n  };\n\n  const LITERALS = [\n    \"true\",\n    \"false\",\n    // Not sure it's correct to call NULL literal, and clauses like IS [NOT] NULL look strange that way.\n    // \"null\",\n    \"unknown\"\n  ];\n\n  const MULTI_WORD_TYPES = [\n    \"double precision\",\n    \"large object\",\n    \"with timezone\",\n    \"without timezone\"\n  ];\n\n  const TYPES = [\n    'bigint',\n    'binary',\n    'blob',\n    'boolean',\n    'char',\n    'character',\n    'clob',\n    'date',\n    'dec',\n    'decfloat',\n    'decimal',\n    'float',\n    'int',\n    'integer',\n    'interval',\n    'nchar',\n    'nclob',\n    'national',\n    'numeric',\n    'real',\n    'row',\n    'smallint',\n    'time',\n    'timestamp',\n    'varchar',\n    'varying', // modifier (character varying)\n    'varbinary'\n  ];\n\n  const NON_RESERVED_WORDS = [\n    \"add\",\n    \"asc\",\n    \"collation\",\n    \"desc\",\n    \"final\",\n    \"first\",\n    \"last\",\n    \"view\"\n  ];\n\n  // https://jakewheat.github.io/sql-overview/sql-2016-foundation-grammar.html#reserved-word\n  const RESERVED_WORDS = [\n    \"abs\",\n    \"acos\",\n    \"all\",\n    \"allocate\",\n    \"alter\",\n    \"and\",\n    \"any\",\n    \"are\",\n    \"array\",\n    \"array_agg\",\n    \"array_max_cardinality\",\n    \"as\",\n    \"asensitive\",\n    \"asin\",\n    \"asymmetric\",\n    \"at\",\n    \"atan\",\n    \"atomic\",\n    \"authorization\",\n    \"avg\",\n    \"begin\",\n    \"begin_frame\",\n    \"begin_partition\",\n    \"between\",\n    \"bigint\",\n    \"binary\",\n    \"blob\",\n    \"boolean\",\n    \"both\",\n    \"by\",\n    \"call\",\n    \"called\",\n    \"cardinality\",\n    \"cascaded\",\n    \"case\",\n    \"cast\",\n    \"ceil\",\n    \"ceiling\",\n    \"char\",\n    \"char_length\",\n    \"character\",\n    \"character_length\",\n    \"check\",\n    \"classifier\",\n    \"clob\",\n    \"close\",\n    \"coalesce\",\n    \"collate\",\n    \"collect\",\n    \"column\",\n    \"commit\",\n    \"condition\",\n    \"connect\",\n    \"constraint\",\n    \"contains\",\n    \"convert\",\n    \"copy\",\n    \"corr\",\n    \"corresponding\",\n    \"cos\",\n    \"cosh\",\n    \"count\",\n    \"covar_pop\",\n    \"covar_samp\",\n    \"create\",\n    \"cross\",\n    \"cube\",\n    \"cume_dist\",\n    \"current\",\n    \"current_catalog\",\n    \"current_date\",\n    \"current_default_transform_group\",\n    \"current_path\",\n    \"current_role\",\n    \"current_row\",\n    \"current_schema\",\n    \"current_time\",\n    \"current_timestamp\",\n    \"current_path\",\n    \"current_role\",\n    \"current_transform_group_for_type\",\n    \"current_user\",\n    \"cursor\",\n    \"cycle\",\n    \"date\",\n    \"day\",\n    \"deallocate\",\n    \"dec\",\n    \"decimal\",\n    \"decfloat\",\n    \"declare\",\n    \"default\",\n    \"define\",\n    \"delete\",\n    \"dense_rank\",\n    \"deref\",\n    \"describe\",\n    \"deterministic\",\n    \"disconnect\",\n    \"distinct\",\n    \"double\",\n    \"drop\",\n    \"dynamic\",\n    \"each\",\n    \"element\",\n    \"else\",\n    \"empty\",\n    \"end\",\n    \"end_frame\",\n    \"end_partition\",\n    \"end-exec\",\n    \"equals\",\n    \"escape\",\n    \"every\",\n    \"except\",\n    \"exec\",\n    \"execute\",\n    \"exists\",\n    \"exp\",\n    \"external\",\n    \"extract\",\n    \"false\",\n    \"fetch\",\n    \"filter\",\n    \"first_value\",\n    \"float\",\n    \"floor\",\n    \"for\",\n    \"foreign\",\n    \"frame_row\",\n    \"free\",\n    \"from\",\n    \"full\",\n    \"function\",\n    \"fusion\",\n    \"get\",\n    \"global\",\n    \"grant\",\n    \"group\",\n    \"grouping\",\n    \"groups\",\n    \"having\",\n    \"hold\",\n    \"hour\",\n    \"identity\",\n    \"in\",\n    \"indicator\",\n    \"initial\",\n    \"inner\",\n    \"inout\",\n    \"insensitive\",\n    \"insert\",\n    \"int\",\n    \"integer\",\n    \"intersect\",\n    \"intersection\",\n    \"interval\",\n    \"into\",\n    \"is\",\n    \"join\",\n    \"json_array\",\n    \"json_arrayagg\",\n    \"json_exists\",\n    \"json_object\",\n    \"json_objectagg\",\n    \"json_query\",\n    \"json_table\",\n    \"json_table_primitive\",\n    \"json_value\",\n    \"lag\",\n    \"language\",\n    \"large\",\n    \"last_value\",\n    \"lateral\",\n    \"lead\",\n    \"leading\",\n    \"left\",\n    \"like\",\n    \"like_regex\",\n    \"listagg\",\n    \"ln\",\n    \"local\",\n    \"localtime\",\n    \"localtimestamp\",\n    \"log\",\n    \"log10\",\n    \"lower\",\n    \"match\",\n    \"match_number\",\n    \"match_recognize\",\n    \"matches\",\n    \"max\",\n    \"member\",\n    \"merge\",\n    \"method\",\n    \"min\",\n    \"minute\",\n    \"mod\",\n    \"modifies\",\n    \"module\",\n    \"month\",\n    \"multiset\",\n    \"national\",\n    \"natural\",\n    \"nchar\",\n    \"nclob\",\n    \"new\",\n    \"no\",\n    \"none\",\n    \"normalize\",\n    \"not\",\n    \"nth_value\",\n    \"ntile\",\n    \"null\",\n    \"nullif\",\n    \"numeric\",\n    \"octet_length\",\n    \"occurrences_regex\",\n    \"of\",\n    \"offset\",\n    \"old\",\n    \"omit\",\n    \"on\",\n    \"one\",\n    \"only\",\n    \"open\",\n    \"or\",\n    \"order\",\n    \"out\",\n    \"outer\",\n    \"over\",\n    \"overlaps\",\n    \"overlay\",\n    \"parameter\",\n    \"partition\",\n    \"pattern\",\n    \"per\",\n    \"percent\",\n    \"percent_rank\",\n    \"percentile_cont\",\n    \"percentile_disc\",\n    \"period\",\n    \"portion\",\n    \"position\",\n    \"position_regex\",\n    \"power\",\n    \"precedes\",\n    \"precision\",\n    \"prepare\",\n    \"primary\",\n    \"procedure\",\n    \"ptf\",\n    \"range\",\n    \"rank\",\n    \"reads\",\n    \"real\",\n    \"recursive\",\n    \"ref\",\n    \"references\",\n    \"referencing\",\n    \"regr_avgx\",\n    \"regr_avgy\",\n    \"regr_count\",\n    \"regr_intercept\",\n    \"regr_r2\",\n    \"regr_slope\",\n    \"regr_sxx\",\n    \"regr_sxy\",\n    \"regr_syy\",\n    \"release\",\n    \"result\",\n    \"return\",\n    \"returns\",\n    \"revoke\",\n    \"right\",\n    \"rollback\",\n    \"rollup\",\n    \"row\",\n    \"row_number\",\n    \"rows\",\n    \"running\",\n    \"savepoint\",\n    \"scope\",\n    \"scroll\",\n    \"search\",\n    \"second\",\n    \"seek\",\n    \"select\",\n    \"sensitive\",\n    \"session_user\",\n    \"set\",\n    \"show\",\n    \"similar\",\n    \"sin\",\n    \"sinh\",\n    \"skip\",\n    \"smallint\",\n    \"some\",\n    \"specific\",\n    \"specifictype\",\n    \"sql\",\n    \"sqlexception\",\n    \"sqlstate\",\n    \"sqlwarning\",\n    \"sqrt\",\n    \"start\",\n    \"static\",\n    \"stddev_pop\",\n    \"stddev_samp\",\n    \"submultiset\",\n    \"subset\",\n    \"substring\",\n    \"substring_regex\",\n    \"succeeds\",\n    \"sum\",\n    \"symmetric\",\n    \"system\",\n    \"system_time\",\n    \"system_user\",\n    \"table\",\n    \"tablesample\",\n    \"tan\",\n    \"tanh\",\n    \"then\",\n    \"time\",\n    \"timestamp\",\n    \"timezone_hour\",\n    \"timezone_minute\",\n    \"to\",\n    \"trailing\",\n    \"translate\",\n    \"translate_regex\",\n    \"translation\",\n    \"treat\",\n    \"trigger\",\n    \"trim\",\n    \"trim_array\",\n    \"true\",\n    \"truncate\",\n    \"uescape\",\n    \"union\",\n    \"unique\",\n    \"unknown\",\n    \"unnest\",\n    \"update\",\n    \"upper\",\n    \"user\",\n    \"using\",\n    \"value\",\n    \"values\",\n    \"value_of\",\n    \"var_pop\",\n    \"var_samp\",\n    \"varbinary\",\n    \"varchar\",\n    \"varying\",\n    \"versioning\",\n    \"when\",\n    \"whenever\",\n    \"where\",\n    \"width_bucket\",\n    \"window\",\n    \"with\",\n    \"within\",\n    \"without\",\n    \"year\",\n  ];\n\n  // these are reserved words we have identified to be functions\n  // and should only be highlighted in a dispatch-like context\n  // ie, array_agg(...), etc.\n  const RESERVED_FUNCTIONS = [\n    \"abs\",\n    \"acos\",\n    \"array_agg\",\n    \"asin\",\n    \"atan\",\n    \"avg\",\n    \"cast\",\n    \"ceil\",\n    \"ceiling\",\n    \"coalesce\",\n    \"corr\",\n    \"cos\",\n    \"cosh\",\n    \"count\",\n    \"covar_pop\",\n    \"covar_samp\",\n    \"cume_dist\",\n    \"dense_rank\",\n    \"deref\",\n    \"element\",\n    \"exp\",\n    \"extract\",\n    \"first_value\",\n    \"floor\",\n    \"json_array\",\n    \"json_arrayagg\",\n    \"json_exists\",\n    \"json_object\",\n    \"json_objectagg\",\n    \"json_query\",\n    \"json_table\",\n    \"json_table_primitive\",\n    \"json_value\",\n    \"lag\",\n    \"last_value\",\n    \"lead\",\n    \"listagg\",\n    \"ln\",\n    \"log\",\n    \"log10\",\n    \"lower\",\n    \"max\",\n    \"min\",\n    \"mod\",\n    \"nth_value\",\n    \"ntile\",\n    \"nullif\",\n    \"percent_rank\",\n    \"percentile_cont\",\n    \"percentile_disc\",\n    \"position\",\n    \"position_regex\",\n    \"power\",\n    \"rank\",\n    \"regr_avgx\",\n    \"regr_avgy\",\n    \"regr_count\",\n    \"regr_intercept\",\n    \"regr_r2\",\n    \"regr_slope\",\n    \"regr_sxx\",\n    \"regr_sxy\",\n    \"regr_syy\",\n    \"row_number\",\n    \"sin\",\n    \"sinh\",\n    \"sqrt\",\n    \"stddev_pop\",\n    \"stddev_samp\",\n    \"substring\",\n    \"substring_regex\",\n    \"sum\",\n    \"tan\",\n    \"tanh\",\n    \"translate\",\n    \"translate_regex\",\n    \"treat\",\n    \"trim\",\n    \"trim_array\",\n    \"unnest\",\n    \"upper\",\n    \"value_of\",\n    \"var_pop\",\n    \"var_samp\",\n    \"width_bucket\",\n  ];\n\n  // these functions can\n  const POSSIBLE_WITHOUT_PARENS = [\n    \"current_catalog\",\n    \"current_date\",\n    \"current_default_transform_group\",\n    \"current_path\",\n    \"current_role\",\n    \"current_schema\",\n    \"current_transform_group_for_type\",\n    \"current_user\",\n    \"session_user\",\n    \"system_time\",\n    \"system_user\",\n    \"current_time\",\n    \"localtime\",\n    \"current_timestamp\",\n    \"localtimestamp\"\n  ];\n\n  // those exist to boost relevance making these very\n  // \"SQL like\" keyword combos worth +1 extra relevance\n  const COMBOS = [\n    \"create table\",\n    \"insert into\",\n    \"primary key\",\n    \"foreign key\",\n    \"not null\",\n    \"alter table\",\n    \"add constraint\",\n    \"grouping sets\",\n    \"on overflow\",\n    \"character set\",\n    \"respect nulls\",\n    \"ignore nulls\",\n    \"nulls first\",\n    \"nulls last\",\n    \"depth first\",\n    \"breadth first\"\n  ];\n\n  const FUNCTIONS = RESERVED_FUNCTIONS;\n\n  const KEYWORDS = [...RESERVED_WORDS, ...NON_RESERVED_WORDS].filter((keyword) => {\n    return !RESERVED_FUNCTIONS.includes(keyword);\n  });\n\n  const VARIABLE = {\n    className: \"variable\",\n    begin: /@[a-z0-9]+/,\n  };\n\n  const OPERATOR = {\n    className: \"operator\",\n    begin: /[-+*/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?/,\n    relevance: 0,\n  };\n\n  const FUNCTION_CALL = {\n    begin: concat(/\\b/, either(...FUNCTIONS), /\\s*\\(/),\n    relevance: 0,\n    keywords: {\n      built_in: FUNCTIONS\n    }\n  };\n\n  // keywords with less than 3 letters are reduced in relevancy\n  function reduceRelevancy(list, {exceptions, when} = {}) {\n    const qualifyFn = when;\n    exceptions = exceptions || [];\n    return list.map((item) => {\n      if (item.match(/\\|\\d+$/) || exceptions.includes(item)) {\n        return item;\n      } else if (qualifyFn(item)) {\n        return `${item}|0`;\n      } else {\n        return item;\n      }\n    });\n  }\n\n  return {\n    name: 'SQL',\n    case_insensitive: true,\n    // does not include {} or HTML tags `</`\n    illegal: /[{}]|<\\//,\n    keywords: {\n      $pattern: /\\b[\\w\\.]+/,\n      keyword:\n        reduceRelevancy(KEYWORDS, { when: (x) => x.length < 3 }),\n      literal: LITERALS,\n      type: TYPES,\n      built_in: POSSIBLE_WITHOUT_PARENS\n    },\n    contains: [\n      {\n        begin: either(...COMBOS),\n        relevance: 0,\n        keywords: {\n          $pattern: /[\\w\\.]+/,\n          keyword: KEYWORDS.concat(COMBOS),\n          literal: LITERALS,\n          type: TYPES\n        },\n      },\n      {\n        className: \"type\",\n        begin: either(...MULTI_WORD_TYPES)\n      },\n      FUNCTION_CALL,\n      VARIABLE,\n      STRING,\n      QUOTED_IDENTIFIER,\n      hljs.C_NUMBER_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      COMMENT_MODE,\n      OPERATOR\n    ]\n  };\n}\n\nexport default sql;\n","/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction lookahead(re) {\n  return concat('(?=', re, ')');\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\nfunction stripOptionsFromArgs(args) {\n  const opts = args[args.length - 1];\n\n  if (typeof opts === 'object' && opts.constructor === Object) {\n    args.splice(args.length - 1, 1);\n    return opts;\n  } else {\n    return {};\n  }\n}\n\n/**\n * Any of the passed expresssions may match\n *\n * Creates a huge this | this | that | that match\n * @param {(RegExp | string)[] } args\n * @returns {string}\n */\nfunction either(...args) {\n  const opts = stripOptionsFromArgs(args);\n  const joined = '(' +\n    (opts.capture ? \"\" : \"?:\") +\n    args.map((x) => source(x)).join(\"|\") + \")\";\n  return joined;\n}\n\nconst keywordWrapper = keyword => concat(\n  /\\b/,\n  keyword,\n  /\\w$/.test(keyword) ? /\\b/ : /\\B/\n);\n\n// Keywords that require a leading dot.\nconst dotKeywords = [\n  'Protocol', // contextual\n  'Type' // contextual\n].map(keywordWrapper);\n\n// Keywords that may have a leading dot.\nconst optionalDotKeywords = [\n  'init',\n  'self'\n].map(keywordWrapper);\n\n// should register as keyword, not type\nconst keywordTypes = [\n  'Any',\n  'Self'\n];\n\n// Regular keywords and literals.\nconst keywords = [\n  // strings below will be fed into the regular `keywords` engine while regex\n  // will result in additional modes being created to scan for those keywords to\n  // avoid conflicts with other rules\n  'actor',\n  'associatedtype',\n  'async',\n  'await',\n  /as\\?/, // operator\n  /as!/, // operator\n  'as', // operator\n  'break',\n  'case',\n  'catch',\n  'class',\n  'continue',\n  'convenience', // contextual\n  'default',\n  'defer',\n  'deinit',\n  'didSet', // contextual\n  'do',\n  'dynamic', // contextual\n  'else',\n  'enum',\n  'extension',\n  'fallthrough',\n  /fileprivate\\(set\\)/,\n  'fileprivate',\n  'final', // contextual\n  'for',\n  'func',\n  'get', // contextual\n  'guard',\n  'if',\n  'import',\n  'indirect', // contextual\n  'infix', // contextual\n  /init\\?/,\n  /init!/,\n  'inout',\n  /internal\\(set\\)/,\n  'internal',\n  'in',\n  'is', // operator\n  'isolated', // contextual\n  'nonisolated', // contextual\n  'lazy', // contextual\n  'let',\n  'mutating', // contextual\n  'nonmutating', // contextual\n  /open\\(set\\)/, // contextual\n  'open', // contextual\n  'operator',\n  'optional', // contextual\n  'override', // contextual\n  'postfix', // contextual\n  'precedencegroup',\n  'prefix', // contextual\n  /private\\(set\\)/,\n  'private',\n  'protocol',\n  /public\\(set\\)/,\n  'public',\n  'repeat',\n  'required', // contextual\n  'rethrows',\n  'return',\n  'set', // contextual\n  'some', // contextual\n  'static',\n  'struct',\n  'subscript',\n  'super',\n  'switch',\n  'throws',\n  'throw',\n  /try\\?/, // operator\n  /try!/, // operator\n  'try', // operator\n  'typealias',\n  /unowned\\(safe\\)/, // contextual\n  /unowned\\(unsafe\\)/, // contextual\n  'unowned', // contextual\n  'var',\n  'weak', // contextual\n  'where',\n  'while',\n  'willSet' // contextual\n];\n\n// NOTE: Contextual keywords are reserved only in specific contexts.\n// Ideally, these should be matched using modes to avoid false positives.\n\n// Literals.\nconst literals = [\n  'false',\n  'nil',\n  'true'\n];\n\n// Keywords used in precedence groups.\nconst precedencegroupKeywords = [\n  'assignment',\n  'associativity',\n  'higherThan',\n  'left',\n  'lowerThan',\n  'none',\n  'right'\n];\n\n// Keywords that start with a number sign (#).\n// #available is handled separately.\nconst numberSignKeywords = [\n  '#colorLiteral',\n  '#column',\n  '#dsohandle',\n  '#else',\n  '#elseif',\n  '#endif',\n  '#error',\n  '#file',\n  '#fileID',\n  '#fileLiteral',\n  '#filePath',\n  '#function',\n  '#if',\n  '#imageLiteral',\n  '#keyPath',\n  '#line',\n  '#selector',\n  '#sourceLocation',\n  '#warn_unqualified_access',\n  '#warning'\n];\n\n// Global functions in the Standard Library.\nconst builtIns = [\n  'abs',\n  'all',\n  'any',\n  'assert',\n  'assertionFailure',\n  'debugPrint',\n  'dump',\n  'fatalError',\n  'getVaList',\n  'isKnownUniquelyReferenced',\n  'max',\n  'min',\n  'numericCast',\n  'pointwiseMax',\n  'pointwiseMin',\n  'precondition',\n  'preconditionFailure',\n  'print',\n  'readLine',\n  'repeatElement',\n  'sequence',\n  'stride',\n  'swap',\n  'swift_unboxFromSwiftValueWithType',\n  'transcode',\n  'type',\n  'unsafeBitCast',\n  'unsafeDowncast',\n  'withExtendedLifetime',\n  'withUnsafeMutablePointer',\n  'withUnsafePointer',\n  'withVaList',\n  'withoutActuallyEscaping',\n  'zip'\n];\n\n// Valid first characters for operators.\nconst operatorHead = either(\n  /[/=\\-+!*%<>&|^~?]/,\n  /[\\u00A1-\\u00A7]/,\n  /[\\u00A9\\u00AB]/,\n  /[\\u00AC\\u00AE]/,\n  /[\\u00B0\\u00B1]/,\n  /[\\u00B6\\u00BB\\u00BF\\u00D7\\u00F7]/,\n  /[\\u2016-\\u2017]/,\n  /[\\u2020-\\u2027]/,\n  /[\\u2030-\\u203E]/,\n  /[\\u2041-\\u2053]/,\n  /[\\u2055-\\u205E]/,\n  /[\\u2190-\\u23FF]/,\n  /[\\u2500-\\u2775]/,\n  /[\\u2794-\\u2BFF]/,\n  /[\\u2E00-\\u2E7F]/,\n  /[\\u3001-\\u3003]/,\n  /[\\u3008-\\u3020]/,\n  /[\\u3030]/\n);\n\n// Valid characters for operators.\nconst operatorCharacter = either(\n  operatorHead,\n  /[\\u0300-\\u036F]/,\n  /[\\u1DC0-\\u1DFF]/,\n  /[\\u20D0-\\u20FF]/,\n  /[\\uFE00-\\uFE0F]/,\n  /[\\uFE20-\\uFE2F]/\n  // TODO: The following characters are also allowed, but the regex isn't supported yet.\n  // /[\\u{E0100}-\\u{E01EF}]/u\n);\n\n// Valid operator.\nconst operator = concat(operatorHead, operatorCharacter, '*');\n\n// Valid first characters for identifiers.\nconst identifierHead = either(\n  /[a-zA-Z_]/,\n  /[\\u00A8\\u00AA\\u00AD\\u00AF\\u00B2-\\u00B5\\u00B7-\\u00BA]/,\n  /[\\u00BC-\\u00BE\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF]/,\n  /[\\u0100-\\u02FF\\u0370-\\u167F\\u1681-\\u180D\\u180F-\\u1DBF]/,\n  /[\\u1E00-\\u1FFF]/,\n  /[\\u200B-\\u200D\\u202A-\\u202E\\u203F-\\u2040\\u2054\\u2060-\\u206F]/,\n  /[\\u2070-\\u20CF\\u2100-\\u218F\\u2460-\\u24FF\\u2776-\\u2793]/,\n  /[\\u2C00-\\u2DFF\\u2E80-\\u2FFF]/,\n  /[\\u3004-\\u3007\\u3021-\\u302F\\u3031-\\u303F\\u3040-\\uD7FF]/,\n  /[\\uF900-\\uFD3D\\uFD40-\\uFDCF\\uFDF0-\\uFE1F\\uFE30-\\uFE44]/,\n  /[\\uFE47-\\uFEFE\\uFF00-\\uFFFD]/ // Should be /[\\uFE47-\\uFFFD]/, but we have to exclude FEFF.\n  // The following characters are also allowed, but the regexes aren't supported yet.\n  // /[\\u{10000}-\\u{1FFFD}\\u{20000-\\u{2FFFD}\\u{30000}-\\u{3FFFD}\\u{40000}-\\u{4FFFD}]/u,\n  // /[\\u{50000}-\\u{5FFFD}\\u{60000-\\u{6FFFD}\\u{70000}-\\u{7FFFD}\\u{80000}-\\u{8FFFD}]/u,\n  // /[\\u{90000}-\\u{9FFFD}\\u{A0000-\\u{AFFFD}\\u{B0000}-\\u{BFFFD}\\u{C0000}-\\u{CFFFD}]/u,\n  // /[\\u{D0000}-\\u{DFFFD}\\u{E0000-\\u{EFFFD}]/u\n);\n\n// Valid characters for identifiers.\nconst identifierCharacter = either(\n  identifierHead,\n  /\\d/,\n  /[\\u0300-\\u036F\\u1DC0-\\u1DFF\\u20D0-\\u20FF\\uFE20-\\uFE2F]/\n);\n\n// Valid identifier.\nconst identifier = concat(identifierHead, identifierCharacter, '*');\n\n// Valid type identifier.\nconst typeIdentifier = concat(/[A-Z]/, identifierCharacter, '*');\n\n// Built-in attributes, which are highlighted as keywords.\n// @available is handled separately.\nconst keywordAttributes = [\n  'autoclosure',\n  concat(/convention\\(/, either('swift', 'block', 'c'), /\\)/),\n  'discardableResult',\n  'dynamicCallable',\n  'dynamicMemberLookup',\n  'escaping',\n  'frozen',\n  'GKInspectable',\n  'IBAction',\n  'IBDesignable',\n  'IBInspectable',\n  'IBOutlet',\n  'IBSegueAction',\n  'inlinable',\n  'main',\n  'nonobjc',\n  'NSApplicationMain',\n  'NSCopying',\n  'NSManaged',\n  concat(/objc\\(/, identifier, /\\)/),\n  'objc',\n  'objcMembers',\n  'propertyWrapper',\n  'requires_stored_property_inits',\n  'resultBuilder',\n  'testable',\n  'UIApplicationMain',\n  'unknown',\n  'usableFromInline'\n];\n\n// Contextual keywords used in @available and #available.\nconst availabilityKeywords = [\n  'iOS',\n  'iOSApplicationExtension',\n  'macOS',\n  'macOSApplicationExtension',\n  'macCatalyst',\n  'macCatalystApplicationExtension',\n  'watchOS',\n  'watchOSApplicationExtension',\n  'tvOS',\n  'tvOSApplicationExtension',\n  'swift'\n];\n\n/*\nLanguage: Swift\nDescription: Swift is a general-purpose programming language built using a modern approach to safety, performance, and software design patterns.\nAuthor: Steven Van Impe <steven.vanimpe@icloud.com>\nContributors: Chris Eidhof <chris@eidhof.nl>, Nate Cook <natecook@gmail.com>, Alexander Lichter <manniL@gmx.net>, Richard Gibson <gibson042@github>\nWebsite: https://swift.org\nCategory: common, system\n*/\n\n/** @type LanguageFn */\nfunction swift(hljs) {\n  const WHITESPACE = {\n    match: /\\s+/,\n    relevance: 0\n  };\n  // https://docs.swift.org/swift-book/ReferenceManual/LexicalStructure.html#ID411\n  const BLOCK_COMMENT = hljs.COMMENT(\n    '/\\\\*',\n    '\\\\*/',\n    {\n      contains: [ 'self' ]\n    }\n  );\n  const COMMENTS = [\n    hljs.C_LINE_COMMENT_MODE,\n    BLOCK_COMMENT\n  ];\n\n  // https://docs.swift.org/swift-book/ReferenceManual/LexicalStructure.html#ID413\n  // https://docs.swift.org/swift-book/ReferenceManual/zzSummaryOfTheGrammar.html\n  const DOT_KEYWORD = {\n    match: [\n      /\\./,\n      either(...dotKeywords, ...optionalDotKeywords)\n    ],\n    className: {\n      2: \"keyword\"\n    }\n  };\n  const KEYWORD_GUARD = {\n    // Consume .keyword to prevent highlighting properties and methods as keywords.\n    match: concat(/\\./, either(...keywords)),\n    relevance: 0\n  };\n  const PLAIN_KEYWORDS = keywords\n    .filter(kw => typeof kw === 'string')\n    .concat([ \"_|0\" ]); // seems common, so 0 relevance\n  const REGEX_KEYWORDS = keywords\n    .filter(kw => typeof kw !== 'string') // find regex\n    .concat(keywordTypes)\n    .map(keywordWrapper);\n  const KEYWORD = {\n    variants: [\n      {\n        className: 'keyword',\n        match: either(...REGEX_KEYWORDS, ...optionalDotKeywords)\n      }\n    ]\n  };\n  // find all the regular keywords\n  const KEYWORDS = {\n    $pattern: either(\n      /\\b\\w+/, // regular keywords\n      /#\\w+/ // number keywords\n    ),\n    keyword: PLAIN_KEYWORDS\n      .concat(numberSignKeywords),\n    literal: literals\n  };\n  const KEYWORD_MODES = [\n    DOT_KEYWORD,\n    KEYWORD_GUARD,\n    KEYWORD\n  ];\n\n  // https://github.com/apple/swift/tree/main/stdlib/public/core\n  const BUILT_IN_GUARD = {\n    // Consume .built_in to prevent highlighting properties and methods.\n    match: concat(/\\./, either(...builtIns)),\n    relevance: 0\n  };\n  const BUILT_IN = {\n    className: 'built_in',\n    match: concat(/\\b/, either(...builtIns), /(?=\\()/)\n  };\n  const BUILT_INS = [\n    BUILT_IN_GUARD,\n    BUILT_IN\n  ];\n\n  // https://docs.swift.org/swift-book/ReferenceManual/LexicalStructure.html#ID418\n  const OPERATOR_GUARD = {\n    // Prevent -> from being highlighting as an operator.\n    match: /->/,\n    relevance: 0\n  };\n  const OPERATOR = {\n    className: 'operator',\n    relevance: 0,\n    variants: [\n      {\n        match: operator\n      },\n      {\n        // dot-operator: only operators that start with a dot are allowed to use dots as\n        // characters (..., ...<, .*, etc). So there rule here is: a dot followed by one or more\n        // characters that may also include dots.\n        match: `\\\\.(\\\\.|${operatorCharacter})+`\n      }\n    ]\n  };\n  const OPERATORS = [\n    OPERATOR_GUARD,\n    OPERATOR\n  ];\n\n  // https://docs.swift.org/swift-book/ReferenceManual/LexicalStructure.html#grammar_numeric-literal\n  // TODO: Update for leading `-` after lookbehind is supported everywhere\n  const decimalDigits = '([0-9]_*)+';\n  const hexDigits = '([0-9a-fA-F]_*)+';\n  const NUMBER = {\n    className: 'number',\n    relevance: 0,\n    variants: [\n      // decimal floating-point-literal (subsumes decimal-literal)\n      {\n        match: `\\\\b(${decimalDigits})(\\\\.(${decimalDigits}))?` + `([eE][+-]?(${decimalDigits}))?\\\\b`\n      },\n      // hexadecimal floating-point-literal (subsumes hexadecimal-literal)\n      {\n        match: `\\\\b0x(${hexDigits})(\\\\.(${hexDigits}))?` + `([pP][+-]?(${decimalDigits}))?\\\\b`\n      },\n      // octal-literal\n      {\n        match: /\\b0o([0-7]_*)+\\b/\n      },\n      // binary-literal\n      {\n        match: /\\b0b([01]_*)+\\b/\n      }\n    ]\n  };\n\n  // https://docs.swift.org/swift-book/ReferenceManual/LexicalStructure.html#grammar_string-literal\n  const ESCAPED_CHARACTER = (rawDelimiter = \"\") => ({\n    className: 'subst',\n    variants: [\n      {\n        match: concat(/\\\\/, rawDelimiter, /[0\\\\tnr\"']/)\n      },\n      {\n        match: concat(/\\\\/, rawDelimiter, /u\\{[0-9a-fA-F]{1,8}\\}/)\n      }\n    ]\n  });\n  const ESCAPED_NEWLINE = (rawDelimiter = \"\") => ({\n    className: 'subst',\n    match: concat(/\\\\/, rawDelimiter, /[\\t ]*(?:[\\r\\n]|\\r\\n)/)\n  });\n  const INTERPOLATION = (rawDelimiter = \"\") => ({\n    className: 'subst',\n    label: \"interpol\",\n    begin: concat(/\\\\/, rawDelimiter, /\\(/),\n    end: /\\)/\n  });\n  const MULTILINE_STRING = (rawDelimiter = \"\") => ({\n    begin: concat(rawDelimiter, /\"\"\"/),\n    end: concat(/\"\"\"/, rawDelimiter),\n    contains: [\n      ESCAPED_CHARACTER(rawDelimiter),\n      ESCAPED_NEWLINE(rawDelimiter),\n      INTERPOLATION(rawDelimiter)\n    ]\n  });\n  const SINGLE_LINE_STRING = (rawDelimiter = \"\") => ({\n    begin: concat(rawDelimiter, /\"/),\n    end: concat(/\"/, rawDelimiter),\n    contains: [\n      ESCAPED_CHARACTER(rawDelimiter),\n      INTERPOLATION(rawDelimiter)\n    ]\n  });\n  const STRING = {\n    className: 'string',\n    variants: [\n      MULTILINE_STRING(),\n      MULTILINE_STRING(\"#\"),\n      MULTILINE_STRING(\"##\"),\n      MULTILINE_STRING(\"###\"),\n      SINGLE_LINE_STRING(),\n      SINGLE_LINE_STRING(\"#\"),\n      SINGLE_LINE_STRING(\"##\"),\n      SINGLE_LINE_STRING(\"###\")\n    ]\n  };\n\n  // https://docs.swift.org/swift-book/ReferenceManual/LexicalStructure.html#ID412\n  const QUOTED_IDENTIFIER = {\n    match: concat(/`/, identifier, /`/)\n  };\n  const IMPLICIT_PARAMETER = {\n    className: 'variable',\n    match: /\\$\\d+/\n  };\n  const PROPERTY_WRAPPER_PROJECTION = {\n    className: 'variable',\n    match: `\\\\$${identifierCharacter}+`\n  };\n  const IDENTIFIERS = [\n    QUOTED_IDENTIFIER,\n    IMPLICIT_PARAMETER,\n    PROPERTY_WRAPPER_PROJECTION\n  ];\n\n  // https://docs.swift.org/swift-book/ReferenceManual/Attributes.html\n  const AVAILABLE_ATTRIBUTE = {\n    match: /(@|#)available/,\n    className: \"keyword\",\n    starts: {\n      contains: [\n        {\n          begin: /\\(/,\n          end: /\\)/,\n          keywords: availabilityKeywords,\n          contains: [\n            ...OPERATORS,\n            NUMBER,\n            STRING\n          ]\n        }\n      ]\n    }\n  };\n  const KEYWORD_ATTRIBUTE = {\n    className: 'keyword',\n    match: concat(/@/, either(...keywordAttributes))\n  };\n  const USER_DEFINED_ATTRIBUTE = {\n    className: 'meta',\n    match: concat(/@/, identifier)\n  };\n  const ATTRIBUTES = [\n    AVAILABLE_ATTRIBUTE,\n    KEYWORD_ATTRIBUTE,\n    USER_DEFINED_ATTRIBUTE\n  ];\n\n  // https://docs.swift.org/swift-book/ReferenceManual/Types.html\n  const TYPE = {\n    match: lookahead(/\\b[A-Z]/),\n    relevance: 0,\n    contains: [\n      { // Common Apple frameworks, for relevance boost\n        className: 'type',\n        match: concat(/(AV|CA|CF|CG|CI|CL|CM|CN|CT|MK|MP|MTK|MTL|NS|SCN|SK|UI|WK|XC)/, identifierCharacter, '+')\n      },\n      { // Type identifier\n        className: 'type',\n        match: typeIdentifier,\n        relevance: 0\n      },\n      { // Optional type\n        match: /[?!]+/,\n        relevance: 0\n      },\n      { // Variadic parameter\n        match: /\\.\\.\\./,\n        relevance: 0\n      },\n      { // Protocol composition\n        match: concat(/\\s+&\\s+/, lookahead(typeIdentifier)),\n        relevance: 0\n      }\n    ]\n  };\n  const GENERIC_ARGUMENTS = {\n    begin: /</,\n    end: />/,\n    keywords: KEYWORDS,\n    contains: [\n      ...COMMENTS,\n      ...KEYWORD_MODES,\n      ...ATTRIBUTES,\n      OPERATOR_GUARD,\n      TYPE\n    ]\n  };\n  TYPE.contains.push(GENERIC_ARGUMENTS);\n\n  // https://docs.swift.org/swift-book/ReferenceManual/Expressions.html#ID552\n  // Prevents element names from being highlighted as keywords.\n  const TUPLE_ELEMENT_NAME = {\n    match: concat(identifier, /\\s*:/),\n    keywords: \"_|0\",\n    relevance: 0\n  };\n  // Matches tuples as well as the parameter list of a function type.\n  const TUPLE = {\n    begin: /\\(/,\n    end: /\\)/,\n    relevance: 0,\n    keywords: KEYWORDS,\n    contains: [\n      'self',\n      TUPLE_ELEMENT_NAME,\n      ...COMMENTS,\n      ...KEYWORD_MODES,\n      ...BUILT_INS,\n      ...OPERATORS,\n      NUMBER,\n      STRING,\n      ...IDENTIFIERS,\n      ...ATTRIBUTES,\n      TYPE\n    ]\n  };\n\n  const GENERIC_PARAMETERS = {\n    begin: /</,\n    end: />/,\n    contains: [\n      ...COMMENTS,\n      TYPE\n    ]\n  };\n  const FUNCTION_PARAMETER_NAME = {\n    begin: either(\n      lookahead(concat(identifier, /\\s*:/)),\n      lookahead(concat(identifier, /\\s+/, identifier, /\\s*:/))\n    ),\n    end: /:/,\n    relevance: 0,\n    contains: [\n      {\n        className: 'keyword',\n        match: /\\b_\\b/\n      },\n      {\n        className: 'params',\n        match: identifier\n      }\n    ]\n  };\n  const FUNCTION_PARAMETERS = {\n    begin: /\\(/,\n    end: /\\)/,\n    keywords: KEYWORDS,\n    contains: [\n      FUNCTION_PARAMETER_NAME,\n      ...COMMENTS,\n      ...KEYWORD_MODES,\n      ...OPERATORS,\n      NUMBER,\n      STRING,\n      ...ATTRIBUTES,\n      TYPE,\n      TUPLE\n    ],\n    endsParent: true,\n    illegal: /[\"']/\n  };\n  // https://docs.swift.org/swift-book/ReferenceManual/Declarations.html#ID362\n  const FUNCTION = {\n    match: [\n      /func/,\n      /\\s+/,\n      either(QUOTED_IDENTIFIER.match, identifier, operator)\n    ],\n    className: {\n      1: \"keyword\",\n      3: \"title.function\"\n    },\n    contains: [\n      GENERIC_PARAMETERS,\n      FUNCTION_PARAMETERS,\n      WHITESPACE\n    ],\n    illegal: [\n      /\\[/,\n      /%/\n    ]\n  };\n\n  // https://docs.swift.org/swift-book/ReferenceManual/Declarations.html#ID375\n  // https://docs.swift.org/swift-book/ReferenceManual/Declarations.html#ID379\n  const INIT_SUBSCRIPT = {\n    match: [\n      /\\b(?:subscript|init[?!]?)/,\n      /\\s*(?=[<(])/,\n    ],\n    className: {\n      1: \"keyword\"\n    },\n    contains: [\n      GENERIC_PARAMETERS,\n      FUNCTION_PARAMETERS,\n      WHITESPACE\n    ],\n    illegal: /\\[|%/\n  };\n  // https://docs.swift.org/swift-book/ReferenceManual/Declarations.html#ID380\n  const OPERATOR_DECLARATION = {\n    match: [\n      /operator/,\n      /\\s+/,\n      operator\n    ],\n    className: {\n      1: \"keyword\",\n      3: \"title\"\n    }\n  };\n\n  // https://docs.swift.org/swift-book/ReferenceManual/Declarations.html#ID550\n  const PRECEDENCEGROUP = {\n    begin: [\n      /precedencegroup/,\n      /\\s+/,\n      typeIdentifier\n    ],\n    className: {\n      1: \"keyword\",\n      3: \"title\"\n    },\n    contains: [ TYPE ],\n    keywords: [\n      ...precedencegroupKeywords,\n      ...literals\n    ],\n    end: /}/\n  };\n\n  // Add supported submodes to string interpolation.\n  for (const variant of STRING.variants) {\n    const interpolation = variant.contains.find(mode => mode.label === \"interpol\");\n    // TODO: Interpolation can contain any expression, so there's room for improvement here.\n    interpolation.keywords = KEYWORDS;\n    const submodes = [\n      ...KEYWORD_MODES,\n      ...BUILT_INS,\n      ...OPERATORS,\n      NUMBER,\n      STRING,\n      ...IDENTIFIERS\n    ];\n    interpolation.contains = [\n      ...submodes,\n      {\n        begin: /\\(/,\n        end: /\\)/,\n        contains: [\n          'self',\n          ...submodes\n        ]\n      }\n    ];\n  }\n\n  return {\n    name: 'Swift',\n    keywords: KEYWORDS,\n    contains: [\n      ...COMMENTS,\n      FUNCTION,\n      INIT_SUBSCRIPT,\n      {\n        beginKeywords: 'struct protocol class extension enum actor',\n        end: '\\\\{',\n        excludeEnd: true,\n        keywords: KEYWORDS,\n        contains: [\n          hljs.inherit(hljs.TITLE_MODE, {\n            className: \"title.class\",\n            begin: /[A-Za-z$_][\\u00C0-\\u02B80-9A-Za-z$_]*/\n          }),\n          ...KEYWORD_MODES\n        ]\n      },\n      OPERATOR_DECLARATION,\n      PRECEDENCEGROUP,\n      {\n        beginKeywords: 'import',\n        end: /$/,\n        contains: [ ...COMMENTS ],\n        relevance: 0\n      },\n      ...KEYWORD_MODES,\n      ...BUILT_INS,\n      ...OPERATORS,\n      NUMBER,\n      STRING,\n      ...IDENTIFIERS,\n      ...ATTRIBUTES,\n      TYPE,\n      TUPLE\n    ]\n  };\n}\n\nexport default swift;\n","const IDENT_RE = '[A-Za-z$_][0-9A-Za-z$_]*';\nconst KEYWORDS = [\n  \"as\", // for exports\n  \"in\",\n  \"of\",\n  \"if\",\n  \"for\",\n  \"while\",\n  \"finally\",\n  \"var\",\n  \"new\",\n  \"function\",\n  \"do\",\n  \"return\",\n  \"void\",\n  \"else\",\n  \"break\",\n  \"catch\",\n  \"instanceof\",\n  \"with\",\n  \"throw\",\n  \"case\",\n  \"default\",\n  \"try\",\n  \"switch\",\n  \"continue\",\n  \"typeof\",\n  \"delete\",\n  \"let\",\n  \"yield\",\n  \"const\",\n  \"class\",\n  // JS handles these with a special rule\n  // \"get\",\n  // \"set\",\n  \"debugger\",\n  \"async\",\n  \"await\",\n  \"static\",\n  \"import\",\n  \"from\",\n  \"export\",\n  \"extends\"\n];\nconst LITERALS = [\n  \"true\",\n  \"false\",\n  \"null\",\n  \"undefined\",\n  \"NaN\",\n  \"Infinity\"\n];\n\nconst TYPES = [\n  \"Intl\",\n  \"DataView\",\n  \"Number\",\n  \"Math\",\n  \"Date\",\n  \"String\",\n  \"RegExp\",\n  \"Object\",\n  \"Function\",\n  \"Boolean\",\n  \"Error\",\n  \"Symbol\",\n  \"Set\",\n  \"Map\",\n  \"WeakSet\",\n  \"WeakMap\",\n  \"Proxy\",\n  \"Reflect\",\n  \"JSON\",\n  \"Promise\",\n  \"Float64Array\",\n  \"Int16Array\",\n  \"Int32Array\",\n  \"Int8Array\",\n  \"Uint16Array\",\n  \"Uint32Array\",\n  \"Float32Array\",\n  \"Array\",\n  \"Uint8Array\",\n  \"Uint8ClampedArray\",\n  \"ArrayBuffer\",\n  \"BigInt64Array\",\n  \"BigUint64Array\",\n  \"BigInt\"\n];\n\nconst ERROR_TYPES = [\n  \"EvalError\",\n  \"InternalError\",\n  \"RangeError\",\n  \"ReferenceError\",\n  \"SyntaxError\",\n  \"TypeError\",\n  \"URIError\"\n];\n\nconst BUILT_IN_GLOBALS = [\n  \"setInterval\",\n  \"setTimeout\",\n  \"clearInterval\",\n  \"clearTimeout\",\n\n  \"require\",\n  \"exports\",\n\n  \"eval\",\n  \"isFinite\",\n  \"isNaN\",\n  \"parseFloat\",\n  \"parseInt\",\n  \"decodeURI\",\n  \"decodeURIComponent\",\n  \"encodeURI\",\n  \"encodeURIComponent\",\n  \"escape\",\n  \"unescape\"\n];\n\nconst BUILT_IN_VARIABLES = [\n  \"arguments\",\n  \"this\",\n  \"super\",\n  \"console\",\n  \"window\",\n  \"document\",\n  \"localStorage\",\n  \"module\",\n  \"global\" // Node.js\n];\n\nconst BUILT_INS = [].concat(\n  BUILT_IN_GLOBALS,\n  TYPES,\n  ERROR_TYPES\n);\n\n/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction lookahead(re) {\n  return concat('(?=', re, ')');\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/*\nLanguage: JavaScript\nDescription: JavaScript (JS) is a lightweight, interpreted, or just-in-time compiled programming language with first-class functions.\nCategory: common, scripting, web\nWebsite: https://developer.mozilla.org/en-US/docs/Web/JavaScript\n*/\n\n/** @type LanguageFn */\nfunction javascript(hljs) {\n  /**\n   * Takes a string like \"<Booger\" and checks to see\n   * if we can find a matching \"</Booger\" later in the\n   * content.\n   * @param {RegExpMatchArray} match\n   * @param {{after:number}} param1\n   */\n  const hasClosingTag = (match, { after }) => {\n    const tag = \"</\" + match[0].slice(1);\n    const pos = match.input.indexOf(tag, after);\n    return pos !== -1;\n  };\n\n  const IDENT_RE$1 = IDENT_RE;\n  const FRAGMENT = {\n    begin: '<>',\n    end: '</>'\n  };\n  const XML_TAG = {\n    begin: /<[A-Za-z0-9\\\\._:-]+/,\n    end: /\\/[A-Za-z0-9\\\\._:-]+>|\\/>/,\n    /**\n     * @param {RegExpMatchArray} match\n     * @param {CallbackResponse} response\n     */\n    isTrulyOpeningTag: (match, response) => {\n      const afterMatchIndex = match[0].length + match.index;\n      const nextChar = match.input[afterMatchIndex];\n      // nested type?\n      // HTML should not include another raw `<` inside a tag\n      // But a type might: `<Array<Array<number>>`, etc.\n      if (nextChar === \"<\") {\n        response.ignoreMatch();\n        return;\n      }\n      // <something>\n      // This is now either a tag or a type.\n      if (nextChar === \">\") {\n        // if we cannot find a matching closing tag, then we\n        // will ignore it\n        if (!hasClosingTag(match, { after: afterMatchIndex })) {\n          response.ignoreMatch();\n        }\n      }\n    }\n  };\n  const KEYWORDS$1 = {\n    $pattern: IDENT_RE,\n    keyword: KEYWORDS,\n    literal: LITERALS,\n    built_in: BUILT_INS,\n    \"variable.language\": BUILT_IN_VARIABLES\n  };\n\n  // https://tc39.es/ecma262/#sec-literals-numeric-literals\n  const decimalDigits = '[0-9](_?[0-9])*';\n  const frac = `\\\\.(${decimalDigits})`;\n  // DecimalIntegerLiteral, including Annex B NonOctalDecimalIntegerLiteral\n  // https://tc39.es/ecma262/#sec-additional-syntax-numeric-literals\n  const decimalInteger = `0|[1-9](_?[0-9])*|0[0-7]*[89][0-9]*`;\n  const NUMBER = {\n    className: 'number',\n    variants: [\n      // DecimalLiteral\n      { begin: `(\\\\b(${decimalInteger})((${frac})|\\\\.)?|(${frac}))` +\n        `[eE][+-]?(${decimalDigits})\\\\b` },\n      { begin: `\\\\b(${decimalInteger})\\\\b((${frac})\\\\b|\\\\.)?|(${frac})\\\\b` },\n\n      // DecimalBigIntegerLiteral\n      { begin: `\\\\b(0|[1-9](_?[0-9])*)n\\\\b` },\n\n      // NonDecimalIntegerLiteral\n      { begin: \"\\\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*n?\\\\b\" },\n      { begin: \"\\\\b0[bB][0-1](_?[0-1])*n?\\\\b\" },\n      { begin: \"\\\\b0[oO][0-7](_?[0-7])*n?\\\\b\" },\n\n      // LegacyOctalIntegerLiteral (does not include underscore separators)\n      // https://tc39.es/ecma262/#sec-additional-syntax-numeric-literals\n      { begin: \"\\\\b0[0-7]+n?\\\\b\" },\n    ],\n    relevance: 0\n  };\n\n  const SUBST = {\n    className: 'subst',\n    begin: '\\\\$\\\\{',\n    end: '\\\\}',\n    keywords: KEYWORDS$1,\n    contains: [] // defined later\n  };\n  const HTML_TEMPLATE = {\n    begin: 'html`',\n    end: '',\n    starts: {\n      end: '`',\n      returnEnd: false,\n      contains: [\n        hljs.BACKSLASH_ESCAPE,\n        SUBST\n      ],\n      subLanguage: 'xml'\n    }\n  };\n  const CSS_TEMPLATE = {\n    begin: 'css`',\n    end: '',\n    starts: {\n      end: '`',\n      returnEnd: false,\n      contains: [\n        hljs.BACKSLASH_ESCAPE,\n        SUBST\n      ],\n      subLanguage: 'css'\n    }\n  };\n  const TEMPLATE_STRING = {\n    className: 'string',\n    begin: '`',\n    end: '`',\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      SUBST\n    ]\n  };\n  const JSDOC_COMMENT = hljs.COMMENT(\n    /\\/\\*\\*(?!\\/)/,\n    '\\\\*/',\n    {\n      relevance: 0,\n      contains: [\n        {\n          begin: '(?=@[A-Za-z]+)',\n          relevance: 0,\n          contains: [\n            {\n              className: 'doctag',\n              begin: '@[A-Za-z]+'\n            },\n            {\n              className: 'type',\n              begin: '\\\\{',\n              end: '\\\\}',\n              excludeEnd: true,\n              excludeBegin: true,\n              relevance: 0\n            },\n            {\n              className: 'variable',\n              begin: IDENT_RE$1 + '(?=\\\\s*(-)|$)',\n              endsParent: true,\n              relevance: 0\n            },\n            // eat spaces (not newlines) so we can find\n            // types or variables\n            {\n              begin: /(?=[^\\n])\\s/,\n              relevance: 0\n            }\n          ]\n        }\n      ]\n    }\n  );\n  const COMMENT = {\n    className: \"comment\",\n    variants: [\n      JSDOC_COMMENT,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.C_LINE_COMMENT_MODE\n    ]\n  };\n  const SUBST_INTERNALS = [\n    hljs.APOS_STRING_MODE,\n    hljs.QUOTE_STRING_MODE,\n    HTML_TEMPLATE,\n    CSS_TEMPLATE,\n    TEMPLATE_STRING,\n    NUMBER,\n    hljs.REGEXP_MODE\n  ];\n  SUBST.contains = SUBST_INTERNALS\n    .concat({\n      // we need to pair up {} inside our subst to prevent\n      // it from ending too early by matching another }\n      begin: /\\{/,\n      end: /\\}/,\n      keywords: KEYWORDS$1,\n      contains: [\n        \"self\"\n      ].concat(SUBST_INTERNALS)\n    });\n  const SUBST_AND_COMMENTS = [].concat(COMMENT, SUBST.contains);\n  const PARAMS_CONTAINS = SUBST_AND_COMMENTS.concat([\n    // eat recursive parens in sub expressions\n    {\n      begin: /\\(/,\n      end: /\\)/,\n      keywords: KEYWORDS$1,\n      contains: [\"self\"].concat(SUBST_AND_COMMENTS)\n    }\n  ]);\n  const PARAMS = {\n    className: 'params',\n    begin: /\\(/,\n    end: /\\)/,\n    excludeBegin: true,\n    excludeEnd: true,\n    keywords: KEYWORDS$1,\n    contains: PARAMS_CONTAINS\n  };\n\n  // ES6 classes\n  const CLASS_OR_EXTENDS = {\n    variants: [\n      {\n        match: [\n          /class/,\n          /\\s+/,\n          IDENT_RE$1\n        ],\n        scope: {\n          1: \"keyword\",\n          3: \"title.class\"\n        }\n      },\n      {\n        match: [\n          /extends/,\n          /\\s+/,\n          concat(IDENT_RE$1, \"(\", concat(/\\./, IDENT_RE$1), \")*\")\n        ],\n        scope: {\n          1: \"keyword\",\n          3: \"title.class.inherited\"\n        }\n      }\n    ]\n  };\n\n  const CLASS_REFERENCE = {\n    relevance: 0,\n    match: /\\b[A-Z][a-z]+([A-Z][a-z]+)*/,\n    className: \"title.class\",\n    keywords: {\n      _: [\n        // se we still get relevance credit for JS library classes\n        ...TYPES,\n        ...ERROR_TYPES\n      ]\n    }\n  };\n\n  const USE_STRICT = {\n    label: \"use_strict\",\n    className: 'meta',\n    relevance: 10,\n    begin: /^\\s*['\"]use (strict|asm)['\"]/\n  };\n\n  const FUNCTION_DEFINITION = {\n    variants: [\n      {\n        match: [\n          /function/,\n          /\\s+/,\n          IDENT_RE$1,\n          /(?=\\s*\\()/\n        ]\n      },\n      // anonymous function\n      {\n        match: [\n          /function/,\n          /\\s*(?=\\()/\n        ]\n      }\n    ],\n    className: {\n      1: \"keyword\",\n      3: \"title.function\"\n    },\n    label: \"func.def\",\n    contains: [ PARAMS ],\n    illegal: /%/\n  };\n\n  const UPPER_CASE_CONSTANT = {\n    relevance: 0,\n    match: /\\b[A-Z][A-Z_0-9]+\\b/,\n    className: \"variable.constant\"\n  };\n\n  function noneOf(list) {\n    return concat(\"(?!\", list.join(\"|\"), \")\");\n  }\n\n  const FUNCTION_CALL = {\n    match: concat(\n      /\\b/,\n      noneOf([\n        ...BUILT_IN_GLOBALS,\n        \"super\"\n      ]),\n      IDENT_RE$1, lookahead(/\\(/)),\n    className: \"title.function\",\n    relevance: 0\n  };\n\n  const PROPERTY_ACCESS = {\n    begin: concat(/\\./, lookahead(\n      concat(IDENT_RE$1, /(?![0-9A-Za-z$_(])/)\n    )),\n    end: IDENT_RE$1,\n    excludeBegin: true,\n    keywords: \"prototype\",\n    className: \"property\",\n    relevance: 0\n  };\n\n  const GETTER_OR_SETTER = {\n    match: [\n      /get|set/,\n      /\\s+/,\n      IDENT_RE$1,\n      /(?=\\()/\n    ],\n    className: {\n      1: \"keyword\",\n      3: \"title.function\"\n    },\n    contains: [\n      { // eat to avoid empty params\n        begin: /\\(\\)/\n      },\n      PARAMS\n    ]\n  };\n\n  const FUNC_LEAD_IN_RE = '(\\\\(' +\n    '[^()]*(\\\\(' +\n    '[^()]*(\\\\(' +\n    '[^()]*' +\n    '\\\\)[^()]*)*' +\n    '\\\\)[^()]*)*' +\n    '\\\\)|' + hljs.UNDERSCORE_IDENT_RE + ')\\\\s*=>';\n\n  const FUNCTION_VARIABLE = {\n    match: [\n      /const|var|let/, /\\s+/,\n      IDENT_RE$1, /\\s*/,\n      /=\\s*/,\n      lookahead(FUNC_LEAD_IN_RE)\n    ],\n    className: {\n      1: \"keyword\",\n      3: \"title.function\"\n    },\n    contains: [\n      PARAMS\n    ]\n  };\n\n  return {\n    name: 'Javascript',\n    aliases: ['js', 'jsx', 'mjs', 'cjs'],\n    keywords: KEYWORDS$1,\n    // this will be extended by TypeScript\n    exports: { PARAMS_CONTAINS },\n    illegal: /#(?![$_A-z])/,\n    contains: [\n      hljs.SHEBANG({\n        label: \"shebang\",\n        binary: \"node\",\n        relevance: 5\n      }),\n      USE_STRICT,\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      HTML_TEMPLATE,\n      CSS_TEMPLATE,\n      TEMPLATE_STRING,\n      COMMENT,\n      NUMBER,\n      CLASS_REFERENCE,\n      {\n        className: 'attr',\n        begin: IDENT_RE$1 + lookahead(':'),\n        relevance: 0\n      },\n      FUNCTION_VARIABLE,\n      { // \"value\" container\n        begin: '(' + hljs.RE_STARTERS_RE + '|\\\\b(case|return|throw)\\\\b)\\\\s*',\n        keywords: 'return throw case',\n        relevance: 0,\n        contains: [\n          COMMENT,\n          hljs.REGEXP_MODE,\n          {\n            className: 'function',\n            // we have to count the parens to make sure we actually have the\n            // correct bounding ( ) before the =>.  There could be any number of\n            // sub-expressions inside also surrounded by parens.\n            begin: FUNC_LEAD_IN_RE,\n            returnBegin: true,\n            end: '\\\\s*=>',\n            contains: [\n              {\n                className: 'params',\n                variants: [\n                  {\n                    begin: hljs.UNDERSCORE_IDENT_RE,\n                    relevance: 0\n                  },\n                  {\n                    className: null,\n                    begin: /\\(\\s*\\)/,\n                    skip: true\n                  },\n                  {\n                    begin: /\\(/,\n                    end: /\\)/,\n                    excludeBegin: true,\n                    excludeEnd: true,\n                    keywords: KEYWORDS$1,\n                    contains: PARAMS_CONTAINS\n                  }\n                ]\n              }\n            ]\n          },\n          { // could be a comma delimited list of params to a function call\n            begin: /,/,\n            relevance: 0\n          },\n          {\n            match: /\\s+/,\n            relevance: 0\n          },\n          { // JSX\n            variants: [\n              { begin: FRAGMENT.begin, end: FRAGMENT.end },\n              {\n                begin: XML_TAG.begin,\n                // we carefully check the opening tag to see if it truly\n                // is a tag and not a false positive\n                'on:begin': XML_TAG.isTrulyOpeningTag,\n                end: XML_TAG.end\n              }\n            ],\n            subLanguage: 'xml',\n            contains: [\n              {\n                begin: XML_TAG.begin,\n                end: XML_TAG.end,\n                skip: true,\n                contains: ['self']\n              }\n            ]\n          }\n        ],\n      },\n      FUNCTION_DEFINITION,\n      {\n        // prevent this from getting swallowed up by function\n        // since they appear \"function like\"\n        beginKeywords: \"while if switch catch for\"\n      },\n      {\n        // we have to count the parens to make sure we actually have the correct\n        // bounding ( ).  There could be any number of sub-expressions inside\n        // also surrounded by parens.\n        begin: '\\\\b(?!function)' + hljs.UNDERSCORE_IDENT_RE +\n          '\\\\(' + // first parens\n          '[^()]*(\\\\(' +\n            '[^()]*(\\\\(' +\n              '[^()]*' +\n            '\\\\)[^()]*)*' +\n          '\\\\)[^()]*)*' +\n          '\\\\)\\\\s*\\\\{', // end parens\n        returnBegin:true,\n        label: \"func.def\",\n        contains: [\n          PARAMS,\n          hljs.inherit(hljs.TITLE_MODE, { begin: IDENT_RE$1, className: \"title.function\" })\n        ]\n      },\n      // catch ... so it won't trigger the property rule below\n      {\n        match: /\\.\\.\\./,\n        relevance: 0\n      },\n      PROPERTY_ACCESS,\n      // hack: prevents detection of keywords in some circumstances\n      // .keyword()\n      // $keyword = x\n      {\n        match: '\\\\$' + IDENT_RE$1,\n        relevance: 0\n      },\n      {\n        match: [ /\\bconstructor(?=\\s*\\()/ ],\n        className: { 1: \"title.function\" },\n        contains: [ PARAMS ]\n      },\n      FUNCTION_CALL,\n      UPPER_CASE_CONSTANT,\n      CLASS_OR_EXTENDS,\n      GETTER_OR_SETTER,\n      {\n        match: /\\$[(.]/ // relevance booster for a pattern common to JS libs: `$(something)` and `$.something`\n      }\n    ]\n  };\n}\n\n/*\nLanguage: TypeScript\nAuthor: Panu Horsmalahti <panu.horsmalahti@iki.fi>\nContributors: Ike Ku <dempfi@yahoo.com>\nDescription: TypeScript is a strict superset of JavaScript\nWebsite: https://www.typescriptlang.org\nCategory: common, scripting\n*/\n\n/** @type LanguageFn */\nfunction typescript(hljs) {\n  const IDENT_RE$1 = IDENT_RE;\n  const NAMESPACE = {\n    beginKeywords: 'namespace', end: /\\{/, excludeEnd: true\n  };\n  const INTERFACE = {\n    beginKeywords: 'interface', end: /\\{/, excludeEnd: true,\n    keywords: 'interface extends'\n  };\n  const USE_STRICT = {\n    className: 'meta',\n    relevance: 10,\n    begin: /^\\s*['\"]use strict['\"]/\n  };\n  const TYPES = [\n    \"any\",\n    \"void\",\n    \"number\",\n    \"boolean\",\n    \"string\",\n    \"object\",\n    \"never\",\n    \"enum\"\n  ];\n  const TS_SPECIFIC_KEYWORDS = [\n    \"type\",\n    \"namespace\",\n    \"typedef\",\n    \"interface\",\n    \"public\",\n    \"private\",\n    \"protected\",\n    \"implements\",\n    \"declare\",\n    \"abstract\",\n    \"readonly\"\n  ];\n  const KEYWORDS$1 = {\n    $pattern: IDENT_RE,\n    keyword: KEYWORDS.concat(TS_SPECIFIC_KEYWORDS),\n    literal: LITERALS,\n    built_in: BUILT_INS.concat(TYPES),\n    \"variable.language\": BUILT_IN_VARIABLES\n  };\n  const DECORATOR = {\n    className: 'meta',\n    begin: '@' + IDENT_RE$1,\n  };\n\n  const swapMode = (mode, label, replacement) => {\n    const indx = mode.contains.findIndex(m => m.label === label);\n    if (indx === -1) { throw new Error(\"can not find mode to replace\"); }\n    mode.contains.splice(indx, 1, replacement);\n  };\n\n  const tsLanguage = javascript(hljs);\n\n  // this should update anywhere keywords is used since\n  // it will be the same actual JS object\n  Object.assign(tsLanguage.keywords, KEYWORDS$1);\n\n  tsLanguage.exports.PARAMS_CONTAINS.push(DECORATOR);\n  tsLanguage.contains = tsLanguage.contains.concat([\n    DECORATOR,\n    NAMESPACE,\n    INTERFACE,\n  ]);\n\n  // TS gets a simpler shebang rule than JS\n  swapMode(tsLanguage, \"shebang\", hljs.SHEBANG());\n  // JS use strict rule purposely excludes `asm` which makes no sense\n  swapMode(tsLanguage, \"use_strict\", USE_STRICT);\n\n  const functionDeclaration = tsLanguage.contains.find(m => m.label === \"func.def\");\n  functionDeclaration.relevance = 0; // () => {} is more typical in TypeScript\n\n  Object.assign(tsLanguage, {\n    name: 'TypeScript',\n    aliases: ['ts', 'tsx']\n  });\n\n  return tsLanguage;\n}\n\nexport default typescript;\n","/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\nfunction stripOptionsFromArgs(args) {\n  const opts = args[args.length - 1];\n\n  if (typeof opts === 'object' && opts.constructor === Object) {\n    args.splice(args.length - 1, 1);\n    return opts;\n  } else {\n    return {};\n  }\n}\n\n/**\n * Any of the passed expresssions may match\n *\n * Creates a huge this | this | that | that match\n * @param {(RegExp | string)[] } args\n * @returns {string}\n */\nfunction either(...args) {\n  const opts = stripOptionsFromArgs(args);\n  const joined = '(' +\n    (opts.capture ? \"\" : \"?:\") +\n    args.map((x) => source(x)).join(\"|\") + \")\";\n  return joined;\n}\n\n/*\nLanguage: Visual Basic .NET\nDescription: Visual Basic .NET (VB.NET) is a multi-paradigm, object-oriented programming language, implemented on the .NET Framework.\nAuthors: Poren Chiang <ren.chiang@gmail.com>, Jan Pilzer\nWebsite: https://docs.microsoft.com/dotnet/visual-basic/getting-started\nCategory: common\n*/\n\n/** @type LanguageFn */\nfunction vbnet(hljs) {\n  /**\n   * Character Literal\n   * Either a single character (\"a\"C) or an escaped double quote (\"\"\"\"C).\n   */\n  const CHARACTER = {\n    className: 'string',\n    begin: /\"(\"\"|[^/n])\"C\\b/\n  };\n\n  const STRING = {\n    className: 'string',\n    begin: /\"/,\n    end: /\"/,\n    illegal: /\\n/,\n    contains: [\n      {\n        // double quote escape\n        begin: /\"\"/\n      }\n    ]\n  };\n\n  /** Date Literals consist of a date, a time, or both separated by whitespace, surrounded by # */\n  const MM_DD_YYYY = /\\d{1,2}\\/\\d{1,2}\\/\\d{4}/;\n  const YYYY_MM_DD = /\\d{4}-\\d{1,2}-\\d{1,2}/;\n  const TIME_12H = /(\\d|1[012])(:\\d+){0,2} *(AM|PM)/;\n  const TIME_24H = /\\d{1,2}(:\\d{1,2}){1,2}/;\n  const DATE = {\n    className: 'literal',\n    variants: [\n      {\n        // #YYYY-MM-DD# (ISO-Date) or #M/D/YYYY# (US-Date)\n        begin: concat(/# */, either(YYYY_MM_DD, MM_DD_YYYY), / *#/)\n      },\n      {\n        // #H:mm[:ss]# (24h Time)\n        begin: concat(/# */, TIME_24H, / *#/)\n      },\n      {\n        // #h[:mm[:ss]] A# (12h Time)\n        begin: concat(/# */, TIME_12H, / *#/)\n      },\n      {\n        // date plus time\n        begin: concat(\n          /# */,\n          either(YYYY_MM_DD, MM_DD_YYYY),\n          / +/,\n          either(TIME_12H, TIME_24H),\n          / *#/\n        )\n      }\n    ]\n  };\n\n  const NUMBER = {\n    className: 'number',\n    relevance: 0,\n    variants: [\n      {\n        // Float\n        begin: /\\b\\d[\\d_]*((\\.[\\d_]+(E[+-]?[\\d_]+)?)|(E[+-]?[\\d_]+))[RFD@!#]?/\n      },\n      {\n        // Integer (base 10)\n        begin: /\\b\\d[\\d_]*((U?[SIL])|[%&])?/\n      },\n      {\n        // Integer (base 16)\n        begin: /&H[\\dA-F_]+((U?[SIL])|[%&])?/\n      },\n      {\n        // Integer (base 8)\n        begin: /&O[0-7_]+((U?[SIL])|[%&])?/\n      },\n      {\n        // Integer (base 2)\n        begin: /&B[01_]+((U?[SIL])|[%&])?/\n      }\n    ]\n  };\n\n  const LABEL = {\n    className: 'label',\n    begin: /^\\w+:/\n  };\n\n  const DOC_COMMENT = hljs.COMMENT(/'''/, /$/, {\n    contains: [\n      {\n        className: 'doctag',\n        begin: /<\\/?/,\n        end: />/\n      }\n    ]\n  });\n\n  const COMMENT = hljs.COMMENT(null, /$/, {\n    variants: [\n      {\n        begin: /'/\n      },\n      {\n        // TODO: Use multi-class for leading spaces\n        begin: /([\\t ]|^)REM(?=\\s)/\n      }\n    ]\n  });\n\n  const DIRECTIVES = {\n    className: 'meta',\n    // TODO: Use multi-class for indentation once available\n    begin: /[\\t ]*#(const|disable|else|elseif|enable|end|externalsource|if|region)\\b/,\n    end: /$/,\n    keywords: {\n      keyword:\n        'const disable else elseif enable end externalsource if region then'\n    },\n    contains: [ COMMENT ]\n  };\n\n  return {\n    name: 'Visual Basic .NET',\n    aliases: [ 'vb' ],\n    case_insensitive: true,\n    classNameAliases: {\n      label: 'symbol'\n    },\n    keywords: {\n      keyword:\n        'addhandler alias aggregate ansi as async assembly auto binary by byref byval ' + /* a-b */\n        'call case catch class compare const continue custom declare default delegate dim distinct do ' + /* c-d */\n        'each equals else elseif end enum erase error event exit explicit finally for friend from function ' + /* e-f */\n        'get global goto group handles if implements imports in inherits interface into iterator ' + /* g-i */\n        'join key let lib loop me mid module mustinherit mustoverride mybase myclass ' + /* j-m */\n        'namespace narrowing new next notinheritable notoverridable ' + /* n */\n        'of off on operator option optional order overloads overridable overrides ' + /* o */\n        'paramarray partial preserve private property protected public ' + /* p */\n        'raiseevent readonly redim removehandler resume return ' + /* r */\n        'select set shadows shared skip static step stop structure strict sub synclock ' + /* s */\n        'take text then throw to try unicode until using when where while widening with withevents writeonly yield' /* t-y */,\n      built_in:\n        // Operators https://docs.microsoft.com/dotnet/visual-basic/language-reference/operators\n        'addressof and andalso await directcast gettype getxmlnamespace is isfalse isnot istrue like mod nameof new not or orelse trycast typeof xor ' +\n        // Type Conversion Functions https://docs.microsoft.com/dotnet/visual-basic/language-reference/functions/type-conversion-functions\n        'cbool cbyte cchar cdate cdbl cdec cint clng cobj csbyte cshort csng cstr cuint culng cushort',\n      type:\n        // Data types https://docs.microsoft.com/dotnet/visual-basic/language-reference/data-types\n        'boolean byte char date decimal double integer long object sbyte short single string uinteger ulong ushort',\n      literal: 'true false nothing'\n    },\n    illegal:\n      '//|\\\\{|\\\\}|endif|gosub|variant|wend|^\\\\$ ' /* reserved deprecated keywords */,\n    contains: [\n      CHARACTER,\n      STRING,\n      DATE,\n      NUMBER,\n      LABEL,\n      DOC_COMMENT,\n      COMMENT,\n      DIRECTIVES\n    ]\n  };\n}\n\nexport default vbnet;\n","/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction lookahead(re) {\n  return concat('(?=', re, ')');\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction optional(re) {\n  return concat('(?:', re, ')?');\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\nfunction stripOptionsFromArgs(args) {\n  const opts = args[args.length - 1];\n\n  if (typeof opts === 'object' && opts.constructor === Object) {\n    args.splice(args.length - 1, 1);\n    return opts;\n  } else {\n    return {};\n  }\n}\n\n/**\n * Any of the passed expresssions may match\n *\n * Creates a huge this | this | that | that match\n * @param {(RegExp | string)[] } args\n * @returns {string}\n */\nfunction either(...args) {\n  const opts = stripOptionsFromArgs(args);\n  const joined = '(' +\n    (opts.capture ? \"\" : \"?:\") +\n    args.map((x) => source(x)).join(\"|\") + \")\";\n  return joined;\n}\n\n/*\nLanguage: HTML, XML\nWebsite: https://www.w3.org/XML/\nCategory: common, web\nAudit: 2020\n*/\n\n/** @type LanguageFn */\nfunction xml(hljs) {\n  // Element names can contain letters, digits, hyphens, underscores, and periods\n  const TAG_NAME_RE = concat(/[A-Z_]/, optional(/[A-Z0-9_.-]*:/), /[A-Z0-9_.-]*/);\n  const XML_IDENT_RE = /[A-Za-z0-9._:-]+/;\n  const XML_ENTITIES = {\n    className: 'symbol',\n    begin: /&[a-z]+;|&#[0-9]+;|&#x[a-f0-9]+;/\n  };\n  const XML_META_KEYWORDS = {\n    begin: /\\s/,\n    contains: [\n      {\n        className: 'keyword',\n        begin: /#?[a-z_][a-z1-9_-]+/,\n        illegal: /\\n/\n      }\n    ]\n  };\n  const XML_META_PAR_KEYWORDS = hljs.inherit(XML_META_KEYWORDS, {\n    begin: /\\(/,\n    end: /\\)/\n  });\n  const APOS_META_STRING_MODE = hljs.inherit(hljs.APOS_STRING_MODE, {\n    className: 'string'\n  });\n  const QUOTE_META_STRING_MODE = hljs.inherit(hljs.QUOTE_STRING_MODE, {\n    className: 'string'\n  });\n  const TAG_INTERNALS = {\n    endsWithParent: true,\n    illegal: /</,\n    relevance: 0,\n    contains: [\n      {\n        className: 'attr',\n        begin: XML_IDENT_RE,\n        relevance: 0\n      },\n      {\n        begin: /=\\s*/,\n        relevance: 0,\n        contains: [\n          {\n            className: 'string',\n            endsParent: true,\n            variants: [\n              {\n                begin: /\"/,\n                end: /\"/,\n                contains: [ XML_ENTITIES ]\n              },\n              {\n                begin: /'/,\n                end: /'/,\n                contains: [ XML_ENTITIES ]\n              },\n              {\n                begin: /[^\\s\"'=<>`]+/\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  };\n  return {\n    name: 'HTML, XML',\n    aliases: [\n      'html',\n      'xhtml',\n      'rss',\n      'atom',\n      'xjb',\n      'xsd',\n      'xsl',\n      'plist',\n      'wsf',\n      'svg'\n    ],\n    case_insensitive: true,\n    contains: [\n      {\n        className: 'meta',\n        begin: /<![a-z]/,\n        end: />/,\n        relevance: 10,\n        contains: [\n          XML_META_KEYWORDS,\n          QUOTE_META_STRING_MODE,\n          APOS_META_STRING_MODE,\n          XML_META_PAR_KEYWORDS,\n          {\n            begin: /\\[/,\n            end: /\\]/,\n            contains: [\n              {\n                className: 'meta',\n                begin: /<![a-z]/,\n                end: />/,\n                contains: [\n                  XML_META_KEYWORDS,\n                  XML_META_PAR_KEYWORDS,\n                  QUOTE_META_STRING_MODE,\n                  APOS_META_STRING_MODE\n                ]\n              }\n            ]\n          }\n        ]\n      },\n      hljs.COMMENT(\n        /<!--/,\n        /-->/,\n        {\n          relevance: 10\n        }\n      ),\n      {\n        begin: /<!\\[CDATA\\[/,\n        end: /\\]\\]>/,\n        relevance: 10\n      },\n      XML_ENTITIES,\n      {\n        className: 'meta',\n        begin: /<\\?xml/,\n        end: /\\?>/,\n        relevance: 10\n      },\n      {\n        className: 'tag',\n        /*\n        The lookahead pattern (?=...) ensures that 'begin' only matches\n        '<style' as a single word, followed by a whitespace or an\n        ending bracket.\n        */\n        begin: /<style(?=\\s|>)/,\n        end: />/,\n        keywords: {\n          name: 'style'\n        },\n        contains: [ TAG_INTERNALS ],\n        starts: {\n          end: /<\\/style>/,\n          returnEnd: true,\n          subLanguage: [\n            'css',\n            'xml'\n          ]\n        }\n      },\n      {\n        className: 'tag',\n        // See the comment in the <style tag about the lookahead pattern\n        begin: /<script(?=\\s|>)/,\n        end: />/,\n        keywords: {\n          name: 'script'\n        },\n        contains: [ TAG_INTERNALS ],\n        starts: {\n          end: /<\\/script>/,\n          returnEnd: true,\n          subLanguage: [\n            'javascript',\n            'handlebars',\n            'xml'\n          ]\n        }\n      },\n      // we need this for now for jSX\n      {\n        className: 'tag',\n        begin: /<>|<\\/>/\n      },\n      // open tag\n      {\n        className: 'tag',\n        begin: concat(\n          /</,\n          lookahead(concat(\n            TAG_NAME_RE,\n            // <tag/>\n            // <tag>\n            // <tag ...\n            either(/\\/>/, />/, /\\s/)\n          ))\n        ),\n        end: /\\/?>/,\n        contains: [\n          {\n            className: 'name',\n            begin: TAG_NAME_RE,\n            relevance: 0,\n            starts: TAG_INTERNALS\n          }\n        ]\n      },\n      // close tag\n      {\n        className: 'tag',\n        begin: concat(\n          /<\\//,\n          lookahead(concat(\n            TAG_NAME_RE, />/\n          ))\n        ),\n        contains: [\n          {\n            className: 'name',\n            begin: TAG_NAME_RE,\n            relevance: 0\n          },\n          {\n            begin: />/,\n            relevance: 0,\n            endsParent: true\n          }\n        ]\n      }\n    ]\n  };\n}\n\nexport default xml;\n","/*\nLanguage: YAML\nDescription: Yet Another Markdown Language\nAuthor: Stefan Wienert <stwienert@gmail.com>\nContributors: Carl Baxter <carl@cbax.tech>\nRequires: ruby.js\nWebsite: https://yaml.org\nCategory: common, config\n*/\nfunction yaml(hljs) {\n  const LITERALS = 'true false yes no null';\n\n  // YAML spec allows non-reserved URI characters in tags.\n  const URI_CHARACTERS = '[\\\\w#;/?:@&=+$,.~*\\'()[\\\\]]+';\n\n  // Define keys as starting with a word character\n  // ...containing word chars, spaces, colons, forward-slashes, hyphens and periods\n  // ...and ending with a colon followed immediately by a space, tab or newline.\n  // The YAML spec allows for much more than this, but this covers most use-cases.\n  const KEY = {\n    className: 'attr',\n    variants: [\n      {\n        begin: '\\\\w[\\\\w :\\\\/.-]*:(?=[ \\t]|$)'\n      },\n      { // double quoted keys\n        begin: '\"\\\\w[\\\\w :\\\\/.-]*\":(?=[ \\t]|$)'\n      },\n      { // single quoted keys\n        begin: '\\'\\\\w[\\\\w :\\\\/.-]*\\':(?=[ \\t]|$)'\n      }\n    ]\n  };\n\n  const TEMPLATE_VARIABLES = {\n    className: 'template-variable',\n    variants: [\n      { // jinja templates Ansible\n        begin: /\\{\\{/,\n        end: /\\}\\}/\n      },\n      { // Ruby i18n\n        begin: /%\\{/,\n        end: /\\}/\n      }\n    ]\n  };\n  const STRING = {\n    className: 'string',\n    relevance: 0,\n    variants: [\n      {\n        begin: /'/,\n        end: /'/\n      },\n      {\n        begin: /\"/,\n        end: /\"/\n      },\n      {\n        begin: /\\S+/\n      }\n    ],\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      TEMPLATE_VARIABLES\n    ]\n  };\n\n  // Strings inside of value containers (objects) can't contain braces,\n  // brackets, or commas\n  const CONTAINER_STRING = hljs.inherit(STRING, {\n    variants: [\n      {\n        begin: /'/,\n        end: /'/\n      },\n      {\n        begin: /\"/,\n        end: /\"/\n      },\n      {\n        begin: /[^\\s,{}[\\]]+/\n      }\n    ]\n  });\n\n  const DATE_RE = '[0-9]{4}(-[0-9][0-9]){0,2}';\n  const TIME_RE = '([Tt \\\\t][0-9][0-9]?(:[0-9][0-9]){2})?';\n  const FRACTION_RE = '(\\\\.[0-9]*)?';\n  const ZONE_RE = '([ \\\\t])*(Z|[-+][0-9][0-9]?(:[0-9][0-9])?)?';\n  const TIMESTAMP = {\n    className: 'number',\n    begin: '\\\\b' + DATE_RE + TIME_RE + FRACTION_RE + ZONE_RE + '\\\\b'\n  };\n\n  const VALUE_CONTAINER = {\n    end: ',',\n    endsWithParent: true,\n    excludeEnd: true,\n    keywords: LITERALS,\n    relevance: 0\n  };\n  const OBJECT = {\n    begin: /\\{/,\n    end: /\\}/,\n    contains: [ VALUE_CONTAINER ],\n    illegal: '\\\\n',\n    relevance: 0\n  };\n  const ARRAY = {\n    begin: '\\\\[',\n    end: '\\\\]',\n    contains: [ VALUE_CONTAINER ],\n    illegal: '\\\\n',\n    relevance: 0\n  };\n\n  const MODES = [\n    KEY,\n    {\n      className: 'meta',\n      begin: '^---\\\\s*$',\n      relevance: 10\n    },\n    { // multi line string\n      // Blocks start with a | or > followed by a newline\n      //\n      // Indentation of subsequent lines must be the same to\n      // be considered part of the block\n      className: 'string',\n      begin: '[\\\\|>]([1-9]?[+-])?[ ]*\\\\n( +)[^ ][^\\\\n]*\\\\n(\\\\2[^\\\\n]+\\\\n?)*'\n    },\n    { // Ruby/Rails erb\n      begin: '<%[%=-]?',\n      end: '[%-]?%>',\n      subLanguage: 'ruby',\n      excludeBegin: true,\n      excludeEnd: true,\n      relevance: 0\n    },\n    { // named tags\n      className: 'type',\n      begin: '!\\\\w+!' + URI_CHARACTERS\n    },\n    // https://yaml.org/spec/1.2/spec.html#id2784064\n    { // verbatim tags\n      className: 'type',\n      begin: '!<' + URI_CHARACTERS + \">\"\n    },\n    { // primary tags\n      className: 'type',\n      begin: '!' + URI_CHARACTERS\n    },\n    { // secondary tags\n      className: 'type',\n      begin: '!!' + URI_CHARACTERS\n    },\n    { // fragment id &ref\n      className: 'meta',\n      begin: '&' + hljs.UNDERSCORE_IDENT_RE + '$'\n    },\n    { // fragment reference *ref\n      className: 'meta',\n      begin: '\\\\*' + hljs.UNDERSCORE_IDENT_RE + '$'\n    },\n    { // array listing\n      className: 'bullet',\n      // TODO: remove |$ hack when we have proper look-ahead support\n      begin: '-(?=[ ]|$)',\n      relevance: 0\n    },\n    hljs.HASH_COMMENT_MODE,\n    {\n      beginKeywords: LITERALS,\n      keywords: {\n        literal: LITERALS\n      }\n    },\n    TIMESTAMP,\n    // numbers are any valid C-style number that\n    // sit isolated from other words\n    {\n      className: 'number',\n      begin: hljs.C_NUMBER_RE + '\\\\b',\n      relevance: 0\n    },\n    OBJECT,\n    ARRAY,\n    STRING\n  ];\n\n  const VALUE_MODES = [ ...MODES ];\n  VALUE_MODES.pop();\n  VALUE_MODES.push(CONTAINER_STRING);\n  VALUE_CONTAINER.contains = VALUE_MODES;\n\n  return {\n    name: 'YAML',\n    case_insensitive: true,\n    aliases: [ 'yml' ],\n    contains: MODES\n  };\n}\n\nexport default yaml;\n","// https://nodejs.org/api/packages.html#packages_writing_dual_packages_while_avoiding_or_minimizing_hazards\nimport hljs from '../lib/core.js';\nexport default hljs;\n","// @ts-ignore\nimport formatter from 'format'\n\nexport var fault = Object.assign(create(Error), {\n  eval: create(EvalError),\n  range: create(RangeError),\n  reference: create(ReferenceError),\n  syntax: create(SyntaxError),\n  type: create(TypeError),\n  uri: create(URIError)\n})\n\n/**\n * Create a new `EConstructor`, with the formatted `format` as a first argument.\n *\n * @template {Error} Fault\n * @template {new (reason: string) => Fault} Class\n * @param {Class} Constructor\n */\nexport function create(Constructor) {\n  /** @type {string} */\n  // @ts-ignore\n  FormattedError.displayName = Constructor.displayName || Constructor.name\n\n  return FormattedError\n\n  /**\n   * @param {string} [format]\n   * @param {...unknown} values\n   * @returns {Fault}\n   */\n  function FormattedError(format, ...values) {\n    /** @type {string} */\n    var reason = format ? formatter(format, ...values) : format\n    return new Constructor(reason)\n  }\n}\n","/**\n * @typedef {import('hast').Text} Text\n *\n * @typedef {import('highlight.js').HighlightResult} HighlightResult\n * @typedef {import('highlight.js').HLJSOptions} HighlightOptions\n * @typedef {import('highlight.js').LanguageFn} HighlightSyntax\n * @typedef {import('highlight.js').Emitter} HighlightEmitter\n *\n * @typedef {{type: 'element', tagName: 'span', properties: {className: Array.<string>}, children: Array.<LowlightElementSpan|Text>}} LowlightElementSpan\n * @typedef {{type: 'root', data: {language: string, relevance: number}, children: Array.<LowlightElementSpan|Text>}} LowlightRoot\n *\n * @typedef {Object} ExtraAutoOptions\n * @property {Array.<string>} [subset] List of allowed languages; defaults to all registered languages\n *\n * @typedef {Object} LowlightOptions\n * @property {string} [prefix='hljs-'] Class prefix\n *\n * @typedef {LowlightOptions & ExtraAutoOptions} LowlightAutoOptions\n */\n\nimport high from 'highlight.js/lib/core'\nimport {fault} from 'fault'\n\nconst own = {}.hasOwnProperty\n\nconst defaultPrefix = 'hljs-'\n\n/**\n * Parse `value` (code) according to the `language` (name) grammar.\n *\n * @param {string} language Language name\n * @param {string} value Code value\n * @param {LowlightOptions} [options={}] Settings\n * @returns {LowlightRoot}\n */\nfunction highlight(language, value, options = {}) {\n  let prefix = options.prefix\n\n  if (typeof language !== 'string') {\n    throw fault('Expected `string` for name, got `%s`', language)\n  }\n\n  if (!high.getLanguage(language)) {\n    throw fault('Unknown language: `%s` is not registered', language)\n  }\n\n  if (typeof value !== 'string') {\n    throw fault('Expected `string` for value, got `%s`', value)\n  }\n\n  if (prefix === null || prefix === undefined) {\n    prefix = defaultPrefix\n  }\n\n  high.configure({__emitter: HastEmitter, classPrefix: prefix})\n  /** @type {HighlightResult & {_emitter: HastEmitter}} */\n  // @ts-ignore our emitter is added.\n  const result = high.highlight(value, {language, ignoreIllegals: true})\n  high.configure({})\n\n  // Highlight.js seems to use this (currently) for broken grammars, so let’s\n  // keep it in there just to be sure.\n  /* c8 ignore next 3 */\n  if (result.errorRaised) {\n    throw result.errorRaised\n  }\n\n  result._emitter.root.data.language = result.language\n  result._emitter.root.data.relevance = result.relevance\n\n  return result._emitter.root\n}\n\n/**\n * Parse `value` (code) by guessing its grammar.\n *\n * @param {string} value Code value\n * @param {LowlightAutoOptions} [options={}] Settings\n * @returns {LowlightRoot}\n */\nfunction highlightAuto(value, options = {}) {\n  const subset = options.subset || high.listLanguages()\n  let prefix = options.prefix\n  let index = -1\n  /** @type {LowlightRoot} */\n  let result = {\n    type: 'root',\n    data: {language: null, relevance: 0},\n    children: []\n  }\n  /** @type {string} */\n  let name\n  /** @type {LowlightRoot} */\n  let current\n\n  if (prefix === null || prefix === undefined) {\n    prefix = defaultPrefix\n  }\n\n  if (typeof value !== 'string') {\n    throw fault('Expected `string` for value, got `%s`', value)\n  }\n\n  while (++index < subset.length) {\n    name = subset[index]\n\n    if (!high.getLanguage(name)) continue\n\n    current = highlight(name, value, options)\n\n    if (current.data.relevance > result.data.relevance) result = current\n  }\n\n  return result\n}\n\n/**\n * Register a language.\n *\n * @param {string} language Language name\n * @param {HighlightSyntax} syntax Language syntax\n * @returns {void}\n */\nfunction registerLanguage(language, syntax) {\n  high.registerLanguage(language, syntax)\n}\n\n/**\n * Get a list of all registered languages.\n *\n * @returns {Array.<string>}\n */\nfunction listLanguages() {\n  return high.listLanguages()\n}\n\nconst registerAlias =\n  /**\n   * @type {(\n   *   ((language: string, alias: string|Array.<string>) => void) &\n   *   ((aliases: Object<string, string|Array.<string>>) => void)\n   * )}\n   */\n  (\n    /**\n     * Register more aliases for an already registered language.\n     *\n     * @param {string|Object<string, string|Array.<string>>} language\n     * @param {string|Array.<string>} [alias]\n     * @returns {void}\n     */\n    function (language, alias) {\n      /** @type {Object<string, string|Array.<string>>} */\n      let map\n      /** @type {string} */\n      let key\n\n      if (typeof language === 'string') {\n        map = {}\n        map[language] = alias\n      } else {\n        map = language\n      }\n\n      for (key in map) {\n        if (own.call(map, key)) {\n          high.registerAliases(map[key], {languageName: key})\n        }\n      }\n    }\n  )\n\n/** @type {HighlightEmitter} */\nclass HastEmitter {\n  /**\n   * @param {HighlightOptions} options\n   */\n  constructor(options) {\n    /** @type {HighlightOptions} */\n    this.options = options\n    /** @type {LowlightRoot} */\n    this.root = {\n      type: 'root',\n      data: {language: undefined, relevance: 0},\n      children: []\n    }\n    /** @type {[LowlightRoot, ...LowlightElementSpan[]]} */\n    this.stack = [this.root]\n  }\n\n  /**\n   * @param {string} value\n   */\n  addText(value) {\n    if (value === '') return\n\n    const current = this.stack[this.stack.length - 1]\n    const tail = current.children[current.children.length - 1]\n\n    if (tail && tail.type === 'text') {\n      tail.value += value\n    } else {\n      current.children.push({type: 'text', value})\n    }\n  }\n\n  /**\n   * @param {string} value\n   * @param {string} name\n   */\n  addKeyword(value, name) {\n    this.openNode(name)\n    this.addText(value)\n    this.closeNode()\n  }\n\n  /**\n   * @param {HastEmitter} other\n   * @param {string} name\n   */\n  addSublanguage(other, name) {\n    const current = this.stack[this.stack.length - 1]\n    const results = other.root.children\n\n    if (name) {\n      current.children.push({\n        type: 'element',\n        tagName: 'span',\n        properties: {className: [name]},\n        children: results\n      })\n    } else {\n      current.children.push(...results)\n    }\n  }\n\n  /**\n   * @param {string} name\n   */\n  openNode(name) {\n    const className = name.split('.').map((d) => this.options.classPrefix + d)\n    const current = this.stack[this.stack.length - 1]\n    /** @type {LowlightElementSpan} */\n    const child = {\n      type: 'element',\n      tagName: 'span',\n      properties: {className},\n      children: []\n    }\n\n    current.children.push(child)\n    this.stack.push(child)\n  }\n\n  /**\n   */\n  closeNode() {\n    this.stack.pop()\n  }\n\n  /**\n   */\n  closeAllNodes() {}\n\n  /**\n   */\n  finalize() {}\n\n  /**\n   */\n  toHTML() {\n    return ''\n  }\n}\n\nexport const lowlight = {\n  highlight,\n  highlightAuto,\n  registerLanguage,\n  listLanguages,\n  registerAlias\n}\n","import arduino from 'highlight.js/lib/languages/arduino'\nimport bash from 'highlight.js/lib/languages/bash'\nimport c from 'highlight.js/lib/languages/c'\nimport cpp from 'highlight.js/lib/languages/cpp'\nimport csharp from 'highlight.js/lib/languages/csharp'\nimport css from 'highlight.js/lib/languages/css'\nimport diff from 'highlight.js/lib/languages/diff'\nimport go from 'highlight.js/lib/languages/go'\nimport ini from 'highlight.js/lib/languages/ini'\nimport java from 'highlight.js/lib/languages/java'\nimport javascript from 'highlight.js/lib/languages/javascript'\nimport json from 'highlight.js/lib/languages/json'\nimport kotlin from 'highlight.js/lib/languages/kotlin'\nimport less from 'highlight.js/lib/languages/less'\nimport lua from 'highlight.js/lib/languages/lua'\nimport makefile from 'highlight.js/lib/languages/makefile'\nimport markdown from 'highlight.js/lib/languages/markdown'\nimport objectivec from 'highlight.js/lib/languages/objectivec'\nimport perl from 'highlight.js/lib/languages/perl'\nimport php from 'highlight.js/lib/languages/php'\nimport phpTemplate from 'highlight.js/lib/languages/php-template'\nimport plaintext from 'highlight.js/lib/languages/plaintext'\nimport python from 'highlight.js/lib/languages/python'\nimport pythonRepl from 'highlight.js/lib/languages/python-repl'\nimport r from 'highlight.js/lib/languages/r'\nimport ruby from 'highlight.js/lib/languages/ruby'\nimport rust from 'highlight.js/lib/languages/rust'\nimport scss from 'highlight.js/lib/languages/scss'\nimport shell from 'highlight.js/lib/languages/shell'\nimport sql from 'highlight.js/lib/languages/sql'\nimport swift from 'highlight.js/lib/languages/swift'\nimport typescript from 'highlight.js/lib/languages/typescript'\nimport vbnet from 'highlight.js/lib/languages/vbnet'\nimport xml from 'highlight.js/lib/languages/xml'\nimport yaml from 'highlight.js/lib/languages/yaml'\nimport {lowlight} from './core.js'\n\nexport {lowlight}\nlowlight.registerLanguage('arduino', arduino)\nlowlight.registerLanguage('bash', bash)\nlowlight.registerLanguage('c', c)\nlowlight.registerLanguage('cpp', cpp)\nlowlight.registerLanguage('csharp', csharp)\nlowlight.registerLanguage('css', css)\nlowlight.registerLanguage('diff', diff)\nlowlight.registerLanguage('go', go)\nlowlight.registerLanguage('ini', ini)\nlowlight.registerLanguage('java', java)\nlowlight.registerLanguage('javascript', javascript)\nlowlight.registerLanguage('json', json)\nlowlight.registerLanguage('kotlin', kotlin)\nlowlight.registerLanguage('less', less)\nlowlight.registerLanguage('lua', lua)\nlowlight.registerLanguage('makefile', makefile)\nlowlight.registerLanguage('markdown', markdown)\nlowlight.registerLanguage('objectivec', objectivec)\nlowlight.registerLanguage('perl', perl)\nlowlight.registerLanguage('php', php)\nlowlight.registerLanguage('php-template', phpTemplate)\nlowlight.registerLanguage('plaintext', plaintext)\nlowlight.registerLanguage('python', python)\nlowlight.registerLanguage('python-repl', pythonRepl)\nlowlight.registerLanguage('r', r)\nlowlight.registerLanguage('ruby', ruby)\nlowlight.registerLanguage('rust', rust)\nlowlight.registerLanguage('scss', scss)\nlowlight.registerLanguage('shell', shell)\nlowlight.registerLanguage('sql', sql)\nlowlight.registerLanguage('swift', swift)\nlowlight.registerLanguage('typescript', typescript)\nlowlight.registerLanguage('vbnet', vbnet)\nlowlight.registerLanguage('xml', xml)\nlowlight.registerLanguage('yaml', yaml)\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('hast').Element} Element\n *\n * @typedef {string} TagName\n * @typedef {null|undefined|TagName|TestFunctionAnything|Array.<TagName|TestFunctionAnything>} Test\n */\n\n/**\n * Check if an element passes a test\n *\n * @callback TestFunctionAnything\n * @param {Element} element\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean|void}\n */\n\n/**\n * Check if an element passes a certain node test\n *\n * @template {Element} X\n * @callback TestFunctionPredicate\n * @param {X} element\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {element is X}\n */\n\n/**\n * Check if a node is an element and passes a certain node test\n *\n * @callback AssertAnything\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean}\n */\n\n/**\n * Check if a node is an element and passes a certain node test\n *\n * @template {Element} Y\n * @callback AssertPredicate\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is Y}\n */\n\n// Check if `node` is an `element` and whether it passes the given test.\nexport const isElement =\n  /**\n   * Check if a node is an element and passes a test.\n   * When a `parent` node is known the `index` of node should also be given.\n   *\n   * @type {(\n   *   (<T extends Element>(node: unknown, test: T['tagName']|TestFunctionPredicate<T>|Array.<T['tagName']|TestFunctionPredicate<T>>, index?: number, parent?: Parent, context?: unknown) => node is T) &\n   *   ((node?: unknown, test?: Test, index?: number, parent?: Parent, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * Check if a node passes a test.\n     * When a `parent` node is known the `index` of node should also be given.\n     *\n     * @param {unknown} [node] Node to check\n     * @param {Test} [test] When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `array`, checks any one of the subtests pass.\n     * @param {number} [index] Position of `node` in `parent`\n     * @param {Parent} [parent] Parent of `node`\n     * @param {unknown} [context] Context object to invoke `test` with\n     * @returns {boolean} Whether test passed and `node` is an `Element` (object with `type` set to `element` and `tagName` set to a non-empty string).\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convertElement(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index for child node')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!parent.type || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      // @ts-expect-error Looks like a node.\n      if (!node || !node.type || typeof node.type !== 'string') {\n        return false\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return check.call(context, node, index, parent)\n    }\n  )\n\nexport const convertElement =\n  /**\n   * @type {(\n   *   (<T extends Element>(test: T['tagName']|TestFunctionPredicate<T>) => AssertPredicate<T>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * Generate an assertion from a check.\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return element\n      }\n\n      if (typeof test === 'string') {\n        return tagNameFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return anyFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or array as test')\n    }\n  )\n\n/**\n * @param {Array.<TagName|TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array.<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convertElement(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {unknown[]} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s tag\n * name for said string.\n *\n * @param {TagName} check\n * @returns {AssertAnything}\n */\nfunction tagNameFactory(check) {\n  return tagName\n\n  /**\n   * @param {unknown} node\n   * @returns {boolean}\n   */\n  function tagName(node) {\n    return element(node) && node.tagName === check\n  }\n}\n\n/**\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {unknown} node\n   * @param {Array.<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(node, ...parameters) {\n    // @ts-expect-error: fine.\n    return element(node) && Boolean(check.call(this, node, ...parameters))\n  }\n}\n\n/**\n * Utility to return true if this is an element.\n * @param {unknown} node\n * @returns {node is Element}\n */\nfunction element(node) {\n  return Boolean(\n    node &&\n      typeof node === 'object' &&\n      // @ts-expect-error Looks like a node.\n      node.type === 'element' &&\n      // @ts-expect-error Looks like an element.\n      typeof node.tagName === 'string'\n  )\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n *\n * @typedef {import('unist-util-is').Type} Type\n * @typedef {import('unist-util-is').Props} Props\n * @typedef {import('unist-util-is').TestFunctionAnything} TestFunctionAnything\n */\n\nimport {convert} from 'unist-util-is'\n\nexport var findAfter =\n  /**\n   * @type {(\n   *  (<T extends Node>(node: Parent, index: Node|number, test: T['type']|Partial<T>|import('unist-util-is').TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|import('unist-util-is').TestFunctionPredicate<T>>) => T|null) &\n   *  ((node: Parent, index: Node|number, test?: null|undefined|Type|Props|TestFunctionAnything|Array<Type|Props|TestFunctionAnything>) => Node|null)\n   * )}\n   */\n  (\n    /**\n     * @param {Parent} parent Parent node\n     * @param {Node|number} index Child of `parent`, or it’s index\n     * @param {null|undefined|Type|Props|TestFunctionAnything|Array<Type|Props|TestFunctionAnything>} [test] is-compatible test (such as a type)\n     * @returns {Node|null}\n     */\n    function (parent, index, test) {\n      var is = convert(test)\n\n      if (!parent || !parent.type || !parent.children) {\n        throw new Error('Expected parent node')\n      }\n\n      if (typeof index === 'number') {\n        if (index < 0 || index === Number.POSITIVE_INFINITY) {\n          throw new Error('Expected positive finite number as index')\n        }\n      } else {\n        index = parent.children.indexOf(index)\n\n        if (index < 0) {\n          throw new Error('Expected child node or index')\n        }\n      }\n\n      while (++index < parent.children.length) {\n        if (is(parent.children[index], index, parent)) {\n          return parent.children[index]\n        }\n      }\n\n      return null\n    }\n  )\n","/**\n * @typedef {import('hast-util-is-element').TestFunctionAnything} TestFunctionAnything\n * @typedef {import('hast').Parent['children'][number]} HastChild\n * @typedef {import('hast').Text} HastText\n * @typedef {import('hast').Comment} HastComment\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {HastChild|HastRoot} HastNode\n * @typedef {HastRoot|HastElement} HastParent\n *\n * @typedef {'normal'|'pre'|'nowrap'|'pre-wrap'} Whitespace\n * @typedef {boolean} BreakValue\n * @typedef {1|2} BreakNumber\n * @typedef {'\\n'} BreakForce\n * @typedef {BreakValue|BreakNumber|undefined} BreakBefore\n * @typedef {BreakValue|BreakNumber|BreakForce|undefined} BreakAfter\n *\n * @typedef CollectionOptions\n * @property {Whitespace} whitespace\n * @property {BreakBefore} breakBefore\n * @property {BreakAfter} breakAfter\n *\n * @typedef Options\n *   Configuration.\n * @property {Whitespace} [whitespace='normal']\n *   Initial CSS whitespace setting to use.\n */\n\nimport {convertElement} from 'hast-util-is-element'\nimport {findAfter} from 'unist-util-find-after'\n\nconst searchLineFeeds = /\\n/g\nconst searchTabOrSpaces = /[\\t ]+/g\n\nconst br = convertElement('br')\nconst p = convertElement('p')\nconst cell = convertElement(['th', 'td'])\nconst row = convertElement('tr')\n\n// Note that we don’t need to include void elements here as they don’t have text.\n// See: <https://github.com/wooorm/html-void-elements>\nconst notRendered = convertElement([\n  // List from: <https://html.spec.whatwg.org/#hidden-elements>\n  'datalist',\n  'head',\n  'noembed',\n  'noframes',\n  'noscript', // Act as if we support scripting.\n  'rp',\n  'script',\n  'style',\n  'template',\n  'title',\n  // Hidden attribute.\n  hidden,\n  // From: <https://html.spec.whatwg.org/#flow-content-3>\n  closedDialog\n])\n\n// See: <https://html.spec.whatwg.org/#the-css-user-agent-style-sheet-and-presentational-hints>\nconst blockOrCaption = convertElement([\n  'address', // Flow content\n  'article', // Sections and headings\n  'aside', // Sections and headings\n  'blockquote', // Flow content\n  'body', // Page\n  'caption', // `table-caption`\n  'center', // Flow content (legacy)\n  'dd', // Lists\n  'dialog', // Flow content\n  'dir', // Lists (legacy)\n  'dl', // Lists\n  'dt', // Lists\n  'div', // Flow content\n  'figure', // Flow content\n  'figcaption', // Flow content\n  'footer', // Flow content\n  'form,', // Flow content\n  'h1', // Sections and headings\n  'h2', // Sections and headings\n  'h3', // Sections and headings\n  'h4', // Sections and headings\n  'h5', // Sections and headings\n  'h6', // Sections and headings\n  'header', // Flow content\n  'hgroup', // Sections and headings\n  'hr', // Flow content\n  'html', // Page\n  'legend', // Flow content\n  'listing', // Flow content (legacy)\n  'main', // Flow content\n  'menu', // Lists\n  'nav', // Sections and headings\n  'ol', // Lists\n  'p', // Flow content\n  'plaintext', // Flow content (legacy)\n  'pre', // Flow content\n  'section', // Sections and headings\n  'ul', // Lists\n  'xmp' // Flow content (legacy)\n])\n\n/**\n * Implementation of the `innerText` getter:\n * <https://html.spec.whatwg.org/#the-innertext-idl-attribute>\n * Note that we act as if `node` is being rendered, and as if we’re a\n * CSS-supporting user agent.\n *\n * @param {HastNode} node\n * @param {Options} [options={}]\n * @returns {string}\n */\nexport function toText(node, options = {}) {\n  /** @type {Array.<HastChild>} */\n  // @ts-ignore looks like a parent.\n  const children = node.children || []\n  const block = blockOrCaption(node)\n  const whitespace = inferWhitespace(node, {\n    whitespace: options.whitespace || 'normal',\n    breakBefore: false,\n    breakAfter: false\n  })\n  let index = -1\n  /** @type {Array.<string|BreakNumber>} */\n  let results\n  /** @type {string|BreakNumber} */\n  let value\n  /** @type {number|undefined} */\n  let count\n\n  // Treat `text` and `comment` as having normal white-space.\n  // This deviates from the spec as in the DOM the node’s `.data` has to be\n  // returned.\n  // If you want that behavior use `hast-util-to-string`.\n  // All other nodes are later handled as if they are `element`s (so the\n  // algorithm also works on a `root`).\n  // Nodes without children are treated as a void element, so `doctype` is thus\n  // ignored.\n  if (node.type === 'text' || node.type === 'comment') {\n    return collectText(node, {whitespace, breakBefore: true, breakAfter: true})\n  }\n\n  // 1.  If this element is not being rendered, or if the user agent is a\n  //     non-CSS user agent, then return the same value as the textContent IDL\n  //     attribute on this element.\n  //\n  //     Note: we’re not supporting stylesheets so we’re acting as if the node\n  //     is rendered.\n  //\n  //     If you want that behavior use `hast-util-to-string`.\n  //     Important: we’ll have to account for this later though.\n\n  // 2.  Let results be a new empty list.\n  results = []\n\n  // 3.  For each child node node of this element:\n  while (++index < children.length) {\n    // 3.1. Let current be the list resulting in running the inner text\n    //      collection steps with node.\n    //      Each item in results will either be a JavaScript string or a\n    //      positive integer (a required line break count).\n    // 3.2. For each item item in current, append item to results.\n    results = results.concat(\n      // @ts-ignore Looks like a parent.\n      innerTextCollection(children[index], node, {\n        whitespace,\n        breakBefore: index ? null : block,\n        breakAfter:\n          index < children.length - 1 ? br(children[index + 1]) : block\n      })\n    )\n  }\n\n  // 4.  Remove any items from results that are the empty string.\n  // 5.  Remove any runs of consecutive required line break count items at the\n  //     start or end of results.\n  // 6.  Replace each remaining run of consecutive required line break count\n  //     items with a string consisting of as many U+000A LINE FEED (LF)\n  //     characters as the maximum of the values in the required line break\n  //     count items.\n  index = -1\n  /** @type {Array.<string>} */\n  const result = []\n\n  while (++index < results.length) {\n    value = results[index]\n\n    if (typeof value === 'number') {\n      if (count !== undefined && value > count) count = value\n    } else if (value) {\n      if (count) result.push('\\n'.repeat(count))\n      count = 0\n      result.push(value)\n    }\n  }\n\n  // 7.  Return the concatenation of the string items in results.\n  return result.join('')\n}\n\n/**\n * <https://html.spec.whatwg.org/#inner-text-collection-steps>\n *\n * @param {HastNode} node\n * @param {HastParent} parent\n * @param {CollectionOptions} options\n * @returns {Array.<string|BreakNumber>}\n */\nfunction innerTextCollection(node, parent, options) {\n  if (node.type === 'element') {\n    return collectElement(node, parent, options)\n  }\n\n  if (node.type === 'text') {\n    return [\n      options.whitespace === 'normal'\n        ? collectText(node, options)\n        : collectPreText(node)\n    ]\n  }\n\n  return []\n}\n\n/**\n * Collect an element.\n *\n * @param {HastElement} node\n * @param {HastParent} parent\n * @param {CollectionOptions} options\n */\nfunction collectElement(node, parent, options) {\n  // First we infer the `white-space` property.\n  const whitespace = inferWhitespace(node, options)\n  const children = node.children || []\n  let index = -1\n  /** @type {Array.<string|BreakNumber>} */\n  let items = []\n  /** @type {BreakNumber|undefined} */\n  let prefix\n  /** @type {BreakNumber|BreakForce|undefined} */\n  let suffix\n\n  // We’re ignoring point 3, and exiting without any content here, because we\n  // deviated from the spec in `toText` at step 3.\n  if (notRendered(node)) {\n    return items\n  }\n\n  // Note: we first detect if there is going to be a break before or after the\n  // contents, as that changes the white-space handling.\n\n  // 2.  If node’s computed value of `visibility` is not `visible`, then return\n  //     items.\n  //\n  //     Note: Ignored, as everything is visible by default user agent styles.\n\n  // 3.  If node is not being rendered, then return items. [...]\n  //\n  //     Note: We already did this above.\n\n  // See `collectText` for step 4.\n\n  // 5.  If node is a `<br>` element, then append a string containing a single\n  //     U+000A LINE FEED (LF) character to items.\n  if (br(node)) {\n    suffix = '\\n'\n  }\n\n  // 7.  If node’s computed value of `display` is `table-row`, and node’s CSS\n  //     box is not the last `table-row` box of the nearest ancestor `table`\n  //     box, then append a string containing a single U+000A LINE FEED (LF)\n  //     character to items.\n  //\n  //     See: <https://html.spec.whatwg.org/#tables-2>\n  //     Note: needs further investigation as this does not account for implicit\n  //     rows.\n  else if (row(node) && findAfter(parent, node, row)) {\n    suffix = '\\n'\n  }\n\n  // 8.  If node is a `<p>` element, then append 2 (a required line break count)\n  //     at the beginning and end of items.\n  else if (p(node)) {\n    prefix = 2\n    suffix = 2\n  }\n\n  // 9.  If node’s used value of `display` is block-level or `table-caption`,\n  //     then append 1 (a required line break count) at the beginning and end of\n  //     items.\n  else if (blockOrCaption(node)) {\n    prefix = 1\n    suffix = 1\n  }\n\n  // 1.  Let items be the result of running the inner text collection steps with\n  //     each child node of node in tree order, and then concatenating the\n  //     results to a single list.\n  while (++index < children.length) {\n    items = items.concat(\n      innerTextCollection(children[index], node, {\n        whitespace,\n        breakBefore: index ? undefined : prefix,\n        breakAfter:\n          index < children.length - 1 ? br(children[index + 1]) : suffix\n      })\n    )\n  }\n\n  // 6.  If node’s computed value of `display` is `table-cell`, and node’s CSS\n  //     box is not the last `table-cell` box of its enclosing `table-row` box,\n  //     then append a string containing a single U+0009 CHARACTER TABULATION\n  //     (tab) character to items.\n  //\n  //     See: <https://html.spec.whatwg.org/#tables-2>\n  if (cell(node) && findAfter(parent, node, cell)) {\n    items.push('\\t')\n  }\n\n  // Add the pre- and suffix.\n  if (prefix) items.unshift(prefix)\n  if (suffix) items.push(suffix)\n\n  return items\n}\n\n/**\n * 4.  If node is a Text node, then for each CSS text box produced by node,\n *     in content order, compute the text of the box after application of the\n *     CSS `white-space` processing rules and `text-transform` rules, set\n *     items to the list of the resulting strings, and return items.\n *     The CSS `white-space` processing rules are slightly modified:\n *     collapsible spaces at the end of lines are always collapsed, but they\n *     are only removed if the line is the last line of the block, or it ends\n *     with a br element.\n *     Soft hyphens should be preserved.\n *\n *     Note: See `collectText` and `collectPreText`.\n *     Note: we don’t deal with `text-transform`, no element has that by\n *     default.\n *\n * See: <https://drafts.csswg.org/css-text/#white-space-phase-1>\n *\n * @param {HastText|HastComment} node\n * @param {CollectionOptions} options\n * @returns {string}\n */\nfunction collectText(node, options) {\n  const value = String(node.value)\n  /** @type {Array.<string>} */\n  const lines = []\n  /** @type {Array.<string>} */\n  const result = []\n  let start = 0\n  let index = -1\n  /** @type {RegExpMatchArray|null} */\n  let match\n  /** @type {number} */\n  let end\n  /** @type {string|undefined} */\n  let join\n\n  while (start < value.length) {\n    searchLineFeeds.lastIndex = start\n    match = searchLineFeeds.exec(value)\n    // @ts-expect-error: `index` is set.\n    end = match ? match.index : value.length\n\n    lines.push(\n      // Any sequence of collapsible spaces and tabs immediately preceding or\n      // following a segment break is removed.\n      trimAndCollapseSpacesAndTabs(\n        // [...] ignoring bidi formatting characters (characters with the\n        // Bidi_Control property [UAX9]: ALM, LTR, RTL, LRE-RLO, LRI-PDI) as if\n        // they were not there.\n        value\n          .slice(start, end)\n          .replace(/[\\u061C\\u200E\\u200F\\u202A-\\u202E\\u2066-\\u2069]/g, ''),\n        options.breakBefore,\n        options.breakAfter\n      )\n    )\n\n    start = end + 1\n  }\n\n  // Collapsible segment breaks are transformed for rendering according to the\n  // segment break transformation rules.\n  // So here we jump to 4.1.2 of [CSSTEXT]:\n  // Any collapsible segment break immediately following another collapsible\n  // segment break is removed\n  while (++index < lines.length) {\n    // *   If the character immediately before or immediately after the segment\n    //     break is the zero-width space character (U+200B), then the break is\n    //     removed, leaving behind the zero-width space.\n    if (\n      lines[index].charCodeAt(lines[index].length - 1) === 0x20_0b /* ZWSP */ ||\n      (index < lines.length - 1 &&\n        lines[index + 1].charCodeAt(0) === 0x20_0b) /* ZWSP */\n    ) {\n      result.push(lines[index])\n      join = ''\n    }\n\n    // *   Otherwise, if the East Asian Width property [UAX11] of both the\n    //     character before and after the segment break is Fullwidth, Wide, or\n    //     Halfwidth (not Ambiguous), and neither side is Hangul, then the\n    //     segment break is removed.\n    //\n    //     Note: ignored.\n    // *   Otherwise, if the writing system of the segment break is Chinese,\n    //     Japanese, or Yi, and the character before or after the segment break\n    //     is punctuation or a symbol (Unicode general category P* or S*) and\n    //     has an East Asian Width property of Ambiguous, and the character on\n    //     the other side of the segment break is Fullwidth, Wide, or Halfwidth,\n    //     and not Hangul, then the segment break is removed.\n    //\n    //     Note: ignored.\n\n    // *   Otherwise, the segment break is converted to a space (U+0020).\n    else if (lines[index]) {\n      if (join) result.push(join)\n      result.push(lines[index])\n      join = ' '\n    }\n  }\n\n  return result.join('')\n}\n\n/**\n * @param {HastText|HastComment} node\n * @returns {string}\n */\nfunction collectPreText(node) {\n  return String(node.value)\n}\n\n/**\n * 3.  Every collapsible tab is converted to a collapsible space (U+0020).\n * 4.  Any collapsible space immediately following another collapsible\n *     space—even one outside the boundary of the inline containing that\n *     space, provided both spaces are within the same inline formatting\n *     context—is collapsed to have zero advance width. (It is invisible,\n *     but retains its soft wrap opportunity, if any.)\n *\n * @param {string} value\n * @param {BreakBefore} breakBefore\n * @param {BreakAfter} breakAfter\n * @returns {string}\n */\nfunction trimAndCollapseSpacesAndTabs(value, breakBefore, breakAfter) {\n  /** @type {Array.<string>} */\n  const result = []\n  let start = 0\n  /** @type {RegExpMatchArray|null} */\n  let match\n  /** @type {number} */\n  let end\n\n  while (start < value.length) {\n    searchTabOrSpaces.lastIndex = start\n    match = searchTabOrSpaces.exec(value)\n    // @ts-expect-error: `index` is set.\n    end = match ? match.index : value.length\n\n    // If we’re not directly after a segment break, but there was white space,\n    // add an empty value that will be turned into a space.\n    if (!start && !end && match && !breakBefore) {\n      result.push('')\n    }\n\n    if (start !== end) {\n      result.push(value.slice(start, end))\n    }\n\n    start = match ? end + match[0].length : end\n  }\n\n  // If we reached the end, there was trailing white space, and there’s no\n  // segment break after this node, add an empty value that will be turned\n  // into a space.\n  // @ts-expect-error: `end` is defined.\n  if (start !== end && !breakAfter) {\n    result.push('')\n  }\n\n  return result.join(' ')\n}\n\n/**\n * We don’t support void elements here (so `nobr wbr` -> `normal` is ignored).\n *\n * @param {HastNode} node\n * @param {CollectionOptions} options\n * @returns {Whitespace}\n */\nfunction inferWhitespace(node, options) {\n  /** @type {HastProperties} */\n  let props\n\n  if (node.type === 'element') {\n    props = node.properties || {}\n    switch (node.tagName) {\n      case 'listing':\n      case 'plaintext':\n      case 'xmp':\n        return 'pre'\n      case 'nobr':\n        return 'nowrap'\n      case 'pre':\n        return props.wrap ? 'pre-wrap' : 'pre'\n      case 'td':\n      case 'th':\n        return props.noWrap ? 'nowrap' : options.whitespace\n      case 'textarea':\n        return 'pre-wrap'\n      default:\n    }\n  }\n\n  return options.whitespace\n}\n\n/** @type {TestFunctionAnything} */\nfunction hidden(node) {\n  return Boolean((node.properties || {}).hidden)\n}\n\n/** @type {TestFunctionAnything} */\nfunction closedDialog(node) {\n  return node.tagName === 'dialog' && !(node.properties || {}).open\n}\n","/**\n * @typedef {import('lowlight/lib/core.js').LowlightRoot} LowlightRoot\n * @typedef {import('lowlight/lib/core.js').HighlightSyntax} HighlightSyntax\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n * @typedef {Root|Root['children'][number]} Node\n *\n * @typedef Options\n *   Configuration.\n * @property {string} [prefix='hljs-']\n *   Prefix to use before classes.\n * @property {boolean|string[]} [subset]\n *   Scope of languages to check when auto-detecting (default: all languages).\n *   Pass `false` to not highlight code without language classes.\n * @property {boolean} [ignoreMissing=false]\n *   Swallow errors for missing languages.\n *   By default, unregistered syntaxes throw an error when they are used.\n *   Pass `true` to swallow those errors and thus ignore code with unknown code\n *   languages.\n * @property {string[]} [plainText=[]]\n *   List of plain-text languages.\n *   Pass any languages you would like to be kept as plain-text instead of\n *   getting highlighted.\n * @property {Record<string, string|string[]>} [aliases={}]\n *   Register more aliases.\n *   Passed to `lowlight.registerAlias`.\n * @property {Record<string, HighlightSyntax>} [languages={}]\n *   Register more languages.\n *   Each key/value pair passed as arguments to `lowlight.registerLanguage`.\n */\n\nimport {lowlight} from 'lowlight'\nimport {toText} from 'hast-util-to-text'\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Plugin to highlight the syntax of code with lowlight (`highlight.js`).\n *\n * @type {import('unified').Plugin<[Options?] | void[], Root>}\n */\nexport default function rehypeHighlight(options = {}) {\n  const {aliases, languages, prefix, plainText, ignoreMissing, subset} = options\n  let name = 'hljs'\n\n  if (aliases) {\n    lowlight.registerAlias(aliases)\n  }\n\n  if (languages) {\n    /** @type {string} */\n    let key\n\n    for (key in languages) {\n      if (own.call(languages, key)) {\n        lowlight.registerLanguage(key, languages[key])\n      }\n    }\n  }\n\n  if (prefix) {\n    const pos = prefix.indexOf('-')\n    name = pos > -1 ? prefix.slice(0, pos) : prefix\n  }\n\n  return (tree) => {\n    // eslint-disable-next-line complexity\n    visit(tree, 'element', (node, _, givenParent) => {\n      const parent = /** @type {Node?} */ (givenParent)\n\n      if (\n        !parent ||\n        !('tagName' in parent) ||\n        parent.tagName !== 'pre' ||\n        node.tagName !== 'code' ||\n        !node.properties\n      ) {\n        return\n      }\n\n      const lang = language(node)\n\n      if (\n        lang === false ||\n        (!lang && subset === false) ||\n        (lang && plainText && plainText.includes(lang))\n      ) {\n        return\n      }\n\n      if (!Array.isArray(node.properties.className)) {\n        node.properties.className = []\n      }\n\n      if (!node.properties.className.includes(name)) {\n        node.properties.className.unshift(name)\n      }\n\n      /** @type {LowlightRoot} */\n      let result\n\n      try {\n        result = lang\n          ? lowlight.highlight(lang, toText(parent), {prefix})\n          : // @ts-expect-error: we checked that `subset` is not a boolean.\n            lowlight.highlightAuto(toText(parent), {prefix, subset})\n      } catch (error) {\n        if (!ignoreMissing || !/Unknown language/.test(error.message)) {\n          throw error\n        }\n\n        return\n      }\n\n      if (!lang && result.data.language) {\n        node.properties.className.push('language-' + result.data.language)\n      }\n\n      if (Array.isArray(result.children) && result.children.length > 0) {\n        node.children = result.children\n      }\n    })\n  }\n}\n\n/**\n * Get the programming language of `node`.\n *\n * @param {Element} node\n * @returns {false|string|undefined}\n */\nfunction language(node) {\n  const className = node.properties && node.properties.className\n  let index = -1\n\n  if (!Array.isArray(className)) {\n    return\n  }\n\n  while (++index < className.length) {\n    const value = String(className[index])\n\n    if (value === 'no-highlight' || value === 'nohighlight') {\n      return false\n    }\n\n    if (value.slice(0, 5) === 'lang-') {\n      return value.slice(5)\n    }\n\n    if (value.slice(0, 9) === 'language-') {\n      return value.slice(9)\n    }\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n *\n * @typedef {string} Type\n * @typedef {Object<string, unknown>} Props\n *\n * @typedef {null|undefined|Type|Props|TestFunctionAnything|Array.<Type|Props|TestFunctionAnything>} Test\n */\n\n/**\n * Check if a node passes a test\n *\n * @callback TestFunctionAnything\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean|void}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} X\n * @callback TestFunctionPredicate\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is X}\n */\n\n/**\n * @callback AssertAnything\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} Y\n * @callback AssertPredicate\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is Y}\n */\n\nexport const is =\n  /**\n   * Check if a node passes a test.\n   * When a `parent` node is known the `index` of node should also be given.\n   *\n   * @type {(\n   *   (<T extends Node>(node: unknown, test: T['type']|Partial<T>|TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|TestFunctionPredicate<T>>, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => node is T) &\n   *   ((node?: unknown, test?: Test, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * Check if a node passes a test.\n     * When a `parent` node is known the `index` of node should also be given.\n     *\n     * @param {unknown} [node] Node to check\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @param {number|null|undefined} [index] Position of `node` in `parent`\n     * @param {Parent|null|undefined} [parent] Parent of `node`\n     * @param {unknown} [context] Context object to invoke `test` with\n     * @returns {boolean} Whether test passed and `node` is a `Node` (object with `type` set to non-empty `string`).\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\nexport const convert =\n  /**\n   * @type {(\n   *   (<T extends Node>(test: T['type']|Partial<T>|TestFunctionPredicate<T>) => AssertPredicate<T>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * Generate an assertion from a check.\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n/**\n * @param {Array.<Type|Props|TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array.<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {unknown[]} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Utility to assert each property in `test` is represented in `node`, and each\n * values are strictly equal.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n *\n * @param {Type} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {Array.<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(...parameters) {\n    // @ts-expect-error: spreading is fine.\n    return Boolean(check.call(this, ...parameters))\n  }\n}\n\n// Utility to return true.\nfunction ok() {\n  return true\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n */\n\n/**\n * @typedef {CONTINUE|SKIP|EXIT} Action Union of the action types\n * @typedef {number} Index Move to the sibling at index next (after node itself is completely traversed). Useful if mutating the tree, such as removing the node the visitor is currently on, or any of its previous siblings (or next siblings, in case of reverse) Results less than 0 or greater than or equal to children.length stop traversing the parent\n * @typedef {[(Action|null|undefined|void)?, (Index|null|undefined)?]} ActionTuple List with one or two values, the first an action, the second an index.\n * @typedef {null|undefined|Action|Index|ActionTuple|void} VisitorResult Any value that can be returned from a visitor\n */\n\n/**\n * Invoked when a node (matching test, if given) is found.\n * Visitors are free to transform node.\n * They can also transform the parent of node (the last of ancestors).\n * Replacing node itself, if `SKIP` is not returned, still causes its descendants to be visited.\n * If adding or removing previous siblings (or next siblings, in case of reverse) of node,\n * visitor should return a new index (number) to specify the sibling to traverse after node is traversed.\n * Adding or removing next siblings of node (or previous siblings, in case of reverse)\n * is handled as expected without needing to return a new index.\n * Removing the children property of an ancestor still results in them being traversed.\n *\n * @template {Node} V\n * @callback Visitor\n * @param {V} node Found node\n * @param {Array.<Parent>} ancestors Ancestors of node\n * @returns {VisitorResult}\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal\n */\nexport const CONTINUE = true\n/**\n * Do not traverse this node’s children\n */\nexport const SKIP = 'skip'\n/**\n * Stop traversing immediately\n */\nexport const EXIT = false\n\n/**\n * Visit children of tree which pass a test\n *\n * @param tree Abstract syntax tree to walk\n * @param test Test node, optional\n * @param visitor Function to run for each node\n * @param reverse Visit the tree in reverse order, defaults to false\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: Visitor<import('./complex-types').Matches<import('./complex-types').InclusiveDescendant<Tree>, Check>>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: Visitor<import('./complex-types').InclusiveDescendant<Tree>>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor<Node>} visitor\n     * @param {boolean} [reverse]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, null, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number?} index\n       * @param {Array.<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Object.<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = typeof node === 'object' && node !== null ? node : {}\n        /** @type {string|undefined} */\n        let name\n\n        if (typeof value.type === 'string') {\n          name =\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' +\n              color(value.type + (name ? '<' + name + '>' : '')) +\n              ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array.<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * @param {VisitorResult} value\n * @returns {ActionTuple}\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * Called when a node (matching test, if given) is found.\n * Visitors are free to transform node.\n * They can also transform the parent of node (the last of ancestors).\n * Replacing node itself, if `SKIP` is not returned, still causes its descendants to be visited.\n * If adding or removing previous siblings (or next siblings, in case of reverse) of node,\n * visitor should return a new index (number) to specify the sibling to traverse after node is traversed.\n * Adding or removing next siblings of node (or previous siblings, in case of reverse)\n * is handled as expected without needing to return a new index.\n * Removing the children property of an ancestor still results in them being traversed.\n *\n * @template {Node} V\n * @callback Visitor\n * @param {V} node Found node\n * @param {number|null} index Position of `node` in `parent`\n * @param {Parent|null} parent Parent of `node`\n * @returns {VisitorResult}\n */\n\nimport {visitParents, CONTINUE, SKIP, EXIT} from 'unist-util-visit-parents'\n\nexport {CONTINUE, SKIP, EXIT}\n\n/**\n * Visit children of tree which pass a test\n *\n * @param tree Abstract syntax tree to walk\n * @param test Test, optional\n * @param visitor Function to run for each node\n * @param reverse Fisit the tree in reverse, defaults to false\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: Visitor<import('unist-util-visit-parents/complex-types').Matches<import('unist-util-visit-parents/complex-types').InclusiveDescendant<Tree>, Check>>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: Visitor<import('unist-util-visit-parents/complex-types').InclusiveDescendant<Tree>>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor<Node>} visitor\n     * @param {boolean} [reverse]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array.<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n"],"names":["hasOwn","Object","prototype","hasOwnProperty","toStr","toString","defineProperty","gOPD","getOwnPropertyDescriptor","isArray","arr","Array","call","isPlainObject","obj","key","hasOwnConstructor","hasIsPrototypeOf","constructor","setProperty","target","options","name","enumerable","configurable","value","newValue","writable","getProperty","module","exports","extend","src","copy","copyIsArray","clone","arguments","i","length","deep","namespace","format","fmt","c","arg","tmp","precision","argIndex","args","slice","n","result","escaped","leadingZero","nextArg","slurpNumber","digits","test","parseInt","String","fromCharCode","parseFloat","toFixed","replace","JSON","stringify","toUpperCase","vsprintf","replacements","apply","concat","console","log","printf","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","trim","str","style","TypeError","lineno","column","updatePosition","lines","match","lastIndexOf","position","start","line","node","Position","whitespace","this","end","source","content","errorsList","error","msg","err","Error","reason","filename","silent","push","re","m","exec","comments","rules","comment","pos","charAt","type","declaration","prop","val","ret","property","decl","decls","declarations","isBuffer","encodeCache","encode","string","exclude","keepEscaped","l","code","nextCode","cache","defaultChars","ch","charCodeAt","getEncodeCache","encodeURIComponent","componentChars","b","d","e","f","g","h","k","p","q","r","u","v","w","Symbol","for","x","y","a","t","$$typeof","z","A","B","C","D","E","F","G","H","I","ContextConsumer","ContextProvider","Element","ForwardRef","Fragment","Lazy","Memo","Portal","Profiler","StrictMode","Suspense","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isMemo","isPortal","isProfiler","isStrictMode","isSuspense","isValidElementType","typeOf","EmailIcon","color","networkName","path","EmailShareButton","url","_a","subject","body","separator","props","openShareDialogOnClick","onClick","_","link","window","location","href","LinkedinIcon","LinkedinShareButton","title","summary","mini","windowWidth","windowHeight","RedditIcon","RedditShareButton","windowPosition","__assign","assign","s","__rest","indexOf","getOwnPropertySymbols","propertyIsEnumerable","createIcon","iconConfig","Icon","bgStyle","borderRadius","iconFillColor","round","size","rest","viewBox","width","height","cx","cy","fill","rx","ry","defaultProps","__extends","extendStatics","setPrototypeOf","__proto__","__","create","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","done","then","__generator","label","sent","trys","ops","verb","iterator","op","pop","isPromise","getBoxPositionOnWindowCenter","left","outerWidth","screenX","screenLeft","top","outerHeight","screenY","screenTop","getBoxPositionOnScreenCenter","screen","windowOpen","onClose","configRest","config","toolbar","status","directories","menubar","scrollbars","resizable","centerscreen","chrome","shareDialog","open","keys","map","join","interval_1","setInterval","closed","clearInterval","_super","ShareButton","_this","openShareDialog","onShareWindowClose","_b","_c","_d","handleClick","event","beforeOnClick","disabled","networkLink","opts","returnVal","preventDefault","render","children","className","disabledStyle","forwardedRef","resetButtonStyle","newClassName","newStyle","backgroundColor","border","padding","font","cursor","ref","opacity","Component","optsMap","CreatedButton","passedProps","forEach","displayName","forwardRef","AssertionError","message","assert","objectToGetParams","object","params","entries","filter","undefined","parse","output","hasIterator","len","deepFreezeEs6","deepFreeze","Map","clear","delete","set","Set","add","freeze","getOwnPropertyNames","isFrozen","default","deepFreeze$1","Response","mode","data","isMatchIgnored","ignoreMatch","escapeHTML","inherit$1","original","objects","emitsWrappingTags","kind","HTMLRenderer","parseTree","buffer","classPrefix","walk","addText","text","openNode","scope","sublanguage","prefix","includes","pieces","split","shift","repeat","expandScopeName","span","closeNode","TokenTree","rootNode","stack","closeAllNodes","toJSON","builder","_walk","child","every","el","_collapse","TokenTreeEmitter","super","addKeyword","addSublanguage","emitter","root","toHTML","finalize","either","splice","stripOptionsFromArgs","capture","countMatchGroups","RegExp","BACKREF_RE","_rewriteBackreferences","regexps","joinWith","numCaptures","regex","offset","out","substring","index","Number","IDENT_RE","UNDERSCORE_IDENT_RE","NUMBER_RE","C_NUMBER_RE","BINARY_NUMBER_RE","BACKSLASH_ESCAPE","begin","relevance","APOS_STRING_MODE","illegal","contains","QUOTE_STRING_MODE","COMMENT","modeOptions","excludeBegin","ENGLISH_WORD","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","HASH_COMMENT_MODE","NUMBER_MODE","C_NUMBER_MODE","BINARY_NUMBER_MODE","REGEXP_MODE","TITLE_MODE","UNDERSCORE_TITLE_MODE","METHOD_GUARD","MODES","MATCH_NOTHING_RE","RE_STARTERS_RE","SHEBANG","beginShebang","binary","resp","PHRASAL_WORDS_MODE","END_SAME_AS_BEGIN","_beginMatch","skipIfHasPrecedingDot","response","input","scopeClassName","_parent","beginKeywords","parent","__beforeBegin","keywords","compileIllegal","compileMatch","compileRelevance","beforeMatchExt","beforeMatch","starts","originalMode","endsParent","COMMON_KEYWORDS","compileKeywords","rawKeywords","caseInsensitive","scopeName","compiledKeywords","compileList","keywordList","toLowerCase","keyword","pair","scoreForKeyword","providedScore","commonKeyword","seenDeprecations","warn","deprecated","version","MultiClassError","remapScopeNames","regexes","scopeNames","emit","positions","_emit","_multi","MultiClass","beginScope","scopeSugar","_wrap","endScope","skip","returnBegin","beginMultiClass","excludeEnd","returnEnd","endMultiClass","compileLanguage","language","langRe","global","case_insensitive","MultiRegex","matchIndexes","matchAt","addRule","compile","terminators","matcherRe","lastIndex","findIndex","matchData","ResumableMultiRegex","multiRegexes","count","regexIndex","getMatcher","matcher","resumingScanAtSamePosition","considerAll","m2","compilerExtensions","classNameAliases","compileMode","cmode","isCompiled","ext","keywordPattern","$pattern","keywordPatternRe","beginRe","endsWithParent","endRe","terminatorEnd","illegalRe","variants","cachedVariants","variant","dependencyOnParent","expandOrCloneMode","mm","term","rule","buildModeRegex","escape","inherit","NO_MATCH","highlight","hljs","languages","aliases","plugins","SAFE_MODE","LANGUAGE_NOT_FOUND","PLAINTEXT_LANGUAGE","disableAutodetect","ignoreUnescapedHTML","noHighlightRe","languageDetectRe","cssSelector","__emitter","shouldNotHighlight","languageName","codeOrLanguageName","optionsOrCode","ignoreIllegals","context","fire","_highlight","codeToHighlight","continuation","keywordHits","processKeywords","modeBuffer","buf","word","matchText","keywordRelevance","startsWith","cssClass","substr","processBuffer","subLanguage","continuations","highlightAuto","_emitter","processSubLanguage","emitMultiClass","klass","startNewMode","endOfMode","matchPlusRemainder","matched","lexeme","doIgnore","resumeScanAtSamePosition","doEndMatch","endMode","origin","lastMatch","processLexeme","textBeforeMatch","badRule","newMode","beforeCallbacks","cb","doBeginMatch","processed","iterations","getLanguage","md","list","current","unshift","item","processContinuations","processedCount","_top","_illegalBy","resultSoFar","errorRaised","languageSubset","plaintext","justTextHighlightResult","results","autoDetection","sorted","sort","supersetOf","best","secondBest","highlightElement","element","block","classes","parentNode","find","_class","blockLanguage","textContent","innerHTML","currentLang","resultLang","classList","updateClassName","wantsHighlight","highlightAll","document","readyState","querySelectorAll","registerAliases","aliasList","alias","lang","plugin","addEventListener","highlightBlock","configure","userOptions","initHighlighting","initHighlightingOnLoad","registerLanguage","languageDefinition","error$1","rawDefinition","bind","unregisterLanguage","listLanguages","addPlugin","upgradePluginAPI","debugMode","safeMode","versionString","HLJS","built_in","meta","own","stringifyPosition","point","VFileMessage","place","parts","ruleId","file","fatal","note","basename","assertPath","seenNonSlash","firstNonSlashEnd","extIndex","dirname","unmatchedSlash","extname","startPart","startDot","preDotState","segments","joined","absolute","allowAboveRoot","lastSlashIndex","lastSegmentLength","lastSlash","dots","normalizeString","normalize","sep","proc","cwd","isUrl","fileURLOrPath","urlToPath","URL","protocol","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","order","VFile","messages","history","stored","assertNonEmpty","assertPart","stem","encoding","info","fail","part","bail","getPrototypeOf","trough","fns","pipeline","run","values","middlewareIndex","callback","fn","middleware","called","wrapped","parameters","fnExpectsCallback","exception","wrap","use","middelware","unified","base","transformers","attachers","frozen","freezeIndex","processor","assertUnfrozen","Parser","Compiler","attacher","transformer","POSITIVE_INFINITY","settings","addList","addPreset","entry","doc","vfile","assertParser","newable","assertCompiler","assertNode","executor","tree","runSync","complete","assertDone","process","processSync","destination","asyncName","Boolean","looksLikeAVFile","one","includeImageAlt","alt","remove","items","chunkStart","from","syntaxExtension","all","extension","hook","right","constructs","existing","before","asciiAlpha","regexCheck","asciiDigit","asciiHexDigit","asciiAlphanumeric","asciiPunctuation","asciiAtext","asciiControl","markdownLineEndingOrSpace","markdownLineEnding","markdownSpace","unicodeWhitespace","unicodePunctuation","factorySpace","effects","ok","max","limit","enter","consume","exit","tokenize","contentStart","attempt","parser","contentInitial","lineStart","previous","token","contentType","self","childFlow","childToken","lineStartOffset","continued","containerState","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","events","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","check","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","now","containerContinue","flow","_tokenizer","flowContinue","writeToChild","eof","stream","sliceStream","defineSkip","write","seen","nok","disable","null","blankLine","partial","subtokenize","jumps","lineIndex","otherIndex","otherEvent","subevents","more","_isInFirstContentOfListItem","subcontent","_container","eventIndex","startPosition","startPositions","tokenizer","childEvents","gaps","adjust","breaks","_gfmTasklistFirstContentOfListItem","contentEnd","continuationConstruct","contentContinue","prefixed","tail","sliceSerialize","initial","flowInitial","afterConstruct","resolver","resolveAll","createResolver","initializeFactory","field","notText","atBreak","resolveAllLineSuffixes","extraResolver","chunks","tabs","bufferIndex","chunk","_index","_bufferIndex","createTokenizer","initialize","columnStart","resolveAllConstructs","consumed","accountForPotentialSkip","fields","constructFactory","construct","addResult","onsuccessfulcheck","expandTabs","atTab","serializeChunks","main","expectedCode","state","startIndex","startBufferIndex","endIndex","endBufferIndex","view","sliceChunks","chunkIndex","go","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","def","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","resolveTo","thematicBreak","marker","sequence","initialSize","atMarker","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","furtherBlankLines","notInCurrentItem","indentConstruct","blockQuote","after","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","destinationEnclosedBefore","destinationRaw","destinationEnclosed","destinationEnclosedEscape","destinationRawEscape","factoryLabel","markerType","labelEscape","factoryTitle","atFirstTitleBreak","atTitleBreak","titleEscape","factoryWhitespace","normalizeIdentifier","definition","identifier","labelAfter","titleConstruct","defined","codeIndented","afterStartPrefix","afterPrefix","indentedContent","setextUnderline","paragraph","closingSequence","closingSequenceEnd","heading","htmlBlockNames","htmlRawNames","htmlFlow","startTag","declarationStart","tagCloseStart","continuationDeclarationInside","tagName","commentOpenInside","cdataOpenInside","basicSelfClosing","completeAttributeNameBefore","completeClosingTagAfter","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCharacterDataInside","continuationAtLineEnding","nextBlankConstruct","htmlContinueStart","htmlLineEnd","continuationRawEndTag","codeFenced","closingFenceConstruct","closingSequenceStart","sizeOpen","nonLazyLine","initialPrefix","sequenceOpen","infoOpen","openAfter","infoAfter","decodeEntity","characters","char","entity","createElement","characterReference","numeric","characterEscape","lineEnding","labelEnd","labelStart","_balanced","_inactive","balanced","afterLabelEnd","resourceConstruct","fullReferenceConstruct","collapsedReferenceConstruct","close","media","group","insideSpan","destinationAfter","between","afterLabel","classifyCharacter","attention","attentionMarkers","_open","_close","openingSequence","nextEvents","movePoint","fenceOpenInside","headingBreak","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","declarationOpen","instruction","tagOpen","commentOpen","cdataOpen","commentStart","commentStartDash","commentClose","atLineEnding","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","gap","tailExitIndex","headEnterIndex","extensions","combineExtensions","search","fromMarkdown","transforms","canContainEols","autolink","opener","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeText","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreakEscape","hardBreak","hardBreakTrailing","html","htmlFlowData","htmlText","htmlTextData","image","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","resource","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","mdastExtensions","tokenStack","listStack","resume","setData","getData","prepareList","handler","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","and","depth","referenceType","fragment","decodeNumericCharacterReference","ordered","spread","checked","compiler","postprocess","atCarriageReturn","endPosition","Math","ceil","preprocess","combined","visitParents","visitor","reverse","is","factory","parents","visit","subresult","grandparents","toResult","pointStart","pointEnd","definitions","id","clean","unknown","augment","handlers","passThrough","returnNode","unknownHandler","nodes","head","loose","properties","footnoteReference","footnoteOrder","role","revert","subtype","suffix","contents","listItemLoose","blockquote","break","footnote","footnoteById","no","dangerous","imageReference","inlineCode","linkReference","listLoose","table","rows","align","row","cell","toml","ignore","yaml","footnoteDefinition","allowDangerousHtml","hName","hProperties","hChildren","ctx","toHast","foot","listItems","backReference","footer","bridge","mutate","Schema","normal","space","merge","Info","attribute","boolean","booleanish","overloadedBoolean","number","commaSeparated","spaceSeparated","commaOrSpaceSeparated","mustUseProperty","powers","increment","checks","DefinedInfo","mask","mark","transform","attributes","xlink","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDescribedBy","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabel","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","charSet","cite","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","dateTime","decoding","defer","dir","dirName","download","draggable","encType","enterKeyHint","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","hidden","high","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inputMode","integrity","isMap","itemId","itemProp","itemRef","itemScope","itemType","loading","loop","low","manifest","maxLength","method","min","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforePrint","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onContextMenu","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","optimum","pattern","ping","placeholder","playsInline","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rowSpan","sandbox","scoped","seamless","selected","shape","sizes","slot","spellCheck","srcDoc","srcLang","srcSet","tabIndex","translate","typeMustMatch","useMap","aLink","archive","axis","background","bgColor","borderColor","bottomMargin","cellPadding","cellSpacing","charOff","classId","codeBase","codeType","compact","declare","face","frame","frameBorder","hSpace","leftMargin","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","profile","prompt","rev","rightMargin","scheme","scrolling","standby","topMargin","valueType","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","filterRes","filterUnits","focusable","focusHighlight","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","numOctaves","observer","operator","orient","orientation","overflow","overlay","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","restart","rotate","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","to","u1","u2","unicode","viewTarget","visibility","widths","x1","x2","xChannelSelector","y1","y2","yChannelSelector","zoomAndPan","rehypeFilter","allowedElements","disallowedElements","allowElement","parent_","unwrapDisallowed","protocols","valid","dash","cap","schema","Type","camelcase","datasetToProperty","kebab","datasetToAttribute","$0","hastToReact","tableElements","childrenToReact","childIndex","toReact","has","skipHtml","parentSchema","addProperty","listDepth","component","components","basic","linkTarget","transformLinkUri","inline","level","transformImageUri","getInputElement","getElementsBeforeCount","textAlign","isHeader","sourcePos","rawSourcePos","sourcePosition","includeElementIndex","siblingCount","padRight","padLeft","styleReplacer","parseStyle","$1","renderers","astPlugins","escapeHtml","allowNode","allowedTypes","disallowedTypes","includeNodeIndex","ReactMarkdown","deprecation","remarkPlugins","rehypePlugins","hastNode","uri","first","colon","propTypes","optional","ARDUINO_KW","_hints","literal","ARDUINO","DECLTYPE_AUTO_RE","NAMESPACE_RE","FUNCTION_TYPE_RE","CPP_PRIMITIVE_TYPES","STRINGS","NUMBERS","PREPROCESSOR","FUNCTION_TITLE","CPP_KEYWORDS","_type_hints","FUNCTION_DISPATCH","_hint","EXPRESSION_CONTAINS","EXPRESSION_CONTEXT","FUNCTION_DECLARATION","cPlusPlus","kws","VAR","BRACED_VAR","SUBST","HERE_DOC","QUOTE_STRING","ARITHMETIC","KNOWN_SHEBANG","FUNCTION","TYPES","KEYWORDS","preprocessor","strings","VERBATIM_STRING","VERBATIM_STRING_NO_LF","SUBST_NO_LF","INTERPOLATED_STRING","INTERPOLATED_VERBATIM_STRING","INTERPOLATED_VERBATIM_STRING_NO_LF","STRING","GENERIC_MODIFIER","TYPE_IDENT_RE","AT_IDENTIFIER","TAGS","MEDIA_FEATURES","PSEUDO_CLASSES","PSEUDO_ELEMENTS","ATTRIBUTES","modes","IMPORTANT","HEXCOLOR","ATTRIBUTE_SELECTOR_MODE","CSS_NUMBER_MODE","CSS_VARIABLE","keyframePosition","COMMENTS","VARIABLES","LITERALS","ARRAY","ANY_KEY","frac","hexDigits","NUMERIC","recurRegex","substitution","JAVA_IDENT_RE","GENERIC_IDENT_RE","ANNOTATION","PARAMS","ERROR_TYPES","BUILT_IN_GLOBALS","BUILT_IN_VARIABLES","BUILT_INS","IDENT_RE$1","FRAGMENT","XML_TAG","isTrulyOpeningTag","afterMatchIndex","nextChar","tag","hasClosingTag","KEYWORDS$1","decimalInteger","NUMBER","HTML_TEMPLATE","CSS_TEMPLATE","TEMPLATE_STRING","SUBST_INTERNALS","SUBST_AND_COMMENTS","PARAMS_CONTAINS","CLASS_OR_EXTENDS","CLASS_REFERENCE","FUNCTION_DEFINITION","FUNCTION_CALL","PROPERTY_ACCESS","GETTER_OR_SETTER","FUNC_LEAD_IN_RE","FUNCTION_VARIABLE","LABEL","VARIABLE","ANNOTATION_USE_SITE","KOTLIN_NUMBER_MODE","KOTLIN_NESTED_COMMENT","KOTLIN_PAREN_TYPE","KOTLIN_PAREN_TYPE2","PSEUDO_SELECTORS","PSEUDO_SELECTORS$1","INTERP_IDENT_RE","RULES","VALUE_MODES","STRING_MODE","IDENT_MODE","AT_KEYWORDS","PARENS_MODE","VALUE_WITH_RULESETS","MIXIN_GUARD_MODE","RULE_MODE","AT_RULE_MODE","VAR_RULE_MODE","SELECTOR_MODE","PSEUDO_SELECTOR_MODE","OPENING_LONG_BRACKET","CLOSING_LONG_BRACKET","LONG_BRACKETS","FUNC","ASSIGNMENT","TARGET","INLINE_HTML","LINK","BOLD","ITALIC","CONTAINABLE","IDENTIFIER_RE","CLASS_KEYWORDS","REGEX_MODIFIERS","PERL_KEYWORDS","METHOD","STRING_CONTAINS","REGEX_DELIMS","PAIRED_DOUBLE_RE","middle","PAIRED_RE","PERL_DEFAULT_CONTAINS","SINGLE_QUOTED","DOUBLE_QUOTED","HEREDOC","PROMPT","LITERAL_BRACKET","digitpart","pointfloat","COMMENT_TYPE","NUMBER_TYPES_RE","OPERATORS_RE","PUNCTUATION_RE","RUBY_METHOD_RE","RUBY_KEYWORDS","YARDOCTAG","IRB_OBJECT","COMMENT_MODES","RUBY_DEFAULT_CONTAINS","IRB_DEFAULT","FUNCTION_INVOKE","NUMBER_SUFFIX","BUILTINS","PSEUDO_ELEMENTS$1","PSEUDO_CLASSES$1","COMMENT_MODE","RESERVED_FUNCTIONS","COMBOS","FUNCTIONS","exceptions","when","qualifyFn","reduceRelevancy","keywordWrapper","dotKeywords","optionalDotKeywords","keywordTypes","literals","precedencegroupKeywords","numberSignKeywords","builtIns","operatorHead","operatorCharacter","identifierHead","identifierCharacter","typeIdentifier","keywordAttributes","availabilityKeywords","WHITESPACE","BLOCK_COMMENT","DOT_KEYWORD","KEYWORD_GUARD","PLAIN_KEYWORDS","kw","KEYWORD","KEYWORD_MODES","OPERATOR_GUARD","OPERATORS","ESCAPED_CHARACTER","rawDelimiter","ESCAPED_NEWLINE","INTERPOLATION","MULTILINE_STRING","SINGLE_LINE_STRING","QUOTED_IDENTIFIER","IDENTIFIERS","TYPE","GENERIC_ARGUMENTS","TUPLE","GENERIC_PARAMETERS","FUNCTION_PARAMETERS","INIT_SUBSCRIPT","OPERATOR_DECLARATION","PRECEDENCEGROUP","interpolation","submodes","DECORATOR","swapMode","replacement","indx","tsLanguage","MM_DD_YYYY","YYYY_MM_DD","TIME_12H","TIME_24H","DATE","DOC_COMMENT","TAG_NAME_RE","XML_ENTITIES","XML_META_KEYWORDS","XML_META_PAR_KEYWORDS","APOS_META_STRING_MODE","QUOTE_META_STRING_MODE","TAG_INTERNALS","URI_CHARACTERS","CONTAINER_STRING","TIMESTAMP","VALUE_CONTAINER","OBJECT","fault","eval","EvalError","range","RangeError","ReferenceError","syntax","SyntaxError","URIError","Constructor","FormattedError","defaultPrefix","HastEmitter","other","lowlight","subset","registerAlias","convertElement","tagNameFactory","tests","castFactory","any","anyFactory","findAfter","searchLineFeeds","searchTabOrSpaces","br","notRendered","blockOrCaption","toText","inferWhitespace","breakBefore","breakAfter","collectText","innerTextCollection","collectElement","collectPreText","trimAndCollapseSpacesAndTabs","rehypeHighlight","plainText","ignoreMissing","givenParent","convert","typeFactory","propsFactory"],"sourceRoot":""}