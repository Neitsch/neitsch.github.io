{"version":3,"file":"static/chunks/pages/author/[slug]-260dba0fa08c6564.js","mappings":"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","sources":["webpack://_N_E/./components/author-chip.tsx","webpack://_N_E/./components/container.tsx","webpack://_N_E/./components/header.tsx","webpack://_N_E/./components/footer.tsx","webpack://_N_E/./components/meta.tsx","webpack://_N_E/./components/layout.tsx","webpack://_N_E/./components/post-preview.tsx","webpack://_N_E/./components/section-separator.tsx","webpack://_N_E/./pages/author/[slug].tsx","webpack://_N_E/?1374"],"sourcesContent":["import type { AuthorChipFragment } from \"../generated/graphql\";\nimport { Chip, Avatar } from \"@mui/material\";\nimport gql from \"graphql-tag\";\nimport Link from \"next/link\";\n\nexport const AUTHOR_CHIP_FRAGMENT = gql`\n  fragment AuthorChip on Author {\n    name\n    slug\n    picture {\n      url(\n        transformation: {\n          image: { resize: { fit: crop, width: 100, height: 100 } }\n        }\n      )\n    }\n  }\n`;\nexport default function AuthorChip({\n  author,\n}: {\n  author: AuthorChipFragment;\n}): JSX.Element {\n  return (\n    <Link href={`/author/${author.slug}`} passHref>\n      <Chip\n        avatar={<Avatar alt={author.name} src={author.picture?.url} />}\n        clickable\n        label={author.name}\n      />\n    </Link>\n  );\n}\n","import { Container as MuiContainer } from \"@mui/material\";\nimport type { ReactNode } from \"react\";\n\nexport default function Container({\n  children,\n}: {\n  readonly children: ReactNode;\n}): JSX.Element {\n  return <MuiContainer>{children}</MuiContainer>;\n}\n","import { Link as MuiLink } from \"@mui/material\";\nimport Link from \"next/link\";\n\nexport default function Header(): JSX.Element {\n  return (\n    <Link href=\"/\" passHref>\n      <MuiLink variant=\"h1\">Yet another SWE Blog.</MuiLink>\n    </Link>\n  );\n}\n","import Container from \"./container\";\nimport { Typography, Link as MuiLink } from \"@mui/material\";\nimport Link from \"next/link\";\n\nexport default function Footer(): JSX.Element {\n  const link = (\n    <Link href=\"https://github.com/Neitsch/neitsch.github.io\" passHref>\n      <MuiLink underline=\"always\">here</MuiLink>\n    </Link>\n  );\n  return (\n    <footer>\n      <Container>\n        <Typography>Built with NextJS. Find the source {link}.</Typography>\n      </Container>\n    </footer>\n  );\n}\n","import Head from \"next/head\";\nimport { useRouter } from \"next/router\";\nimport { useEffect } from \"react\";\n\nexport default function Meta(): JSX.Element {\n  const router = useRouter();\n\n  useEffect(() => {\n    const handleRouteChange = (url: string): void => {\n      (\n        window as unknown as {\n          goatcounter: { count: ({ path }: { readonly path: string }) => void };\n        }\n      ).goatcounter.count({\n        path: url,\n      });\n    };\n\n    router.events.on(\"routeChangeComplete\", handleRouteChange);\n\n    return (): void => {\n      router.events.off(\"routeChangeStart\", handleRouteChange);\n    };\n  }, [router.events]);\n  return (\n    <Head>\n      <link\n        href=\"/favicon/apple-touch-icon.png\"\n        rel=\"apple-touch-icon\"\n        sizes=\"180x180\"\n      />\n      <link\n        href=\"/favicon/favicon-32x32.png\"\n        rel=\"icon\"\n        sizes=\"32x32\"\n        type=\"image/png\"\n      />\n      <link\n        href=\"/favicon/favicon-16x16.png\"\n        rel=\"icon\"\n        sizes=\"16x16\"\n        type=\"image/png\"\n      />\n      <link href=\"/favicon/site.webmanifest\" rel=\"manifest\" />\n      <link\n        color=\"#000000\"\n        href=\"/favicon/safari-pinned-tab.svg\"\n        rel=\"mask-icon\"\n      />\n      <link href=\"/favicon/favicon.ico\" rel=\"shortcut icon\" />\n      <meta content=\"#000000\" name=\"msapplication-TileColor\" />\n      <meta content=\"/favicon/browserconfig.xml\" name=\"msapplication-config\" />\n      <meta content=\"#000\" name=\"theme-color\" />\n      <link href=\"/feed.xml\" rel=\"alternate\" type=\"application/rss+xml\" />\n      <meta content=\"Personal blog.\" name=\"description\" />\n      <script\n        async\n        data-goatcounter=\"https://nigel.goatcounter.com/count\"\n        data-goatcounter-settings=\"{}\"\n        src=\"//gc.zgo.at/count.js\"\n      />\n    </Head>\n  );\n}\n","import Footer from \"../components/footer\";\nimport Meta from \"../components/meta\";\n\nexport default function Layout({\n  children,\n}: {\n  readonly children: Readonly<JSX.Element | JSX.Element[]>;\n}): JSX.Element {\n  return (\n    <>\n      <Meta />\n      <div className=\"min-h-screen\">\n        <main>{children}</main>\n      </div>\n      <Footer />\n    </>\n  );\n}\n","import type { PostPreviewFragment } from \"../generated/graphql\";\nimport AuthorChip, { AUTHOR_CHIP_FRAGMENT } from \"./author-chip\";\nimport {\n  Card,\n  Link as MuiLink,\n  CardActionArea,\n  CardContent,\n  CardMedia,\n  Box,\n  Typography,\n} from \"@mui/material\";\nimport gql from \"graphql-tag\";\nimport Link from \"next/link\";\n\nexport const POST_PREVIEW_FRAGMENT = gql`\n  ${AUTHOR_CHIP_FRAGMENT}\n  fragment PostPreview on Post {\n    title\n    slug\n    excerpt\n    coverImage {\n      url(\n        transformation: {\n          image: { resize: { fit: crop, width: 2000, height: 1000 } }\n        }\n      )\n    }\n    author {\n      ...AuthorChip\n    }\n  }\n`;\n\nexport default function PostPreview({\n  post: {\n    title,\n\n    coverImage,\n    excerpt,\n    author,\n    slug,\n  },\n}: {\n  post: PostPreviewFragment;\n}): JSX.Element {\n  const titleElem = (\n    <Box flexGrow={1}>\n      <Typography variant=\"h4\">{title}</Typography>\n    </Box>\n  );\n  const previewHeader = (\n    <Box display=\"flex\">\n      {titleElem}\n      {author ? (\n        <Box alignSelf=\"flex-end\">\n          <AuthorChip author={author} />\n        </Box>\n      ) : null}\n    </Box>\n  );\n  const excerptElem = <Typography variant=\"body1\">{excerpt}</Typography>;\n  const innerCardContent = (\n    <>\n      {previewHeader}\n      {excerptElem}\n    </>\n  );\n  const cardContent = (\n    <Link href={`/posts/${slug}`} passHref>\n      <MuiLink>{innerCardContent}</MuiLink>\n    </Link>\n  );\n  return (\n    <Card>\n      <CardMedia component=\"img\" src={coverImage?.url} />\n\n      <CardContent>\n        <CardActionArea>{cardContent}</CardActionArea>\n      </CardContent>\n    </Card>\n  );\n}\n","export default function SectionSeparator(): JSX.Element {\n  return <hr className=\"border-accent-2 mt-28 mb-24\" />;\n}\n","import Container from \"../../components/container\";\nimport Header from \"../../components/header\";\nimport Layout from \"../../components/layout\";\nimport PostPreview, {\n  POST_PREVIEW_FRAGMENT,\n} from \"../../components/post-preview\";\nimport SectionSeparator from \"../../components/section-separator\";\nimport type {\n  AllAuthorsQuery,\n  AllAuthorsQueryVariables,\n  LookupAuthorQuery,\n  LookupAuthorQueryVariables,\n} from \"../../generated/graphql\";\nimport { getApolloClient } from \"../../lib/graphcms\";\nimport { Card, CardContent, Typography, Grid } from \"@mui/material\";\nimport gql from \"graphql-tag\";\nimport type { GetStaticProps, GetStaticPaths } from \"next\";\nimport ReactMarkdown from \"react-markdown\";\nimport rehypeHighlight from \"rehype-highlight\";\n\nexport const ALL_AUTHORS = gql`\n  query AllAuthors {\n    authors {\n      slug\n      posts {\n        slug\n      }\n    }\n  }\n`;\nexport const LOOKUP_AUTHOR = gql`\n  ${POST_PREVIEW_FRAGMENT}\n  fragment AuthorInfo on Author {\n    name\n    biography\n    title\n  }\n  query LookupAuthor($slug: String!) {\n    postsConnection(where: { author: { slug: $slug } }) {\n      edges {\n        node {\n          ...PostPreview\n        }\n      }\n    }\n    author(where: { slug: $slug }) {\n      ...AuthorInfo\n    }\n  }\n`;\nexport default function Author({\n  author,\n  postsConnection,\n}: LookupAuthorQuery): JSX.Element {\n  if (!author) {\n    throw Error(\"author is null\");\n  }\n  return (\n    <Layout>\n      <Container>\n        <Header />\n        <Card>\n          <CardContent>\n            <Typography component=\"h1\" variant=\"h4\">\n              {author.name} ({author.title})\n            </Typography>\n            <ReactMarkdown rehypePlugins={[[rehypeHighlight]]}>\n              {author.biography}\n            </ReactMarkdown>\n          </CardContent>\n        </Card>\n        <SectionSeparator />\n        <Typography variant=\"h4\">Posts by the author</Typography>\n        <Grid container spacing={5}>\n          {postsConnection.edges.map(({ node }) => (\n            <Grid item key={node.slug} md={6} xs={12}>\n              <PostPreview post={node} />\n            </Grid>\n          ))}\n        </Grid>\n      </Container>\n    </Layout>\n  );\n}\n\nexport const getStaticProps: GetStaticProps = async ({\n  params,\n}: {\n  readonly params?: { readonly slug?: string; readonly postCursor?: string[] };\n  readonly preview?: boolean;\n}) => {\n  const client = getApolloClient();\n  const result = await client\n    .query<LookupAuthorQuery, LookupAuthorQueryVariables>({\n      query: LOOKUP_AUTHOR,\n      variables: {\n        slug: params?.slug ?? \"\",\n      },\n    })\n    .then(({ data }: { readonly data: Readonly<LookupAuthorQuery> }) => {\n      return data;\n    });\n  return {\n    props: result,\n  };\n};\nexport const getStaticPaths: GetStaticPaths = async () => {\n  const client = getApolloClient();\n  const { authors } = await client\n    .query<AllAuthorsQuery, AllAuthorsQueryVariables>({ query: ALL_AUTHORS })\n    .then(({ data }: { readonly data: Readonly<AllAuthorsQuery> }) => {\n      return data;\n    });\n  const authorPaths = authors.map(({ slug }) => {\n    return {\n      params: { slug },\n    };\n  });\n  return {\n    paths: authorPaths,\n    // fallback: true,\n    fallback: false,\n  };\n};\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/author/[slug]\",\n      function () {\n        return require(\"private-next-pages/author/[slug].tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/author/[slug]\"])\n      });\n    }\n  "],"names":["AUTHOR_CHIP_FRAGMENT","gql","AuthorChip","author","href","slug","passHref","avatar","alt","name","src","picture","url","clickable","label","Container","children","Header","variant","Footer","link","underline","Typography","Meta","router","useRouter","useEffect","handleRouteChange","window","goatcounter","count","path","events","on","off","rel","sizes","type","color","content","async","Layout","className","POST_PREVIEW_FRAGMENT","PostPreview","post","title","coverImage","excerpt","titleElem","flexGrow","previewHeader","display","alignSelf","excerptElem","innerCardContent","cardContent","component","SectionSeparator","ALL_AUTHORS","LOOKUP_AUTHOR","Author","postsConnection","Error","rehypePlugins","rehypeHighlight","biography","container","spacing","edges","map","node","item","md","xs","__NEXT_P","push"],"sourceRoot":""}