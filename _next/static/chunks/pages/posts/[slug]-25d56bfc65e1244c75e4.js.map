{"version":3,"file":"static/chunks/pages/posts/[slug]-25d56bfc65e1244c75e4.js","mappings":"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","sources":["webpack://_N_E/./components/container.tsx","webpack://_N_E/./components/header.tsx","webpack://_N_E/./components/alert.tsx","webpack://_N_E/./components/footer.tsx","webpack://_N_E/./components/meta.tsx","webpack://_N_E/./components/layout.tsx","webpack://_N_E/./components/more-stories.tsx","webpack://_N_E/./components/post-preview.tsx","webpack://_N_E/./components/section-separator.tsx","webpack://_N_E/./pages/posts/[slug].tsx","webpack://_N_E/?8fd3"],"sourcesContent":["import { Container as MuiContainer } from \"@material-ui/core\";\n\nexport default function Container({\n  children,\n}: {\n  children: JSX.Element | JSX.Element[];\n}): JSX.Element {\n  return <MuiContainer>{children}</MuiContainer>;\n}\n","import { Link as MuiLink } from \"@material-ui/core\";\nimport Link from \"next/link\";\n\nexport default function Header(): JSX.Element {\n  return (\n    <Link href=\"/\" passHref>\n      <MuiLink variant=\"h1\">Nigel&apos;s Blog.</MuiLink>\n    </Link>\n  );\n}\n","import Container from \"./container\";\nimport cn from \"classnames\";\nimport Link from \"next/link\";\n\nexport default function Alert({ preview }: { preview: boolean }): JSX.Element {\n  return (\n    <div\n      className={cn(\"border-b\", {\n        \"bg-accent-7 border-accent-7 text-white\": preview,\n        \"bg-accent-1 border-accent-2\": !preview,\n      })}\n    >\n      <Container>\n        <div className=\"py-2 text-center text-sm\">\n          {preview ? (\n            <>\n              This page is a preview.{\" \"}\n              <Link href=\"/api/exit-preview\" passHref>\n                <a className=\"underline hover:text-cyan duration-200 transition-colors\">\n                  Click here\n                </a>\n              </Link>{\" \"}\n              to exit preview mode.\n            </>\n          ) : null}\n        </div>\n      </Container>\n    </div>\n  );\n}\n","import Container from \"./container\";\n\nexport default function Footer(): JSX.Element {\n  return (\n    <footer className=\"bg-accent-1 border-t border-accent-2\">\n      <Container>\n        <div className=\"py-28 flex flex-col lg:flex-row items-center\">\n          <h3 className=\"text-4xl lg:text-5xl font-bold tracking-tighter leading-tight text-center lg:text-left mb-10 lg:mb-0 lg:pr-4 lg:w-1/2\">\n            Nigel Schuster&apos;s blog.\n          </h3>\n        </div>\n      </Container>\n    </footer>\n  );\n}\n","import Head from \"next/head\";\n\nexport default function Meta(): JSX.Element {\n  return (\n    <Head>\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"180x180\"\n        href=\"/favicon/apple-touch-icon.png\"\n      />\n      <link\n        rel=\"icon\"\n        type=\"image/png\"\n        sizes=\"32x32\"\n        href=\"/favicon/favicon-32x32.png\"\n      />\n      <link\n        rel=\"icon\"\n        type=\"image/png\"\n        sizes=\"16x16\"\n        href=\"/favicon/favicon-16x16.png\"\n      />\n      <link rel=\"manifest\" href=\"/favicon/site.webmanifest\" />\n      <link\n        rel=\"mask-icon\"\n        href=\"/favicon/safari-pinned-tab.svg\"\n        color=\"#000000\"\n      />\n      <link rel=\"shortcut icon\" href=\"/favicon/favicon.ico\" />\n      <meta name=\"msapplication-TileColor\" content=\"#000000\" />\n      <meta name=\"msapplication-config\" content=\"/favicon/browserconfig.xml\" />\n      <meta name=\"theme-color\" content=\"#000\" />\n      <link rel=\"alternate\" type=\"application/rss+xml\" href=\"/feed.xml\" />\n      <meta name=\"description\" content={`Personal blog.`} />\n    </Head>\n  );\n}\n","import Alert from \"../components/alert\";\nimport Footer from \"../components/footer\";\nimport Meta from \"../components/meta\";\n\nexport default function Layout({\n  preview,\n  children,\n}: {\n  preview: boolean;\n  children: JSX.Element | JSX.Element[];\n}): JSX.Element {\n  return (\n    <>\n      <Meta />\n      <div className=\"min-h-screen\">\n        <Alert preview={preview} />\n        <main>{children}</main>\n      </div>\n      <Footer />\n    </>\n  );\n}\n","import PostPreview from \"../components/post-preview\";\nimport { MoreStoriesFragment } from \"../generated/graphql\";\nimport { POST_PREVIEW_FRAGMENT } from \"./post-preview\";\nimport { Typography, Grid } from \"@material-ui/core\";\nimport gql from \"graphql-tag\";\n\nexport const MORE_STORIES = gql`\n  ${POST_PREVIEW_FRAGMENT}\n  fragment MoreStories on Query {\n    moreStories: posts(\n      orderBy: date_DESC\n      first: 2\n      where: { slug_not_in: [$slug] }\n    ) {\n      ...PostPreview\n    }\n  }\n`;\n\nexport default function MoreStories({\n  moreStories,\n}: MoreStoriesFragment): JSX.Element {\n  return (\n    <div>\n      <Typography variant=\"h4\">More Stories</Typography>\n      <Grid container spacing={5}>\n        {moreStories.map((post) => (\n          <Grid item xs={12} md={6} key={post.slug}>\n            <PostPreview {...post} />\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n}\n","import { PostPreviewFragment } from \"../generated/graphql\";\nimport {\n  Card,\n  Avatar,\n  Link as MuiLink,\n  CardActionArea,\n  CardContent,\n  CardMedia,\n  Box,\n  Typography,\n  Chip,\n} from \"@material-ui/core\";\nimport gql from \"graphql-tag\";\nimport Link from \"next/link\";\n\nexport const POST_PREVIEW_FRAGMENT = gql`\n  fragment PostPreview on Post {\n    title\n    slug\n    excerpt\n    coverImage {\n      url(\n        transformation: {\n          image: { resize: { fit: crop, width: 2000, height: 1000 } }\n        }\n      )\n    }\n    author {\n      name\n      picture {\n        url(\n          transformation: {\n            image: { resize: { width: 100, height: 100, fit: crop } }\n          }\n        )\n      }\n    }\n  }\n`;\n\nexport default function PostPreview({\n  title,\n  coverImage,\n  excerpt,\n  author,\n  slug,\n}: PostPreviewFragment): JSX.Element {\n  return (\n    <Card>\n      <CardMedia component=\"img\" src={coverImage?.url} />\n\n      <CardContent>\n        <CardActionArea>\n          <Link href={`/posts/${slug}`} passHref>\n            <MuiLink>\n              <Box display=\"flex\">\n                <Box flexGrow={1}>\n                  <Typography variant=\"h4\">{title}</Typography>\n                </Box>\n                {author ? (\n                  <Box alignSelf=\"flex-end\">\n                    <Chip\n                      avatar={\n                        <Avatar alt={author.name} src={author.picture?.url} />\n                      }\n                      label={author.name}\n                    />\n                  </Box>\n                ) : null}\n              </Box>\n              <Typography variant=\"body1\">{excerpt}</Typography>\n            </MuiLink>\n          </Link>\n        </CardActionArea>\n      </CardContent>\n    </Card>\n  );\n}\n","export default function SectionSeparator(): JSX.Element {\n  return <hr className=\"border-accent-2 mt-28 mb-24\" />;\n}\n","import Container from \"../../components/container\";\nimport Header from \"../../components/header\";\nimport Layout from \"../../components/layout\";\nimport MoreStories from \"../../components/more-stories\";\nimport { MORE_STORIES } from \"../../components/more-stories\";\nimport SectionSeparator from \"../../components/section-separator\";\nimport { PostLookupFragment } from \"../../generated/graphql\";\nimport { getAllPostsWithSlug, getPostAndMorePosts } from \"../../lib/graphcms\";\nimport {\n  Card,\n  Box,\n  Chip,\n  Avatar,\n  Typography,\n  CardContent,\n  CardMedia,\n} from \"@material-ui/core\";\nimport gql from \"graphql-tag\";\nimport langx86 from \"highlight.js/lib/languages/x86asm\";\nimport \"highlight.js/styles/default.css\";\nimport { GetStaticProps, GetStaticPaths } from \"next\";\nimport ErrorPage from \"next/error\";\nimport Head from \"next/head\";\nimport { useRouter } from \"next/router\";\nimport ReactMarkdown from \"react-markdown\";\nimport rehypeHighlight from \"rehype-highlight\";\n\nexport const POST_FRAGMENT = gql`\n  fragment Post on Post {\n    title\n    slug\n    content\n    date\n    ogImage: coverImage {\n      url(\n        transformation: {\n          image: { resize: { fit: crop, width: 2000, height: 1000 } }\n        }\n      )\n    }\n    coverImage {\n      url(\n        transformation: {\n          image: { resize: { fit: crop, width: 2000, height: 1000 } }\n        }\n      )\n    }\n    author {\n      name\n      picture {\n        url(\n          transformation: {\n            image: { resize: { fit: crop, width: 100, height: 100 } }\n          }\n        )\n      }\n    }\n  }\n`;\nexport const POST_LOOKUP = gql`\n  ${MORE_STORIES}\n  fragment PostLookup on Query {\n    post(stage: $stage, where: { slug: $slug }) {\n      ...Post\n    }\n    ...MoreStories\n  }\n`;\n\nexport default function Post(lookup: PostLookupFragment): JSX.Element {\n  const router = useRouter();\n  const { post } = lookup;\n\n  if (!router.isFallback && !post?.slug) {\n    return <ErrorPage statusCode={404} />;\n  }\n\n  return (\n    <Layout preview={false}>\n      <Container>\n        <Header />\n        {router.isFallback ? (\n          <div>Loading…</div>\n        ) : (\n          <>\n            {post ? (\n              <>\n                <Head>\n                  <title>{post.title}</title>\n                </Head>\n                <Card>\n                  <CardMedia component=\"img\" src={post.coverImage?.url} />\n                  <CardContent>\n                    <Box display=\"flex\">\n                      <Box flexGrow={1}>\n                        <Typography variant=\"h4\">{post.title}</Typography>\n                      </Box>\n                      <Box alignSelf=\"flex-end\">\n                        <Chip\n                          avatar={\n                            <Avatar\n                              alt={post.author?.name}\n                              src={post.author?.picture?.url}\n                            />\n                          }\n                          label={post.author?.name}\n                        />\n                      </Box>\n                    </Box>\n                    <ReactMarkdown\n                      rehypePlugins={[\n                        [rehypeHighlight, { languages: { x86asm: langx86 } }],\n                      ]}\n                    >\n                      {post.content}\n                    </ReactMarkdown>\n                  </CardContent>\n                </Card>\n              </>\n            ) : (\n              <span>Something went wrong</span>\n            )}\n            <SectionSeparator />\n            <MoreStories {...lookup} />\n          </>\n        )}\n      </Container>\n    </Layout>\n  );\n}\n\nexport const getStaticProps: GetStaticProps = async ({\n  params,\n  preview = false,\n}: {\n  params?: { slug?: string };\n  preview?: boolean;\n}) => {\n  const data = await getPostAndMorePosts(params?.slug ?? \"\", preview);\n  return {\n    props: data,\n  };\n};\n\nexport const getStaticPaths: GetStaticPaths = async () => {\n  const { posts } = await getAllPostsWithSlug();\n  return {\n    paths: posts.map((input) => {\n      const slug = input?.slug ?? \"\";\n      return {\n        params: { slug },\n      };\n    }),\n    // fallback: true,\n    fallback: false,\n  };\n};\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/posts/[slug]\",\n      function () {\n        return require(\"private-next-pages/posts/[slug].tsx\");\n      }\n    ]);\n  "],"names":["Container","children","Header","href","passHref","variant","Alert","preview","className","cn","Footer","Meta","rel","sizes","type","color","name","content","Layout","MORE_STORIES","gql","POST_PREVIEW_FRAGMENT","MoreStories","moreStories","container","spacing","map","post","item","xs","md","slug","PostPreview","title","coverImage","excerpt","author","component","src","url","display","flexGrow","alignSelf","avatar","alt","picture","label","SectionSeparator","POST_FRAGMENT","POST_LOOKUP","Post","lookup","router","useRouter","isFallback","Card","CardMedia","CardContent","Box","Typography","Chip","Avatar","rehypePlugins","rehypeHighlight","languages","x86asm","langx86","statusCode","window","__NEXT_P","push"],"sourceRoot":""}