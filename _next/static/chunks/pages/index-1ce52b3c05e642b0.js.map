{"version":3,"file":"static/chunks/pages/index-1ce52b3c05e642b0.js","mappings":"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","sources":["webpack://_N_E/./components/author-chip.tsx","webpack://_N_E/./components/container.tsx","webpack://_N_E/./components/header.tsx","webpack://_N_E/./components/footer.tsx","webpack://_N_E/./components/meta.tsx","webpack://_N_E/./components/layout.tsx","webpack://_N_E/./components/more-stories.tsx","webpack://_N_E/./components/post-preview.tsx","webpack://_N_E/./components/hero-post.tsx","webpack://_N_E/./components/intro.tsx","webpack://_N_E/./pages/index.tsx","webpack://_N_E/"],"sourcesContent":["import type { AuthorChipFragment } from \"../generated/graphql\";\nimport { Chip, Avatar } from \"@mui/material\";\nimport gql from \"graphql-tag\";\nimport Link from \"next/link\";\n\nexport const AUTHOR_CHIP_FRAGMENT = gql`\n  fragment AuthorChip on Author {\n    name\n    slug\n    picture {\n      url(\n        transformation: {\n          image: { resize: { fit: crop, width: 100, height: 100 } }\n        }\n      )\n    }\n  }\n`;\nexport default function AuthorChip({\n  author,\n}: {\n  author: AuthorChipFragment;\n}): JSX.Element {\n  return (\n    <Link href={`/author/${author.slug}`} passHref>\n      <Chip\n        avatar={<Avatar alt={author.name} src={author.picture?.url} />}\n        clickable\n        label={author.name}\n      />\n    </Link>\n  );\n}\n","import { Container as MuiContainer } from \"@mui/material\";\nimport type { ReactNode } from \"react\";\n\nexport default function Container({\n  children,\n}: {\n  readonly children: ReactNode;\n}): JSX.Element {\n  return <MuiContainer>{children}</MuiContainer>;\n}\n","import { Link as MuiLink } from \"@mui/material\";\nimport Link from \"next/link\";\n\nexport default function Header(): JSX.Element {\n  return (\n    <Link href=\"/\" passHref>\n      <MuiLink variant=\"h1\">Yet another SWE Blog.</MuiLink>\n    </Link>\n  );\n}\n","import Container from \"./container\";\nimport { Typography, Link as MuiLink } from \"@mui/material\";\nimport Link from \"next/link\";\n\nexport default function Footer(): JSX.Element {\n  const link = (\n    <Link href=\"https://github.com/Neitsch/neitsch.github.io\" passHref>\n      <MuiLink underline=\"always\">here</MuiLink>\n    </Link>\n  );\n  return (\n    <footer>\n      <Container>\n        <Typography>Built with NextJS. Find the source {link}.</Typography>\n      </Container>\n    </footer>\n  );\n}\n","import Head from \"next/head\";\nimport { useRouter } from \"next/router\";\nimport { useEffect } from \"react\";\n\nexport default function Meta(): JSX.Element {\n  const router = useRouter();\n\n  useEffect(() => {\n    const handleRouteChange = (url: string): void => {\n      (\n        window as unknown as {\n          goatcounter: { count: ({ path }: { readonly path: string }) => void };\n        }\n      ).goatcounter.count({\n        path: url,\n      });\n    };\n\n    router.events.on(\"routeChangeComplete\", handleRouteChange);\n\n    return (): void => {\n      router.events.off(\"routeChangeStart\", handleRouteChange);\n    };\n  }, [router.events]);\n  return (\n    <Head>\n      <link\n        href=\"/favicon/apple-touch-icon.png\"\n        rel=\"apple-touch-icon\"\n        sizes=\"180x180\"\n      />\n      <link\n        href=\"/favicon/favicon-32x32.png\"\n        rel=\"icon\"\n        sizes=\"32x32\"\n        type=\"image/png\"\n      />\n      <link\n        href=\"/favicon/favicon-16x16.png\"\n        rel=\"icon\"\n        sizes=\"16x16\"\n        type=\"image/png\"\n      />\n      <link href=\"/favicon/site.webmanifest\" rel=\"manifest\" />\n      <link\n        color=\"#000000\"\n        href=\"/favicon/safari-pinned-tab.svg\"\n        rel=\"mask-icon\"\n      />\n      <link href=\"/favicon/favicon.ico\" rel=\"shortcut icon\" />\n      <meta content=\"#000000\" name=\"msapplication-TileColor\" />\n      <meta content=\"/favicon/browserconfig.xml\" name=\"msapplication-config\" />\n      <meta content=\"#000\" name=\"theme-color\" />\n      <link href=\"/feed.xml\" rel=\"alternate\" type=\"application/rss+xml\" />\n      <meta content=\"Personal blog.\" name=\"description\" />\n      <script\n        async\n        data-goatcounter=\"https://nigel.goatcounter.com/count\"\n        data-goatcounter-settings=\"{}\"\n        src=\"//gc.zgo.at/count.js\"\n      />\n    </Head>\n  );\n}\n","import Footer from \"../components/footer\";\nimport Meta from \"../components/meta\";\n\nexport default function Layout({\n  children,\n}: {\n  readonly children: Readonly<JSX.Element | JSX.Element[]>;\n}): JSX.Element {\n  return (\n    <>\n      <Meta />\n      <div className=\"min-h-screen\">\n        <main>{children}</main>\n      </div>\n      <Footer />\n    </>\n  );\n}\n","import PostPreview from \"../components/post-preview\";\nimport type { MoreStoriesFragment } from \"../generated/graphql\";\nimport { POST_PREVIEW_FRAGMENT } from \"./post-preview\";\nimport { Typography, Grid } from \"@mui/material\";\nimport gql from \"graphql-tag\";\n\nexport const MORE_STORIES = gql`\n  ${POST_PREVIEW_FRAGMENT}\n  fragment MoreStories on Query {\n    moreStories: posts(\n      orderBy: date_DESC\n      first: 2\n      where: { slug_not_in: [$slug] }\n    ) {\n      ...PostPreview\n    }\n  }\n`;\n\nexport default function MoreStories({\n  moreStories,\n}: MoreStoriesFragment): JSX.Element {\n  return (\n    <div>\n      <Typography variant=\"h4\">More Stories</Typography>\n      <Grid container spacing={5}>\n        {moreStories.map((post) => (\n          <Grid item key={post.slug} md={6} xs={12}>\n            <PostPreview post={post} />\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n}\n","import type { PostPreviewFragment } from \"../generated/graphql\";\nimport AuthorChip, { AUTHOR_CHIP_FRAGMENT } from \"./author-chip\";\nimport {\n  Card,\n  Link as MuiLink,\n  CardActionArea,\n  CardContent,\n  CardMedia,\n  Box,\n  Typography,\n} from \"@mui/material\";\nimport gql from \"graphql-tag\";\nimport Link from \"next/link\";\n\nexport const POST_PREVIEW_FRAGMENT = gql`\n  ${AUTHOR_CHIP_FRAGMENT}\n  fragment PostPreview on Post {\n    title\n    slug\n    excerpt\n    coverImage {\n      url(\n        transformation: {\n          image: { resize: { fit: crop, width: 2000, height: 1000 } }\n        }\n      )\n    }\n    author {\n      ...AuthorChip\n    }\n  }\n`;\n\nexport default function PostPreview({\n  post: {\n    title,\n\n    coverImage,\n    excerpt,\n    author,\n    slug,\n  },\n}: {\n  post: PostPreviewFragment;\n}): JSX.Element {\n  const titleElem = (\n    <Box flexGrow={1}>\n      <Typography variant=\"h4\">{title}</Typography>\n    </Box>\n  );\n  const previewHeader = (\n    <Box display=\"flex\">\n      {titleElem}\n      {author ? (\n        <Box alignSelf=\"flex-end\">\n          <AuthorChip author={author} />\n        </Box>\n      ) : null}\n    </Box>\n  );\n  const excerptElem = <Typography variant=\"body1\">{excerpt}</Typography>;\n  const innerCardContent = (\n    <>\n      {previewHeader}\n      {excerptElem}\n    </>\n  );\n  const cardContent = (\n    <Link href={`/posts/${slug}`} passHref>\n      <MuiLink>{innerCardContent}</MuiLink>\n    </Link>\n  );\n  return (\n    <Card>\n      <CardMedia component=\"img\" src={coverImage?.url} />\n\n      <CardContent>\n        <CardActionArea>{cardContent}</CardActionArea>\n      </CardContent>\n    </Card>\n  );\n}\n","import type { HeroPostFragment } from \"../generated/graphql\";\nimport AuthorChip, { AUTHOR_CHIP_FRAGMENT } from \"./author-chip\";\nimport {\n  Card,\n  Box,\n  Link as MuiLink,\n  Typography,\n  CardContent,\n  CardActionArea,\n  CardMedia,\n} from \"@mui/material\";\nimport gql from \"graphql-tag\";\nimport Link from \"next/link\";\n\nexport const HERO_POST_FRAGMENT = gql`\n  ${AUTHOR_CHIP_FRAGMENT}\n  fragment HeroPost on Post {\n    title\n    slug\n    excerpt\n    coverImage {\n      url(\n        transformation: {\n          image: { resize: { fit: crop, width: 2000, height: 1000 } }\n        }\n      )\n    }\n    author {\n      ...AuthorChip\n    }\n  }\n`;\n\nexport default function HeroPost({\n  post: { title, coverImage, author, slug, excerpt },\n}: {\n  post: HeroPostFragment;\n}): JSX.Element {\n  const titleElem = (\n    <Box flexGrow={1}>\n      <Typography variant=\"h4\">{title}</Typography>\n    </Box>\n  );\n  const headerElem = (\n    <Box display=\"flex\">\n      {titleElem}\n      {author ? (\n        <Box alignSelf=\"flex-end\">\n          <AuthorChip author={author} />\n        </Box>\n      ) : null}\n    </Box>\n  );\n  const excerptElem = <Typography variant=\"body1\">{excerpt}</Typography>;\n  return (\n    <Card>\n      <CardMedia component=\"img\" src={coverImage?.url} />\n      <CardContent>\n        <CardActionArea>\n          <Link href={`/posts/${slug}`} passHref>\n            <MuiLink>\n              {headerElem}\n\n              {excerptElem}\n            </MuiLink>\n          </Link>\n        </CardActionArea>\n      </CardContent>\n    </Card>\n  );\n}\n","import Header from \"./header\";\nimport { Typography, Box } from \"@mui/material\";\n\nexport default function Intro(): JSX.Element {\n  return (\n    <Box display=\"flex\">\n      <Box flexGrow={1}>\n        <Header />\n      </Box>\n      <Box alignSelf=\"flex-end\">\n        <Typography variant=\"h4\">Software engineering notes.</Typography>\n      </Box>\n    </Box>\n  );\n}\n","import Container from \"../components/container\";\nimport HeroPost, { HERO_POST_FRAGMENT } from \"../components/hero-post\";\nimport Intro from \"../components/intro\";\nimport Layout from \"../components/layout\";\nimport MoreStories from \"../components/more-stories\";\nimport { POST_PREVIEW_FRAGMENT } from \"../components/post-preview\";\nimport type {\n  IndexLookupQuery,\n  IndexLookupQueryVariables,\n} from \"../generated/graphql\";\nimport { ApolloClient, InMemoryCache } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport type { GetStaticProps } from \"next\";\nimport Head from \"next/head\";\n\nexport const INDEX_LOOKUP = gql`\n  ${POST_PREVIEW_FRAGMENT}\n  ${HERO_POST_FRAGMENT}\n\n  query IndexLookup {\n    posts(orderBy: date_DESC, first: 20) {\n      ...PostPreview\n      ...HeroPost\n    }\n  }\n`;\n\nexport default function index(lookup: IndexLookupQuery): JSX.Element {\n  const { posts } = lookup;\n  const morePosts = [...posts];\n  const heroPost = morePosts.shift();\n  const heroPostElem = heroPost ? <HeroPost post={heroPost} /> : null;\n  return (\n    <Layout>\n      <Head>\n        <title>Nigel Schuster&apos;s blog</title>\n      </Head>\n      <Container>\n        <Intro />\n        {heroPostElem}\n        <MoreStories moreStories={morePosts} />\n      </Container>\n    </Layout>\n  );\n}\n\nexport const getStaticProps: GetStaticProps = async () => {\n  const client = new ApolloClient({\n    uri: process.env.GRAPHCMS_PROJECT_API ?? \"\",\n    cache: new InMemoryCache(),\n  });\n  const posts = await client\n    .query<IndexLookupQuery, IndexLookupQueryVariables>({\n      query: INDEX_LOOKUP,\n    })\n    .then(({ data }: { readonly data: Readonly<IndexLookupQuery> }) => {\n      return data;\n    });\n  return {\n    props: posts,\n  };\n};\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/\",\n      function () {\n        return require(\"private-next-pages/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/\"])\n      });\n    }\n  "],"names":["AUTHOR_CHIP_FRAGMENT","gql","AuthorChip","author","href","slug","passHref","avatar","alt","name","src","picture","url","clickable","label","Container","children","Header","variant","Footer","link","underline","Typography","Meta","router","useRouter","useEffect","handleRouteChange","window","goatcounter","count","path","events","on","off","rel","sizes","type","color","content","async","Layout","className","MORE_STORIES","POST_PREVIEW_FRAGMENT","MoreStories","moreStories","container","spacing","map","post","item","md","xs","PostPreview","title","coverImage","excerpt","titleElem","flexGrow","previewHeader","display","alignSelf","excerptElem","innerCardContent","cardContent","component","HERO_POST_FRAGMENT","HeroPost","Box","headerElem","Card","CardMedia","CardContent","CardActionArea","Intro","INDEX_LOOKUP","index","lookup","posts","morePosts","heroPost","shift","heroPostElem","__NEXT_P","push"],"sourceRoot":""}